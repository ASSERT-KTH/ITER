bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencies(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
2	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  def);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  def);	  this(compiler,    compiler.getInitializingDependencies(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
3	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  DEF_METADATA);	  this(compiler,    compiler.getInitializingDependencies(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
4	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  INVALID_METADATA);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  INVALID_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  INVALID_METADATA);	  this(compiler,    compiler.getInitializingDependencies(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
5	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingDependencies(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
6	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  candidates,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  candidates,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  candidates,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyConstants(),    candidates);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
7	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  candidates);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  candidates);	  this(compiler,    compiler.getInitializingDependencyConstants(),    candidates);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
8	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  candidates,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  candidates,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  candidates,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyConstants(),    candidates);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
9	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  candidates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyConstants(),  candidates);	  this(compiler,    compiler.getInitializingDependencyConstants(),    candidates);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
10	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  def,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  def,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  def,  reachingUses);	  this(compiler,    compiler.getDependencyInclusive(),    def);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  useCfgNode);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  useCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  useCfgNode);	  this(compiler,    compiler.getDependencyInclusive(),    def);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  def);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  def);	  this(compiler,    compiler.getDependencyInclusive(),    def);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  this(compiler,  compiler.getInclusive(),  def);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInclusive(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInclusive(),  def);	  this(compiler,    compiler.getDependencyInclusive(),    def);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  def,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  def,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  def,  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInclusive(),    def);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  this(compiler,  def.getDependencyInclusive(),  compiler);  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  def.getDependencyInclusive(),  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  def.getDependencyInclusive(),  compiler);	  this(compiler,    compiler.getDependencyInclusive(),    def);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  cfgNode.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  cfgNode.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  cfgNode.getDependencyInclusive());	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInclusive(),  inlinedNewDependencies);	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  def);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInclusive(),  def);	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  this(compiler,  def.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  def.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  def.getDependencyInclusive());	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  this(compiler,  cfgNode.getReturnType());  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getReturnType());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getReturnType());	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
22	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
23	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  INVALID_DEPENDENCY_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  INVALID_DEPENDENCY_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  INVALID_DEPENDENCY_PREDICATE);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
24	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  candidates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  candidates);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
25	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  defMetadata);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  defMetadata);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
26	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  def);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  def);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
27	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  LinkedHashSet  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  LinkedHashSet  <  Integer>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  LinkedHashSet  <  Integer>();	  this.inlinedNewDependencies    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
28	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  Integer>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  ArrayList  <  Integer>();	  this.inlinedNewDependencies    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
29	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  TreeSet  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  TreeSet  <  Integer>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  TreeSet  <  Integer>();	  this.inlinedNewDependencies    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
30	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  Integer>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  LinkedList  <  Integer>();	  this.inlinedNewDependencies    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
31	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  Integer>(1);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  Integer>(1);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  HashSet  <  Integer>(1);	  this.inlinedNewDependencies    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
32	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  reachingUses);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  spreadingCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  spreadingCandiates);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariableDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingStatementDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingStatementDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingStatementDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedCfgNode);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTALL;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTALL;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTALL;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INVALID;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
39	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INVALID  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INVALID  +  1;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INVALID  +  1;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INVALID;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
40	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.InVALID;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.InVALID;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.InVALID;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INVALID;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
41	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
42	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
43	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  compiler);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  compiler);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
44	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
45	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedCfgNode);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
46	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler,  inlinedNewDependencies);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
47	[BUG]  [BUGGY]  this(compiler,  false,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  false,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  false,  inlinedNewDependencies);	  this(compiler,    false);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
48	[BUG]  [BUGGY]  this(compiler,  false,  cfgNode);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  false,  cfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  false,  cfgNode);	  this(compiler,    false);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
49	[BUG]  [BUGGY]  this(compiler,  false,  true);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  false,  true);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  false,  true);	  this(compiler,    false);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
50	[BUG]  [BUGGY]  this(compiler,  false,  null);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  false,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  false,  null);	  this(compiler,    false);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
51	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInstantiator(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInstantiator(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyInstantiator(),  inlinedNewDependencies);	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
52	[BUG]  [BUGGY]  this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
53	[BUG]  [BUGGY]  this(compiler,  inlineCfgNode,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlineCfgNode,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlineCfgNode,  compiler.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
54	[BUG]  [BUGGY]  this(compiler,  inlineNewDependencies,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlineNewDependencies,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlineNewDependencies,  compiler.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
55	[BUG]  [BUGGY]  this(compiler,  defMetadata,  cfgNode.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  cfgNode.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  cfgNode.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
56	[BUG]  [BUGGY]  this(compiler,  cfgNode,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode,  compiler.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
57	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInclusivePrettyPrinter());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
58	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusivePrettyPrinter());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusivePrettyPrinter());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusivePrettyPrinter());	  this(compiler,    compiler.getDependencyInclusivePrettyPrinter());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
59	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinePrettyPrinter());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinePrettyPrinter());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinePrettyPrinter());	  this(compiler,    compiler.getDependencyInclusivePrettyPrinter());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
60	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInclusivePrettyPrinter());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInclusivePrettyPrinter());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInclusivePrettyPrinter());	  this(compiler,    compiler.getDependencyInclusivePrettyPrinter());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
61	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  def);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  def);	  this(compiler,    compiler.getDependencyInclusivePrettyPrinter());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
62	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDeclaration());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariableDeclaration());	  this(compiler,    compiler.getInitializingReachingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
63	[BUG]  [BUGGY]  this(compiler,  compiler.getReachingFunctionDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getReachingFunctionDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getReachingFunctionDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingReachingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
64	[BUG]  [BUGGY]  this(compiler,  compiler.getReachingFunctionDeclaration());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getReachingFunctionDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getReachingFunctionDeclaration());	  this(compiler,    compiler.getInitializingReachingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
65	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  def);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  def);	  this(compiler,    compiler.getInitializingReachingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
66	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  defMetadata);	  this(compiler,    compiler.getInitializingReachingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
67	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_PREDICATE  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_PREDICATE  +  1;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_PREDICATE  +  1;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    SIDE_EFFECT_PREDICATE;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
68	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_VREDICATE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_VREDICATE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_VREDICATE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    SIDE_EFFECT_PREDICATE;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
69	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  SIDE_EFFECT_PREDICATE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  SIDE_EFFECT_PREDICATE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  SIDE_EFFECT_PREDICATE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
70	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  null;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  null;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
71	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  Compiler.instance;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  Compiler.instance;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  Compiler.instance;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
72	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
73	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(0);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(0);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
74	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  false);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  false);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
75	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlinedNewDependencies);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractSensitiveInlineVariable(compiler);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
76	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlines);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlines);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlines);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractSensitiveInlineVariable(compiler);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
77	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlineNewDependencies);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlineNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  inlineNewDependencies);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractSensitiveInlineVariable(compiler);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
78	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newLinkedList();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newLinkedList();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newLinkedList();	  this.inlinedNewDependencies    =    Lists.newArrayList();    this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
79	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet();	  this.inlinedNewDependencies    =    Lists.newArrayList();    this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
80	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.newArrayList();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Collections.newArrayList();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Collections.newArrayList();	  this.inlinedNewDependencies    =    Lists.newArrayList();    this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
81	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newHashSet();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newHashSet();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newHashSet();	  this.inlinedNewDependencies    =    Lists.newArrayList();    this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
82	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newInstanceList();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newInstanceList();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newInstanceList();	  this.inlinedNewDependencies    =    Lists.newArrayList();    this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
83	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler,  inlinedNewDependencies);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    SimpleCompiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
84	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler,  compiler);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler,  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler,  compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    SimpleCompiler(compiler);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
85	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
86	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  reachingUses);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
87	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  defMetadata);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  defMetadata);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
88	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  useCfgNode);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  useCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  useCfgNode);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
89	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedDependencies(),  defMetadata);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
90	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  usingCfgNode);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  usingCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  usingCfgNode);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
91	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  mappingConstants.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  mappingConstants.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  mappingConstants.getInitializingDependencyConstants());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
92	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  def);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  def);	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
93	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getInitializingDependencyConstants());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
94	[BUG]  [BUGGY]  this(compiler,  numUseWithinUseCfgNode,  compiler.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  numUseWithinUseCfgNode,  compiler.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  numUseWithinUseCfgNode,  compiler.getInitializingDependencyConstants());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
95	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  defMetadata);	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
96	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  DEF_METADATA);	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
97	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  cfgNode.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  cfgNode.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  cfgNode.getInitializingDependencyConstants());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
98	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  SIDE_EFFECT_PREDICATE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  SIDE_EFFECT_PREDICATE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  SIDE_EFFECT_PREDICATE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getRawParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
99	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  parser;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  parser;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  parser;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getRawParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
100	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawName()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawName()  :  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawName()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getRawParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
101	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInlinedDependencies());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInlinedDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInlinedDependencies());	  this(compiler,    compiler.getInlinedDependencies());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
102	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getInlinedDependencies());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
103	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler);	  this(compiler,    compiler.getInlinedDependencies());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
104	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInlinedDependencies());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInlinedDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInlinedDependencies());	  this(compiler,    compiler.getInlinedDependencies());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
105	[BUG]  [BUGGY]  this(compiler,  compiler.getInlineDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlineDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlineDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getInlinedDependencies());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
106	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencies());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencies());	  this(compiler,    compiler.getInlinedDependencies());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
107	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  TreeSet  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  TreeSet  <  AbstractCompiler>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  TreeSet  <  AbstractCompiler>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashSet    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
108	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  Set  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  Set  <  AbstractCompiler>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  Set  <  AbstractCompiler>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashSet    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
109	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  ArrayList  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  ArrayList  <  AbstractCompiler>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  ArrayList  <  AbstractCompiler>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashSet    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
110	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  ConcurrentHashSet  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  ConcurrentHashSet  <  AbstractCompiler>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  ConcurrentHashSet  <  AbstractCompiler>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashSet    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
111	[BUG]  [BUGGY]  this(compiler,  compiler.getFunctionDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getFunctionDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getFunctionDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
112	[BUG]  [BUGGY]  this(compiler,  compiler.getDeclaration());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDeclaration());	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
113	[BUG]  [BUGGY]  this(compiler,  compiler.getInlineFunctionDeclaration());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlineFunctionDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlineFunctionDeclaration());	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
114	[BUG]  [BUGGY]  this(compiler,  compiler.getFunctionDeclaration(),  def);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getFunctionDeclaration(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getFunctionDeclaration(),  def);	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
115	[BUG]  [BUGGY]  this(compiler,  compiler.getGenericFunctionDeclaration());  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getGenericFunctionDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getGenericFunctionDeclaration());	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
116	[BUG]  [BUGGY]  this(compiler,  compiler.getFunctionDeclaration(),  null);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getFunctionDeclaration(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getFunctionDeclaration(),  null);	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
117	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(compiler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(compiler);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
118	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
119	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getPrevious()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getPrevious()  :  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getPrevious()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNext()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
120	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterType(0):  compiler;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterType(0):  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterType(0):  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNext()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
121	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlines,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlines,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlines,  reachingUses);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlines);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
122	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  false);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  false);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlines);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
123	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  inlines);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  inlines);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyConstants(),  inlines);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlines);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
124	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  reachingUses);	  this(compiler,    compiler.getDependencyInstantiator(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
125	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  spreadingCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  spreadingCandiates);	  this(compiler,    compiler.getDependencyInstantiator(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
126	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedCfgNode);	  this(compiler,    compiler.getDependencyInstantiator(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
127	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  approachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  approachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  approachingUses);	  this(compiler,    compiler.getDependencyInstantiator(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
128	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariable(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
129	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariable(),  reachingUses);	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
130	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyVariable());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyVariable());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyVariable());	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
131	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariable(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariable(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariable(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
132	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  def);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariable(),  def);	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
133	[BUG]  [BUGGY]  this(compiler,  compiler.getReachingVariable());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getReachingVariable());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getReachingVariable());	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
134	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  candidates);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  candidates);	  this(compiler,    compiler.getInitializingDependencies(),    reachingUses);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
135	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencies(),    reachingUses);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
136	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  candidate);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  candidate);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  candidate);	  this(compiler,    compiler.getInitializingDependencies(),    reachingUses);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
137	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  def);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  def);	  this(compiler,    compiler.getInitializingDependencies(),    reachingUses);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
138	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  null);	  this(compiler,    compiler.getInitializingDependencies(),    reachingUses);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
139	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  fillCandiates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  fillCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  fillCandiates);	  this(compiler,    compiler.getInitializingDependencies(),    reachingUses);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
140	[BUG]  [BUGGY]  this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
141	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  inlinedNewDependencies);	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
142	[BUG]  [BUGGY]  this(compiler,  defMetadata,  cfgNode.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  cfgNode.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  cfgNode.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
143	[BUG]  [BUGGY]  this(compiler,  inlineCfgNode,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlineCfgNode,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlineCfgNode,  compiler.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
144	[BUG]  [BUGGY]  this(compiler,  inlineNewDependencies,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlineNewDependencies,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlineNewDependencies,  compiler.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
145	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  null);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  null);	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
146	[BUG]  [BUGGY]  this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  inlinedNewDependencies,  compiler.getInitializingDependencies());	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
147	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInitializingDependencies(),  inlinedNewDependencies);	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
148	[BUG]  [BUGGY]  this(compiler,  defMetadata,  mappingConfig.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  mappingConfig.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  mappingConfig.getInitializingDependencies());	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
149	[BUG]  [BUGGY]  this(compiler,  defMetadata,  cfgNode.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  cfgNode.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  cfgNode.getInitializingDependencies());	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
150	[BUG]  [BUGGY]  this(compiler,  inlineNewDependencies,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlineNewDependencies,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlineNewDependencies,  compiler.getInitializingDependencies());	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
151	[BUG]  [BUGGY]  this(compiler,  cfgNode,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode,  compiler.getInitializingDependencies());	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
152	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.emptySet();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Collections.emptySet();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Collections.emptySet();	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
153	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Collections.EMPTY_LIST;	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
154	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>();	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
155	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_SET;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_SET;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Collections.EMPTY_SET;	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
156	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  null);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
157	[BUG]  [BUGGY]  this(compiler,  null,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  null,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  null,  inlinedNewDependencies);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
158	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
159	[BUG]  [BUGGY]  this(compiler,  null,  cfgNode);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  null,  cfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  null,  cfgNode);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
160	[BUG]  [BUGGY]  this(compiler,  null,  null);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  null,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  null,  null);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
161	[BUG]  [BUGGY]  this(compiler,  cfgNode,  null);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode,  null);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
162	[BUG]  [BUGGY]  this(compiler,  cfgNode);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
163	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  def,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  def,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  def,  reachingUses);	  this(compiler,    compiler.getInitializingDependencies(),    def);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
164	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  def);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  def);	  this(compiler,    compiler.getInitializingDependencies(),    def);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
165	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  useCfgNode);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  useCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  useCfgNode);	  this(compiler,    compiler.getInitializingDependencies(),    def);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
166	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencies(),    def);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
167	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencies(),  def);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencies(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencies(),  def);	  this(compiler,    compiler.getInitializingDependencies(),    def);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
168	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  null);	  this(compiler,    compiler.getDependencyInstantiator(),    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
169	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies(),  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedNewDependencies(),  null);	  this(compiler,    compiler.getDependencyInstantiator(),    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
170	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  null);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedDependencies(),  null);	  this(compiler,    compiler.getDependencyInstantiator(),    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
171	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  null,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  null,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  null,  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInstantiator(),    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
172	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  reachingUses);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
173	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedCfgNode);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
174	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  spreadingCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  spreadingCandiates);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
175	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  reachingUses);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
176	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  approachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  approachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  approachingUses);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
177	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newHashSet();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newHashSet();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newHashSet();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
178	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newLinkedList();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newLinkedList();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newLinkedList();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
179	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList(0);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList(0);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
180	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newInstance();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newInstance();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newInstance();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
181	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  def,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  def,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  def,  reachingUses);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    def);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
182	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  def);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariableDeclaration(),  def);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    def);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
183	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  def);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependency(),  def);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    def);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
184	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  useCfgNode);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  useCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  useCfgNode);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    def);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
185	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  def);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  def);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    def);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
186	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
187	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  def);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  def);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
188	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyDeclaration());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyDeclaration());	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
189	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  null);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
190	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  defMetadata);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
191	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  DEF_METADATA);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
192	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  Integer.MAX_VALUE);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
193	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  null);	  this(compiler,    compiler.getInitializingDependencies(),    null);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
194	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  null,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  null,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  null,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencies(),    null);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
195	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlines);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlines);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlines);	  this(compiler,    compiler.getInitializingDependencies(),    null);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
196	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  null);	  this(compiler,    compiler.getInitializingDependencies(),    null);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
197	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getDependencyInclusive());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
198	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive(),  reachingUses);	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
199	[BUG]  [BUGGY]  this(compiler,  numUseWithinUseCfgNode,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  numUseWithinUseCfgNode,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  numUseWithinUseCfgNode,  compiler.getDependencyInclusive());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
200	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive(),  def);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive(),  def);	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
201	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  mappingConfig.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  mappingConfig.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  mappingConfig.getDependencyInclusive());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
202	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  defMetadata.getDependencyInclusive());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
203	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getIncludedNewDependencies());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getIncludedNewDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getIncludedNewDependencies());	  this(compiler,    compiler.getIncludedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
204	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedNewDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getIncludedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
205	[BUG]  [BUGGY]  this(compiler,  cfgNode.getIncludedNewDependencies());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getIncludedNewDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getIncludedNewDependencies());	  this(compiler,    compiler.getIncludedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
206	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies(),  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies(),  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedNewDependencies(),  inlinedCfgNode);	  this(compiler,    compiler.getIncludedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
207	[BUG]  [BUGGY]  this(compiler,  compiler.getIncludedDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getIncludedDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getIncludedDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getIncludedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
208	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  def);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(useCfgNode),  def);	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
209	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(useCfgNode),  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
210	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  cfg);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  cfg);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(useCfgNode),  cfg);	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
211	[BUG]  [BUGGY]  this(compiler,  compiler.getInclusive(useCfgNode));  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInclusive(useCfgNode));  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInclusive(useCfgNode));	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
212	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(useCfgNode));  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(useCfgNode));  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInclusive(useCfgNode));	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
213	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  cfgNode);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  cfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(useCfgNode),  cfgNode);	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
214	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INITIALIZER;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
215	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTIALIZER;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTIALIZER;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTIALIZER;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INITIALIZER;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
216	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getInitializingDependencies());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
217	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  reachingUses);	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
218	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  mappingConfig.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  mappingConfig.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  mappingConfig.getInitializingDependencies());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
219	[BUG]  [BUGGY]  this(compiler,  numUseWithinUseCfgNode,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  numUseWithinUseCfgNode,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  numUseWithinUseCfgNode,  compiler.getInitializingDependencies());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
220	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  def);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  def);	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
221	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies(),  defMetadata);	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
222	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  cfgNode.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  cfgNode.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  cfgNode.getInitializingDependencies());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
223	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencies(),  inlinedNewDependencies);	  this(compiler,    cfgNode.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
224	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies(),  def);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencies(),  def);	  this(compiler,    cfgNode.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
225	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencies(),  DEF_METADATA);	  this(compiler,    cfgNode.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
226	[BUG]  [BUGGY]  this(compiler,  def.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  def.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  def.getInitializingDependencies());	  this(compiler,    cfgNode.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
227	[BUG]  [BUGGY]  this(compiler,  numUseWithinUseCfgNode,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  numUseWithinUseCfgNode,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  numUseWithinUseCfgNode,  compiler.getDependencyInstantiator());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
228	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  def);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  def);	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
229	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  defMetadata);	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
230	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  reachingUses);	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
231	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  cfgNode.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  cfgNode.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  cfgNode.getDependencyInstantiator());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
232	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  mappingConfig.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  mappingConfig.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  mappingConfig.getDependencyInstantiator());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
233	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  null);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator(),  null);	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
234	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInlinedCfgNode());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInlinedCfgNode());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInlinedCfgNode());	  this(compiler,    compiler.getInlinedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
235	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedDependencies(),  inlinedCfgNode);	  this(compiler,    compiler.getInlinedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
236	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInlinedNewDependencies());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInlinedNewDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInlinedNewDependencies());	  this(compiler,    compiler.getInlinedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
237	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
238	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
239	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  this.inlinedNewDependencies;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  this.inlinedNewDependencies;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  this.inlinedNewDependencies;	  This.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
240	[BUG]  [BUGGY]  TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
241	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  def,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  def,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  def,  reachingUses);	  this(compiler,    compiler.getInitializingDependencyConstants(),    def);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
242	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  def);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  def);	  this(compiler,    compiler.getInitializingDependencyConstants(),    def);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
243	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  def);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyConstants(),  def);	  this(compiler,    compiler.getInitializingDependencyConstants(),    def);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
244	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  useCfgNode);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  useCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  useCfgNode);	  this(compiler,    compiler.getInitializingDependencyConstants(),    def);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
245	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  def,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  def,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  def,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyConstants(),    def);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
246	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyConstants(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
247	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata);	  this(compiler,    compiler.getInitializingDependencyConstants(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
248	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  def);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  def);	  this(compiler,    compiler.getInitializingDependencyConstants(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
249	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyConstants(),  DEF_METADATA);	  this(compiler,    compiler.getInitializingDependencyConstants(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
250	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  INVALID_METADATA);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  INVALID_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  INVALID_METADATA);	  this(compiler,    compiler.getInitializingDependencyConstants(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
251	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyCfgNode(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
252	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  def);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyCfgNode(),  def);	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
253	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyCfgNode());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyCfgNode());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencyCfgNode());	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
254	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyCfgNode());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyCfgNode());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyCfgNode());	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
255	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyCfgNode());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyCfgNode());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyCfgNode());	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
256	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  null);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyCfgNode(),  null);	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
257	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyCfgNode(),  DEF_METADATA);	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
258	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  SIDE_EFFECT_PREDICATE;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  SIDE_EFFECT_PREDICATE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  SIDE_EFFECT_PREDICATE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
259	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  Compiler.instance;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  Compiler.instance;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  Compiler.instance;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
260	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  null;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  null;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
261	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  def,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  def,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  def,  reachingUses);	  this(compiler,    compiler.getDependencyInstantiator(),    def);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
262	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  def);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  def);	  this(compiler,    compiler.getDependencyInstantiator(),    def);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
263	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies(),  def);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedNewDependencies(),  def);	  this(compiler,    compiler.getDependencyInstantiator(),    def);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
264	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INSTANCE;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
265	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE  +  1;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE  +  1;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INSTANCE;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
266	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSIZE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSIZE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSIZE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INSTANCE;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
267	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  def);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  def);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
268	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  cfgNode);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  cfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  cfgNode);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
269	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  cfg);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  cfg);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  cfg);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
270	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(numUseWithinUseCfgNode));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(numUseWithinUseCfgNode));  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(numUseWithinUseCfgNode));	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
271	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  null);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  null);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
272	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies,  reachingUses));  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies,  reachingUses));  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies,  reachingUses));	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
273	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  inlinedCfgNode);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
274	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariableDeclaration(),  defMetadata);	  this(compiler,    compiler.getInitializingVariableDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
275	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariableDeclaration(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingVariableDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
276	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariableDeclaration(),  null);	  this(compiler,    compiler.getInitializingVariableDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
277	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariableDeclaration(),  DEF_METADATA);	  this(compiler,    compiler.getInitializingVariableDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
278	[BUG]  [BUGGY]  this(compiler,  compiler.getReachingVariableDeclaration());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getReachingVariableDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getReachingVariableDeclaration());	  this(compiler,    compiler.getInitializingVariableDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
279	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
280	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.EMPTY_LIST;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.EMPTY_LIST;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
281	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST  +  1;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
282	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  null);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies,  null);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    null);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
283	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  null,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  null,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  null,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    null);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
284	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  null);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependency(),  null);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    null);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
285	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  null);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  null);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    null);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
286	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    abstract;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
287	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    abstract;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
288	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstractLocation;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstractLocation;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstractLocation;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    abstract;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
289	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  reachingUses);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
290	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingCandiates);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
291	[BUG]  [BUGGY]  this(compiler,  compiler.getInclusive(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInclusive(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInclusive(),  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
292	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  inlinedCfgNode);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
293	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  approachingUses);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  approachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  approachingUses);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
294	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyConstants());	  this(compiler,    compiler.getDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
295	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyConstants(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyConstants(),  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
296	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyConstants());	  this(compiler,    compiler.getDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
297	[BUG]  [BUGGY]  this(compiler,  compiler.getInlineConstants());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlineConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlineConstants());	  this(compiler,    compiler.getDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
298	[BUG]  [BUGGY]  this(compiler,  compiler.getInlineDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlineDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlineDependencyConstants());	  this(compiler,    compiler.getDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
299	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)this.inlinedDependencies;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)this.inlinedDependencies;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)this.inlinedDependencies;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)this.inlinedNewDependencies;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
300	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  (AbstractCompiler)compiler  :(AbstractCompiler)this.inlinedNewDependencies;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  (AbstractCompiler)compiler  :(AbstractCompiler)this.inlinedNewDependencies;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  (AbstractCompiler)compiler  :(AbstractCompiler)this.inlinedNewDependencies;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)this.inlinedNewDependencies;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
301	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)inlinedNewDependencies;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)inlinedNewDependencies;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)inlinedNewDependencies;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)this.inlinedNewDependencies;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
302	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(0);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(0);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
303	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newExpr();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newExpr();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newExpr();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
304	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newEntry();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newEntry();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newEntry();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
305	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newConstantiator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newConstantiator();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newConstantiator();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
306	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  reachingUses);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  reachingUses);	  this(compiler,    compiler.getInitializingDependencies(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
307	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  defMetadata);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  defMetadata);	  this(compiler,    compiler.getInitializingDependencies(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
308	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencies(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
309	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
310	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables(),  reachingUses);	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
311	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  def);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables(),  def);	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
312	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariables(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariables(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariables(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
313	[BUG]  [BUGGY]  this(compiler,  compiler.getReachingVariables());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getReachingVariables());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getReachingVariables());	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
314	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables(),  defMetadata);	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
315	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
316	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
317	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
318	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  approachingUses);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  approachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  approachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
319	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
320	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedCfgNode);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
321	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
322	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedCfgNode);	  this(compiler,    compiler.getInitializingDependencies(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
323	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  spreadingCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  spreadingCandiates);	  this(compiler,    compiler.getInitializingDependencies(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
324	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  approachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  approachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies,  approachingUses);	  this(compiler,    compiler.getInitializingDependencies(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
325	[BUG]  [BUGGY]  this(compiler,  compiler.getReachingDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getReachingDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getReachingDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencies(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
326	[BUG]  [BUGGY]  this(compiler,  true,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  true,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  true,  inlinedNewDependencies);	  this(compiler,    true);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
327	[BUG]  [BUGGY]  this(compiler,  true,  cfgNode);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  true,  cfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  true,  cfgNode);	  this(compiler,    true);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
328	[BUG]  [BUGGY]  this(compiler,  true,  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  true,  false);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  true,  false);	  this(compiler,    true);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
329	[BUG]  [BUGGY]  this(compiler,  true,  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  true,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  true,  null);	  this(compiler,    true);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
330	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	Iterator  <  AbstractCompiler>  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
331	[BUG]  [BUGGY]  TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	TheCompiler  compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  This.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
332	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencyConstants(),  inlinedNewDependencies);	  this(compiler,    cfgNode.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
333	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  def);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencyConstants(),  def);	  this(compiler,    cfgNode.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
334	[BUG]  [BUGGY]  this(compiler,  def.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  def.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  def.getInitializingDependencyConstants());	  this(compiler,    cfgNode.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
335	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependency(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependency());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
336	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependency());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependency());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependency());	  this(compiler,    compiler.getInitializingDependency());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
337	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
338	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
339	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  defMetadata);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
340	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  candidates);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  candidates);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
341	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  INVALID_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  INVALID_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  INVALID_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
342	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler    ||    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
343	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler    ||    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
344	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
345	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  mapping);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  mapping);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  mapping);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
346	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlineCfgNode);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlineCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlineCfgNode);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
347	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  null);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  null);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
348	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Expr;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Expr;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Expr;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.Instance;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
349	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.FALSE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.FALSE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.FALSE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.Instance;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
350	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.FOR;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.FOR;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.FOR;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.Instance;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
351	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInstantiator(),  inlinedNewDependencies);	  this(compiler,    cfgNode.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
352	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator(),  def);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInstantiator(),  def);	  this(compiler,    cfgNode.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
353	[BUG]  [BUGGY]  this(compiler,  def.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  def.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  def.getDependencyInstantiator());	  this(compiler,    cfgNode.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
354	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawPredicate()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawPredicate()  :  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawPredicate()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getRawParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
355	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingUses,  compiler.getDependencyInstantiator());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
356	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getDependencyInstantiator());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
357	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getDependencyInstantiator());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
358	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  defMetadata.getDependencyInstantiator());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
359	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInstantiator(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInstantiator(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyInstantiator(),  reachingUses);	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
360	[BUG]  [BUGGY]  this(compiler,  defMetadata,  reachingUses,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  reachingUses,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  reachingUses,  compiler.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
361	[BUG]  [BUGGY]  this(compiler,  defMetadata,  reachingDef,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  reachingDef,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  reachingDef,  compiler.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
362	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencyCfgNode());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencyCfgNode());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInitializingDependencyCfgNode());	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
363	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencies(),  reachingUses);	  this(compiler,    cfgNode.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
364	[BUG]  [BUGGY]  this(compiler,  cfgNode.getReachingDependencies());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getReachingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getReachingDependencies());	  this(compiler,    cfgNode.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
365	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  reachingUses);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
366	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  reachingUses,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  reachingUses,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  reachingUses,  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
367	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  defMetadata);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
368	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingUses);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingUses);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
369	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlines);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
370	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependency());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependency());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependency());	  this(compiler,    cfgNode.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
371	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInstantiator(),  DEF_METADATA);	  this(compiler,    cfgNode.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
372	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInstantiator(),  reachingUses);	  this(compiler,    cfgNode.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
373	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getDependencyInclusive());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
374	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingDef.getDependencyInclusive());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
375	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  reachingUses);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA,  reachingUses);	  this(compiler,    compiler.getInitializingDependencyConstants(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
376	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata,  reachingUses);	  this(compiler,    compiler.getInitializingDependencyConstants(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
377	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses,  candidates);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses,  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses,  candidates);	  this(compiler,    compiler.getInitializingDependencyConstants(),    candidates);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
378	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingDef);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingDef);	  this(compiler,    compiler.getInitializingDependencies(),    def);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
379	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingVariableDeclaration());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingVariableDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInitializingVariableDeclaration());	  this(compiler,    compiler.getInitializingVariableDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
380	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariableDeclaration(),  reachingUses);	  this(compiler,    compiler.getInitializingVariableDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
381	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  reachingUses);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
382	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  def);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  def);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
383	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  startingDef);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  startingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  startingDef);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
384	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencyConstants(),  DEF_METADATA);	  this(compiler,    cfgNode.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
385	[BUG]  [BUGGY]  this(compiler,  cfgNode.getReachingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getReachingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getReachingDependencyConstants());	  this(compiler,    cfgNode.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
386	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  candidates);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencyConstants(),  candidates);	  this(compiler,    cfgNode.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
387	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(1);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(1);	  this.inlinedNewDependencies    =    Lists.newArrayList();    this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
388	[BUG]  [BUGGY]  this(compiler,  false,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  false,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  false,  reachingUses);	  this(compiler,    false);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
389	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  reachingDef);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  reachingDef);	  this(compiler,    compiler.getDependencyInclusive(),    def);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
390	[BUG]  [BUGGY]  this(compiler,  compiler.getInclusiveDependency(),  def);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInclusiveDependency(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInclusiveDependency(),  def);	  this(compiler,    compiler.getDependencyInclusive(),    def);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
391	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  reachingUses);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
392	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  reachingUses);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
393	[BUG]  [BUGGY]  this(compiler,  defMetadata,  reachingUses,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  reachingUses,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  reachingUses,  compiler.getInitializingDependencies());	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
394	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencies(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencies(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInitializingDependencies(),  reachingUses);	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
395	[BUG]  [BUGGY]  this(compiler,  defMetadata,  reachingDef,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  reachingDef,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  reachingDef,  compiler.getInitializingDependencies());	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
396	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  defMetadata);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingUses,  defMetadata);	  this(compiler,    compiler.getInitializingDependencies(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
397	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  usingCfgNode);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  usingCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  usingCfgNode);	  this(compiler,    compiler.getInitializingDependencies(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
398	[BUG]  [BUGGY]  this(compiler,  null,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  null,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  null,  reachingUses);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
399	[BUG]  [BUGGY]  this(compiler,  null,  reachingDef);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  null,  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  null,  reachingDef);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
400	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler    ||    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
401	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInclusive(),  reachingUses);	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
402	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInclusive(),  DEF_METADATA);	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
403	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE,  compiler;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE,  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE,  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INSTANCE;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
404	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
405	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingUses,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingUses,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingUses,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
406	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingUses);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
407	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
408	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_STRING;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_STRING;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_STRING;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
409	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstraction;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstraction;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstraction;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    abstract;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
410	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstractFactory;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstractFactory;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstractFactory;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    abstract;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
411	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingUses);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
412	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
413	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getFunctionDeclaration());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getFunctionDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getFunctionDeclaration());	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
414	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getFunctionDeclaration());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getFunctionDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getFunctionDeclaration());	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
415	[BUG]  [BUGGY]  this(compiler,  cfgNode.getFunctionDeclaration());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getFunctionDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getFunctionDeclaration());	  this(compiler,    compiler.getFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
416	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
417	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
418	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlineNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlineNewDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlineNewDependencies,  reachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
419	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlineDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlineDependencies,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlineDependencies,  reachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
420	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependency(),  DEF_METADATA);	  this(compiler,    compiler.getInitializingDependency());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
421	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependency(),  reachingUses);	  this(compiler,    compiler.getInitializingDependency());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
422	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusivePrettyPrinter());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusivePrettyPrinter());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyInclusivePrettyPrinter());	  this(compiler,    compiler.getDependencyInclusivePrettyPrinter());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
423	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  reachingUses);	  this(compiler,    compiler.getInitializingReachingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
424	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(useCfgNode),  reachingUses);	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
425	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(def));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(def));  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(def));	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
426	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterCount()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterCount()  :  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getParameterCount()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getNext()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
427	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(compiler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(compiler);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
428	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(0);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(0);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
429	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(this,  compiler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(this,  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(this,  compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractSensitiveInlineVariable(compiler);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
430	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  def);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  def);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractSensitiveInlineVariable(compiler);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
431	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  LinkedHashSet  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  LinkedHashSet  <  AbstractCompiler>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  LinkedHashSet  <  AbstractCompiler>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashSet    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
432	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  LinkedList  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  LinkedList  <  AbstractCompiler>();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  LinkedList  <  AbstractCompiler>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashSet    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
433	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance  +  1;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance  +  1;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.Instance;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
434	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER,  compiler;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER,  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER,  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INITIALIZER;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
435	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INITIALIZER;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
436	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  Integer>(compiler);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  Integer>(compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  HashSet  <  Integer>(compiler);	  this.inlinedNewDependencies    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
437	[BUG]  [BUGGY]  this(compiler,  defMetadata,  reachingUses,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  reachingUses,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  reachingUses,  compiler.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
438	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyInclusive(),  reachingUses);	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
439	[BUG]  [BUGGY]  this(compiler,  defMetadata,  reachingDef,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  reachingDef,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  reachingDef,  compiler.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
440	[BUG]  [BUGGY]  this(compiler,  cfgNode,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode,  compiler.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
441	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyConstants());	  this(compiler,    compiler.getDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
442	[BUG]  [BUGGY]  this(compiler,  def.getDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  def.getDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  def.getDependencyConstants());	  this(compiler,    compiler.getDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
443	[BUG]  [BUGGY]  this(compiler,  true,  def);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  true,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  true,  def);	  this(compiler,    true);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
444	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencies(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
445	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInlinedNewDependencies());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInlinedNewDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInlinedNewDependencies());	  this(compiler,    compiler.getInlinedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
446	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  null);	  this(compiler,    compiler.getDependencyInstantiator(),    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
447	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  DEF_METADATA;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  DEF_METADATA;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  DEF_METADATA;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    SIDE_EFFECT_PREDICATE;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
448	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  DEFAULT_SIDE_EFFECT_PREDICATE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  DEFAULT_SIDE_EFFECT_PREDICATE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  DEFAULT_SIDE_EFFECT_PREDICATE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    SIDE_EFFECT_PREDICATE;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
449	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  candidates);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables(),  candidates);	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
450	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingReachingVariables());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingReachingVariables());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInitializingReachingVariables());	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
451	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  spreadingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  spreadingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables(),  spreadingUses);	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
452	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingReachingVariable());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingReachingVariable());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingReachingVariable());	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
453	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  spreadingUses);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  spreadingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariable(),  spreadingUses);	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
454	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  reachingUses);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA,  reachingUses);	  this(compiler,    compiler.getInitializingDependencies(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
455	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getIncludedNewDependencies());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getIncludedNewDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getIncludedNewDependencies());	  this(compiler,    compiler.getIncludedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
456	[BUG]  [BUGGY]  this(compiler,  cfgNode,  compiler.getIncludedNewDependencies());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode,  compiler.getIncludedNewDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode,  compiler.getIncludedNewDependencies());	  this(compiler,    compiler.getIncludedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
457	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInlinedDependencies());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInlinedDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInlinedDependencies());	  this(compiler,    compiler.getInlinedDependencies());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
458	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInstantiator(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
459	[BUG]  [BUGGY]  this(compiler,  compiler.getInlineDependencyInstantiator(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlineDependencyInstantiator(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlineDependencyInstantiator(),  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInstantiator(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
460	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  defMetadata;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  defMetadata;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  defMetadata;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
461	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  null);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables(),  null);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    null);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
462	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  null);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariable(),  null);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    null);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
463	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  defMetadata,  null);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  defMetadata,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  defMetadata,  null);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    null);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
464	[BUG]  [BUGGY]  this(compiler,  compiler.getReachingDependencies(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getReachingDependencies(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getReachingDependencies(),  reachingUses);	  this(compiler,    compiler.getInitializingDependencies(),    reachingUses);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
465	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getInitializingDependencies());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
466	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingDef.getInitializingDependencies());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
467	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingDef);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  reachingDef);	  this(compiler,    compiler.getDependencyInstantiator(),    def);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
468	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  def);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedDependencies(),  def);	  this(compiler,    compiler.getDependencyInstantiator(),    def);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
469	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  reachingDef);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  reachingDef);	  this(compiler,    compiler.getInitializingDependencyConstants(),    def);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
470	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  defMetadata;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  defMetadata;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  defMetadata;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
471	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  DEF_METADATA;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  DEF_METADATA;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  DEF_METADATA;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
472	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants(),  reachingUses);	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
473	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingDef,  compiler.getInitializingDependencyConstants());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
474	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInitializingDependencyConstants());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
475	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList(1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList(1);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList(1);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
476	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  defMetadata);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  reachingUses,  defMetadata);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
477	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependency(),  defMetadata);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
478	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST_LIST;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST_LIST;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST_LIST;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
479	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTYList();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTYList();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTYList();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
480	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  reachingUses);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
481	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  candidates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  candidates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  candidates);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
482	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencyDeclaration());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencyDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInitializingDependencyDeclaration());	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
483	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependency(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependency(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
484	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariableDeclaration(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
485	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariable(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
486	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  reachingUses);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
487	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingDef);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  reachingDef);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
488	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  reachingDef);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE,  reachingDef);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
489	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  reachingUses);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
490	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  spreadingCandiates);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  spreadingCandiates);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
491	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(defMetadata));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(defMetadata));  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(defMetadata));	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
492	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(numUseWithinCfgNode));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(numUseWithinCfgNode));  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(numUseWithinCfgNode));	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
493	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST_LIST;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST_LIST;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Collections.EMPTY_LIST_LIST;	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
494	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(inlinedNewDependencies);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
495	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(this.inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(this.inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(this.inlinedNewDependencies);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
496	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  reachingUses,  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
497	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.Instance;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
498	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode)+  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode)+  1);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(useCfgNode)+  1);	  this(compiler,    compiler.getDependencyInclusive(useCfgNode));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
499	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(compiler);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance(compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
500	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance();  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.newInstance();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
501	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  reachingDef);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable(),  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariable(),  reachingDef);	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
502	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyVariables());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyVariables());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyVariables());	  this(compiler,    compiler.getInitializingReachingVariable());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
503	[BUG]  [BUGGY]  this(compiler,  def.getInitializingDependencyConstants(),  compiler);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  def.getInitializingDependencyConstants(),  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  def.getInitializingDependencyConstants(),  compiler);	  this(compiler,    compiler.getInitializingDependencyConstants(),    def);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
504	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContentType()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContentType()  :  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContentType()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getContent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
505	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getDependencyInclusive());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
506	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
507	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlines);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlines);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlines);	  this(compiler,    compiler.getDependencyInstantiator(),    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
508	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  reachingDef);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables(),  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables(),  reachingDef);	  this(compiler,    compiler.getInitializingReachingVariables());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
509	[BUG]  [BUGGY]  this(compiler,  def.getInitializingDependencies(),  compiler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  def.getInitializingDependencies(),  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  def.getInitializingDependencies(),  compiler);	  this(compiler,    compiler.getInitializingDependencies(),    def);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
510	[BUG]  [BUGGY]  this(compiler,  true,  defMetadata);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  true,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  true,  defMetadata);	  this(compiler,    true);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
511	[BUG]  [BUGGY]  this(compiler,  cfgNode,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode,  true);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode,  true);	  this(compiler,    true);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
512	[BUG]  [BUGGY]  this(compiler,  defMetadata,  cfgNode,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  cfgNode,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  cfgNode,  compiler.getInitializingDependencies());	  this(compiler,    defMetadata,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
513	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInclusive());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInclusive());	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
514	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive(),  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInclusive(),  Integer.MAX_VALUE);	  this(compiler,    cfgNode.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
515	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(2000);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(2000);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(2000);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
516	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingDef.getDependencyInstantiator());	  this(compiler,    inlinedNewDependencies,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
517	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlines);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlines);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlines);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
518	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParameterType(0):  compiler;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParameterType(0):  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParameterType(0):  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
519	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getVarName()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getVarName()  :  compiler;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getVarName()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getName()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
520	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  defMetadata);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
521	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  spreadingCfgNode);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  spreadingCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies),  spreadingCfgNode);	  this(compiler,    compiler.getDependencyInclusive(inlinedNewDependencies));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
522	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  compiler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler,  compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractSensitiveInlineVariable(compiler);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
523	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getInitializingDependencyConstants());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
524	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  reachingDef.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  reachingDef.getInitializingDependencyConstants());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
525	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.synchronizedSet(this.inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Collections.synchronizedSet(this.inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Collections.synchronizedSet(this.inlinedNewDependencies);	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
526	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.unmodifiableSet(compiler);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  Collections.unmodifiableSet(compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Collections.unmodifiableSet(compiler);	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
527	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  null,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  null,  reachingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  null,  reachingUses);	  this(compiler,    compiler.getInitializingDependencies(),    null);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
528	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata,  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata,  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  defMetadata,  DEF_METADATA);	  this(compiler,    compiler.getInitializingDependencyConstants(),    DEF_METADATA);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
529	[BUG]  [BUGGY]  this(compiler,  compiler.getInclusivePrettyPrinter());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInclusivePrettyPrinter());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInclusivePrettyPrinter());	  this(compiler,    compiler.getDependencyInclusivePrettyPrinter());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
530	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusivePrettyPrinter(),  defMetadata);	  this(compiler,    compiler.getDependencyInclusivePrettyPrinter());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
531	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  spreadingCfgNode);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  spreadingCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies,  spreadingCfgNode);	  this(compiler,    compiler.getDependencyInstantiator(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
532	[BUG]  [BUGGY]  this(compiler,  cfgNode,  compiler.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode,  compiler.getInitializingDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode,  compiler.getInitializingDependencyConstants());	  this(compiler,    cfgNode.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
533	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants(),  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencyConstants(),  null);	  this(compiler,    cfgNode.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
534	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  null);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  null);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlines);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
535	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  qualifiedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  qualifiedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  qualifiedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlines);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
536	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDef());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingVariableDef());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariableDef());	  this(compiler,    compiler.getInitializingReachingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
537	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingDependency());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingDependency());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingDependency());	  this(compiler,    compiler.getInitializingReachingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
538	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
539	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getInitializingDependencies());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  defMetadata,  compiler.getInitializingDependencies());	  this(compiler,    inlinedNewDependencies,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
540	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingDependencyDeclaration());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingDependencyDeclaration());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingDependencyDeclaration());	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
541	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  reachingDef);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration(),  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration(),  reachingDef);	  this(compiler,    compiler.getInitializingDependencyDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
542	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayListWithCapacity(compiler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayListWithCapacity(compiler);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayListWithCapacity(compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
543	[BUG]  [BUGGY]  this(compiler,  false,  defMetadata);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  false,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  false,  defMetadata);	  this(compiler,    false);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
544	[BUG]  [BUGGY]  this(compiler,  null,  def);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  null,  def);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  null,  def);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
545	[BUG]  [BUGGY]  this(compiler,  null,  defMetadata);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  null,  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  null,  defMetadata);	  this(compiler,    null);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
546	[BUG]  [BUGGY]  this(compiler,  compiler.getIncludedNewDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getIncludedNewDependencies(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getIncludedNewDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getIncludedNewDependencies());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
547	[BUG]  [BUGGY]  this(compiler,  defMetadata,  cfgNode,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  cfgNode,  compiler.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  cfgNode,  compiler.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
548	[BUG]  [BUGGY]  this(compiler,  defMetadata,  mappingConfig.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  mappingConfig.getDependencyInclusive());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  mappingConfig.getDependencyInclusive());	  this(compiler,    defMetadata,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
549	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  spreadingCfgNode);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  spreadingCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies,  spreadingCfgNode);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
550	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedCharacters);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedCharacters);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedCharacters);	  this(compiler,    compiler.getInitializingDependencyConstants(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
551	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  defMetadata);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyCfgNode(),  defMetadata);	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
552	[BUG]  [BUGGY]  this(compiler,  cfg,  compiler.getInitializingDependencyCfgNode());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfg,  compiler.getInitializingDependencyCfgNode());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfg,  compiler.getInitializingDependencyCfgNode());	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
553	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  useCfgNode);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode(),  useCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyCfgNode(),  useCfgNode);	  this(compiler,    compiler.getInitializingDependencyCfgNode());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
554	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  callingUses);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  callingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  defMetadata,  callingUses);	  this(compiler,    compiler.getInitializingDependencies(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
555	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
556	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDeclaration(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDeclaration(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDeclaration(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
557	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingConstructorDeclaration(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingConstructorDeclaration(),  SIDE_EFFECT_PREDICATE);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingConstructorDeclaration(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
558	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  callingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  callingUses);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  defMetadata,  callingUses);	  this(compiler,    compiler.getDependencyInstantiator(),    defMetadata);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
559	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE,  inlinedNewDependencies;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE,  inlinedNewDependencies;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE,  inlinedNewDependencies;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INSTANCE;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
560	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INSTANCE;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
561	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingConstructorDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingConstructorDeclaration(),  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingConstructorDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
562	[BUG]  [BUGGY]  this(compiler,  defMetadata,  cfgNode,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  cfgNode,  compiler.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  cfgNode,  compiler.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
563	[BUG]  [BUGGY]  this(compiler,  defMetadata,  mappingConfig.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  defMetadata,  mappingConfig.getDependencyInstantiator());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  mappingConfig.getDependencyInstantiator());	  this(compiler,    defMetadata,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
564	[BUG]  [BUGGY]  this(compiler,  cfgNode,  compiler.getDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  cfgNode,  compiler.getDependencyConstants());  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode,  compiler.getDependencyConstants());	  this(compiler,    compiler.getDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
565	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedCharacters);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedCharacters);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedCharacters);	  this(compiler,    compiler.getInitializingDependencies(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
566	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getInlinedDependencies(),  DEF_METADATA);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedDependencies(),  DEF_METADATA);	  this(compiler,    compiler.getInlinedDependencies());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
567	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  Integer>(8);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  Integer>(8);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  HashSet  <  Integer>(8);	  this.inlinedNewDependencies    =    new    HashSet    <    Integer>();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
568	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingCfgNode);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies,  spreadingCfgNode);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
569	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  defMetadata,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  defMetadata,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  defMetadata,  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInclusive(),    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
570	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  reachingDef);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE,  reachingDef);	  this(compiler,    compiler.getDependencyInstantiator(),    DEPENDENCY_PREDICATE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
571	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.inVALID;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.inVALID;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.inVALID;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INVALID;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
572	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSIDE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSIDE;  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSIDE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.INVALID;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
573	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingDef);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingDef);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingDef);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
574	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
575	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCfgNode);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {      [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCfgNode);  [BUGGY]      }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCfgNode);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
