bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependency());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependency());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependency());	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingVariableDeclaration());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingVariableDeclaration());	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  def);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  def);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  def);	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  this(compiler,  compiler.getFunctionDeclaration());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getFunctionDeclaration());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getFunctionDeclaration());	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  null);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  null);	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInclusive());	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInlinedNewDependencies());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedNewDependencies());	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  cfgNode.getDependencyInclusive());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInclusive());	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  this(compiler,  compiler.getIncludedNewDependencies());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getIncludedNewDependencies());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getIncludedNewDependencies());	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  def);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInclusive(),  def);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(),  def);	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencies());	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  cfgNode.getInitializingDependencies());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencies());	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  def);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  def);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  def);	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  null);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  null);	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.EMPTY_LIST;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Lists.newArrayList();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.emptyList();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.emptyList();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Collections.emptyList();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractSensitiveInlineVariable(compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  inlinedNewDependencies);	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getDependencyInstantiator());	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  this(compiler,  compiler.getInlinedDependencies());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInlinedDependencies());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInlinedDependencies());	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  def);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  def);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  def);	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  null);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  null);	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INSTANCE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.Instance;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.newInstance();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INITIALIZER;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  this(compiler,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  null);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  null);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  this(compiler,  false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  false);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  false);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  Integer>();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  Integer>();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  new  HashSet  <  Integer>();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  compiler;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  compiler;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getName()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNext()  :  compiler;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNext()  :  compiler;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getNext()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  compiler;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  compiler;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getRawParent()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  compiler;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  compiler;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getContent()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getParent()    :    compiler;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlinedNewDependencies);	  this(compiler,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  inlinedNewDependencies,  compiler.getInitializingDependencyConstants());	  this(compiler,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyConstants());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyConstants());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyConstants());	  this(compiler,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  def);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  def);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  def);	  this(compiler,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  cfgNode.getInitializingDependencyConstants());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getInitializingDependencyConstants());	  this(compiler,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInstantiator());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyInstantiator());	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  cfgNode.getDependencyInstantiator());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  cfgNode.getDependencyInstantiator());	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_PREDICATE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_PREDICATE;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  SIDE_EFFECT_PREDICATE;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  abstract;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  reachingUses);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  reachingUses);	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencies());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  defMetadata,  compiler.getInitializingDependencies());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getInitializingDependencies());	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingReachingVariables());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariables());	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingReachingVariable());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingVariable());	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingFunctionDeclaration(),  SIDE_EFFECT_PREDICATE);	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  (AbstractCompiler)compiler  :(AbstractCompiler)compiler;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  (AbstractCompiler)compiler  :(AbstractCompiler)compiler;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  (AbstractCompiler)compiler  :(AbstractCompiler)compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)this.inlinedNewDependencies;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)this.inlinedNewDependencies;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)this.inlinedNewDependencies;	  this.compiler    =    compiler    instanceof    AbstractCompiler?    compiler    :(AbstractCompiler)compiler;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
61	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INVALID;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INVALID;  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  Compiler.INVALID;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    Compiler.instance;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  candidates);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  candidates);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  candidates);	  this(compiler,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusive());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  defMetadata,  compiler.getDependencyInclusive());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  defMetadata,  compiler.getDependencyInclusive());	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  this(compiler,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  true);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  true);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.emptyList();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.inlinedNewDependencies  =  Collections.emptyList();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Collections.emptyList();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  defMetadata);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  defMetadata);	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInstantiator(),  DEPENDENCY_PREDICATE);	  this(compiler,    compiler.getDependencyInstantiator());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList();  this.inlinedNewDependencies  =  Lists.newArrayList();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList();  this.inlinedNewDependencies  =  Lists.newArrayList();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList();  this.inlinedNewDependencies  =  Lists.newArrayList();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashSet  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashSet  <  AbstractCompiler>();  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashSet  <  AbstractCompiler>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  SimpleCompiler(compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies));  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(inlinedNewDependencies));	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInclusive(useCfgNode));  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusive(useCfgNode));	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  this(compiler,  compiler.getDependencyInclusivePrettyPrinter());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getDependencyInclusivePrettyPrinter());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getDependencyInclusivePrettyPrinter());	  this(compiler,    compiler.getDependencyInclusive());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  defMetadata);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  defMetadata);	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
76	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencies(),  DEF_METADATA);	  this(compiler,    compiler.getInitializingDependencies());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
77	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  DEF_METADATA);	  this(compiler,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlines);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencyConstants(),  inlines);  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyConstants(),  inlines);	  this(compiler,    compiler.getInitializingDependencyConstants());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencyDeclaration());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyDeclaration());	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
80	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingReachingFunctionDeclaration());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingReachingFunctionDeclaration());	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
81	[BUG]  [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {    [BUGGY]  this(compiler,  compiler.getInitializingDependencyCfgNode());  [BUGGY]    }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	121	121	3	replace	this(compiler,  compiler.getInitializingDependencyCfgNode());	  this(compiler,    compiler.getInitializingFunctionDeclaration());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
