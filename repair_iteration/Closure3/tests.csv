name,outcome,runtime,stacktrace
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testForIn,PASS,817001016,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUse,PASS,459087913,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIncrement,PASS,670882215,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineAssignmentOp,PASS,435992949,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineIntoLhsOfAssign,PASS,390836015,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInSameCfgNode,PASS,378942312,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiUseInTwoDifferentPath,PASS,635561195,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testAssignmentBeforeDefinition,PASS,449748926,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testVarInConditionPath,PASS,374386676,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsBeforeUse,PASS,387586267,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testMultiDefinitionsInSameCfgNode,PASS,528823560,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotReachingDefinitions,PASS,433342588,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLoopCarriedDefinition,PASS,452886031,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotExitLoop,PASS,729843859,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineWithinLoop,PASS,414086959,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1,FAIL,397618602,junit.framework.AssertionFailedError: Expected: function _func(){var a;try{throw Error("");}catch(err){a=err}return a.stack} Result: function _func(){var a;try{throw Error("");}catch(err){}return err.stack} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _func 1 [source_file: expected0] NAME _func 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] TRY 2 [source_file: expected0] BLOCK 2 [source_file: expected0] THROW 3 [source_file: expected0] CALL 3 [free_call: 1] [source_file: expected0] NAME Error 3 [source_file: expected0] STRING  3 [source_file: expected0] BLOCK 4 [source_file: expected0] CATCH 4 [source_file: expected0] NAME err 4 [source_file: expected0] BLOCK 4 [source_file: expected0] EXPR_RESULT 4 [source_file: expected0] ASSIGN 4 [source_file: expected0] NAME a 4 [source_file: expected0] NAME err 4 [source_file: expected0] RETURN 6 [source_file: expected0] GETPROP 6 [source_file: expected0] NAME a 6 [source_file: expected0] STRING stack 6 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _func 1 [source_file: testcode] NAME _func 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] TRY 2 [source_file: testcode] BLOCK 2 [source_file: testcode] THROW 3 [source_file: testcode] CALL 3 [free_call: 1] [source_file: testcode] NAME Error 3 [source_file: testcode] STRING  3 [source_file: testcode] BLOCK 4 [source_file: testcode] CATCH 4 [source_file: testcode] NAME err 4 [source_file: testcode] BLOCK 4 [source_file: testcode] RETURN 6 [source_file: testcode] GETPROP 6 [source_file: testcode] NAME err 4 [source_file: testcode] STRING stack 6 [source_file: testcode]   Subtree1: BLOCK 4 [source_file: expected0] EXPR_RESULT 4 [source_file: expected0] ASSIGN 4 [source_file: expected0] NAME a 4 [source_file: expected0] NAME err 4 [source_file: expected0]   Subtree2: BLOCK 4 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:50) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:237) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:567) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testDoNotInlineCatchExpression1(FlowSensitiveInlineVariablesTest.java:146) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression1a,FAIL,433801505,junit.framework.AssertionFailedError: Expected: function _func(){var a;try{throw Error("");}catch(err){a=err+1}return a.stack} Result: function _func(){var a;try{throw Error("");}catch(err){}return(err+1).stack} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _func 1 [source_file: expected0] NAME _func 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] TRY 2 [source_file: expected0] BLOCK 2 [source_file: expected0] THROW 3 [source_file: expected0] CALL 3 [free_call: 1] [source_file: expected0] NAME Error 3 [source_file: expected0] STRING  3 [source_file: expected0] BLOCK 4 [source_file: expected0] CATCH 4 [source_file: expected0] NAME err 4 [source_file: expected0] BLOCK 4 [source_file: expected0] EXPR_RESULT 4 [source_file: expected0] ASSIGN 4 [source_file: expected0] NAME a 4 [source_file: expected0] ADD 4 [source_file: expected0] NAME err 4 [source_file: expected0] NUMBER 1.0 4 [source_file: expected0] RETURN 6 [source_file: expected0] GETPROP 6 [source_file: expected0] NAME a 6 [source_file: expected0] STRING stack 6 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _func 1 [source_file: testcode] NAME _func 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] TRY 2 [source_file: testcode] BLOCK 2 [source_file: testcode] THROW 3 [source_file: testcode] CALL 3 [free_call: 1] [source_file: testcode] NAME Error 3 [source_file: testcode] STRING  3 [source_file: testcode] BLOCK 4 [source_file: testcode] CATCH 4 [source_file: testcode] NAME err 4 [source_file: testcode] BLOCK 4 [source_file: testcode] RETURN 6 [source_file: testcode] GETPROP 6 [source_file: testcode] ADD 4 [source_file: testcode] NAME err 4 [source_file: testcode] NUMBER 1.0 4 [source_file: testcode] STRING stack 6 [source_file: testcode]   Subtree1: BLOCK 4 [source_file: expected0] EXPR_RESULT 4 [source_file: expected0] ASSIGN 4 [source_file: expected0] NAME a 4 [source_file: expected0] ADD 4 [source_file: expected0] NAME err 4 [source_file: expected0] NUMBER 1.0 4 [source_file: expected0]   Subtree2: BLOCK 4 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:50) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:237) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:567) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testDoNotInlineCatchExpression1a(FlowSensitiveInlineVariablesTest.java:157) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression2,PASS,403003244,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDoNotInlineCatchExpression3,FAIL,408411824,junit.framework.AssertionFailedError: Expected: function _func(){var a;try{throw Error("");}catch(err){err=x;a=err}return a.stack} Result: function _func(){var a;try{throw Error("");}catch(err){err=x}return err.stack} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _func 1 [source_file: expected0] NAME _func 1 [source_file: expected0] PARAM_LIST 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] TRY 2 [source_file: expected0] BLOCK 2 [source_file: expected0] THROW 3 [source_file: expected0] CALL 3 [free_call: 1] [source_file: expected0] NAME Error 3 [source_file: expected0] STRING  3 [source_file: expected0] BLOCK 4 [source_file: expected0] CATCH 4 [source_file: expected0] NAME err 4 [source_file: expected0] BLOCK 4 [source_file: expected0] EXPR_RESULT 4 [source_file: expected0] ASSIGN 4 [source_file: expected0] NAME err 4 [source_file: expected0] NAME x 4 [source_file: expected0] EXPR_RESULT 5 [source_file: expected0] ASSIGN 5 [source_file: expected0] NAME a 5 [source_file: expected0] NAME err 5 [source_file: expected0] RETURN 7 [source_file: expected0] GETPROP 7 [source_file: expected0] NAME a 7 [source_file: expected0] STRING stack 7 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _func 1 [source_file: testcode] NAME _func 1 [source_file: testcode] PARAM_LIST 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] TRY 2 [source_file: testcode] BLOCK 2 [source_file: testcode] THROW 3 [source_file: testcode] CALL 3 [free_call: 1] [source_file: testcode] NAME Error 3 [source_file: testcode] STRING  3 [source_file: testcode] BLOCK 4 [source_file: testcode] CATCH 4 [source_file: testcode] NAME err 4 [source_file: testcode] BLOCK 4 [source_file: testcode] EXPR_RESULT 4 [source_file: testcode] ASSIGN 4 [source_file: testcode] NAME err 4 [source_file: testcode] NAME x 4 [source_file: testcode] RETURN 7 [source_file: testcode] GETPROP 7 [source_file: testcode] NAME err 5 [source_file: testcode] STRING stack 7 [source_file: testcode]   Subtree1: BLOCK 4 [source_file: expected0] EXPR_RESULT 4 [source_file: expected0] ASSIGN 4 [source_file: expected0] NAME err 4 [source_file: expected0] NAME x 4 [source_file: expected0] EXPR_RESULT 5 [source_file: expected0] ASSIGN 5 [source_file: expected0] NAME a 5 [source_file: expected0] NAME err 5 [source_file: expected0]   Subtree2: BLOCK 4 [source_file: testcode] EXPR_RESULT 4 [source_file: testcode] ASSIGN 4 [source_file: testcode] NAME err 4 [source_file: testcode] NAME x 4 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:50) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:237) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:567) at com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testDoNotInlineCatchExpression3(FlowSensitiveInlineVariablesTest.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDefinitionAfterUse,PASS,401138290,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineSameVariableInStraightLine,PASS,413494363,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineInDifferentPaths,PASS,563782158,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineInMergedPath,PASS,396824944,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIntoExpressions,PASS,369364957,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions1,PASS,328001222,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions2,PASS,372333861,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions3,PASS,382563679,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions4,PASS,418266846,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions5,PASS,393570354,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions6,PASS,421859799,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression7,PASS,408807488,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression8,PASS,424011080,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression9,PASS,444408340,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpression10,PASS,452094909,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions11,PASS,458763398,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions12,PASS,403846120,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineExpressions13,PASS,627923443,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineIfDefinitionMayNotReach,PASS,368233171,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineEscapedToInnerFunction,PASS,347538378,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineLValue,PASS,374673768,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testShadowedVariableInnerFunction,PASS,385231208,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCatch,PASS,436306090,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp,PASS,413511047,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp2,PASS,409681957,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetProp3,PASS,408802908,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineGetEle,PASS,355883030,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineConstructors,PASS,455645539,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineArrayLits,PASS,368907311,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineObjectLits,PASS,424073085,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNoInlineRegExpLits,PASS,384671183,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineConstructorCallsIntoLoop,PASS,389140280,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testRemoveWithLabels,PASS,410291128,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect1,PASS,419972715,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect2,PASS,826248740,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect3,PASS,448752000,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineAcrossSideEffect4,PASS,439929081,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testCanInlineAcrossNoSideEffect,PASS,413432998,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testDependOnOuterScopeVariables,PASS,358717620,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineIfNameIsLeftSideOfAssign,PASS,378212431,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInlineArguments,PASS,419875031,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments1,PASS,393654711,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testInvalidInlineArguments2,PASS,423563959,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testNotOkToSkipCheckPathBetweenNodes,PASS,424018199,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue698,PASS,397371007,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue777,PASS,445915156,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies1,PASS,397740178,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testTransitiveDependencies2,PASS,368336701,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794a,PASS,419772567,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testIssue794b,PASS,419650210,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleAssign,PASS,449464583,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleForIn,PASS,456595825,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSwitchCase,PASS,534503031,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testExported,PASS,409379203,
com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest#testSimpleVar,PASS,453583777,
