bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if  (!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if  (!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  if  (!c.depends.isEmpty())  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if  (!c.depends.isEmpty())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if  (!c.depends.isEmpty())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  if  (!c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if  (!c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if  (!c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  if  (!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if  (!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if  (!c.depends.isEmpty()  ||!c.depends.isEmpty())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	  	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  if(c.depends!=  null  &&!c.defMetadata.depends.isEmpty())  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if(c.depends!=  null  &&!c.defMetadata.depends.isEmpty())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if(c.depends!=  null  &&!c.defMetadata.depends.isEmpty())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  if  (!c.depends.isEmpty()  &&!c.defMetadata.canInline())  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if  (!c.depends.isEmpty()  &&!c.defMetadata.canInline())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if  (!c.depends.isEmpty()  &&!c.defMetadata.canInline())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  if(!c.defMetadata.isEmpty()  ||  c.depends.isEmpty())  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if(!c.defMetadata.isEmpty()  ||  c.depends.isEmpty())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if(!c.defMetadata.isEmpty()  ||  c.depends.isEmpty())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  if(c.depends.isEmpty())  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if(c.depends.isEmpty())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if(c.depends.isEmpty())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  if(!c.depends.isEmpty()  ||!c.defMetadata.mayHaveSideEffects())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  if  (c.canInline())  {  c.inlineVariable();          [BUGGY]  if(!c.depends.isEmpty()  ||!c.defMetadata.mayHaveSideEffects())  {  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName));  }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.3273268353539886	165	165	3	replace	if(!c.depends.isEmpty()  ||!c.defMetadata.mayHaveSideEffects())  {	if  (!c.defMetadata.depends.isEmpty())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
