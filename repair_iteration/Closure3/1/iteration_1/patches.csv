bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
2	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  def);  [CE]  cannot  find  symbol  def  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c);    	non-compiled	[CE]  cannot  find  symbol  def	14	None	replace
3	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  numUseWithinUseCfgNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	14	None	replace
4	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	14	None	replace
5	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.getScope());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.getScope());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.getScope());	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
6	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,Set<Var>,MaybeReachingVariableUse)  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,Set<Var>,MaybeReachingVariableUse)	5	None	replace
7	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
8	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  numUseWithinUseCfgNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	5	None	replace
9	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  depends  [FE]                      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  numUseWithinUseCfgNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  depends	5	None	replace
10	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
11	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.defMetadata.depends);  [CE]  cannot  find  symbol  def  [FE]                          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.defMetadata.depends);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  def	5	None	replace
12	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  def  [FE]                            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  def	5	None	replace
13	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(varName));	  inlinedNewDependencies.add(c.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol  varName	6	None	replace
14	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName));  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.varName));	  inlinedNewDependencies.add(c.getScope().getVar(c.varName));    	non-compiled	[CE]  ';'  expected	6	None	replace
15	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varName);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varName);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varName);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol  varName	6	None	replace
16	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));	  inlinedNewDependencies.add(c.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
17	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,Definition,MaybeReachingVariableUse)  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,Definition,MaybeReachingVariableUse)	2	None	replace
18	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	2	None	replace
19	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.defMetadata);  [CE]  cannot  find  symbol  def  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  def	2	None	replace
20	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	2	None	replace
21	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.defMetadata);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
22	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def);  [CE]  cannot  find  symbol  def  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol  def	12	None	replace
23	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfg);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfg);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	12	None	replace
24	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  numUseWithinUseCfgNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	12	None	replace
25	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),  t.getScope());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),  t.getScope());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),  t.getScope());	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
26	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,MaybeReachingVariableUse)  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,MaybeReachingVariableUse)	12	None	replace
27	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,MaybeReachingVariableUse)  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,MaybeReachingVariableUse)	12	None	replace
28	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(t.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	13	None	replace
29	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));	  inlinedNewDependencies.add(t.getScope().getVar(varName));    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	13	None	replace
30	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n));  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n));	  inlinedNewDependencies.add(t.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  n	13	None	replace
31	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.variableName));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.variableName));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.variableName));	  inlinedNewDependencies.add(t.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  	13	None	replace
32	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends));  [CE]  cannot  find  symbol  depends  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.depends));	  inlinedNewDependencies.add(t.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  depends	13	None	replace
33	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	1	None	replace
34	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n));  [CE]  cannot  find  symbol  n  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n));	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  n	1	None	replace
35	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name));  [CE]  cannot  find  symbol  name  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name));	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  name	1	None	replace
36	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(id));  [CE]  cannot  find  symbol  id  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(id));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(id));	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  id	1	None	replace
37	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode));  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	1	None	replace
38	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME));  [CE]  cannot  find  symbol  NAME  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME));	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  NAME	1	None	replace
39	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode);  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
40	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defNode);  [CE]  cannot  find  symbol  defNode  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  defNode	3	None	replace
41	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  n	3	None	replace
42	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
43	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.numUseWithinUseCfgNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
44	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
45	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(n));  [CE]  cannot  find  symbol  n  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(n));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(n));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
46	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	10	None	replace
47	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(name));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(name));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(name));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  name	10	None	replace
48	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(id));  [CE]  cannot  find  symbol  id  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(id));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(id));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  id	10	None	replace
49	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinCfgNode));  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinCfgNode));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	10	None	replace
50	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }	      	compilable	  [FE]  RuntimeException  	8	13	replace
51	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }	      	compilable	  [FE]  RuntimeException  	8	13	replace
52	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  c.inlineVariable();  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	c.inlineVariable();	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
53	[BUG]  [BUGGY]  c.inlineVariable();  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  c.inlineVariable();  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
54	[BUG]  [BUGGY]  if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
55	[BUG]  [BUGGY]  if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
56	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  for(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  for(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())  {  for(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }	      	non-compiled	[CE]  ')'  expected	8	None	replace
57	[BUG]  [BUGGY]  if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
58	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null);  [CE]  cannot  find  symbol  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends!=  null);	      	non-compiled	[CE]  cannot  find  symbol  AssertionFailedError	8	None	replace
59	[BUG]  [BUGGY]      if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]      if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	        if(c.defMetadata.depends!=  null)  {  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }	  	non-compiled	[CE]  ';'  expected	7	None	add
60	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,Node,MaybeReachingVariableUse)  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,Node,MaybeReachingVariableUse)	4	None	replace
61	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.def);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
62	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.def);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
63	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.def);  [CE]  cannot  find  symbol  def  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def);    	non-compiled	[CE]  cannot  find  symbol  def	4	None	replace
64	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
65	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
66	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata);  [CE]  cannot  find  symbol  defNode  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defNode	11	None	replace
67	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata);  [CE]  cannot  find  symbol  defName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defName	11	None	replace
68	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata);  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  name	11	None	replace
69	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends);  [CE]  cannot  find  symbol  depends  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def);    	non-compiled	[CE]  cannot  find  symbol  depends	9	None	replace
70	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.varName);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
71	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName));  [CE]  no  suitable  method  found  for  add(FlowSensitiveInlineVariables.Candidate,Var)  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName));	  inlinedNewDependencies.add(c.getScope().getVar(c.varName));    	non-compiled	[CE]  no  suitable  method  found  for  add(FlowSensitiveInlineVariables.Candidate,Var)	6	None	replace
72	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defPREDICATE);  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defPREDICATE);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
73	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def);  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
74	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode));  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(t.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	13	None	replace
75	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name));	  inlinedNewDependencies.add(t.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
76	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef)  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef)	9	None	replace
77	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.defMetadata);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,Definition)  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,Definition)	2	None	replace
78	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,FlowSensitiveInlineVariables.Candidate,MaybeReachingVariableUse)  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,FlowSensitiveInlineVariables.Candidate,MaybeReachingVariableUse)	14	None	replace
79	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c);    	non-compiled	[CE]  cannot  find  symbol  varName	14	None	replace
80	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.def);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,Node)  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,Node)	4	None	replace
81	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	10	None	replace
82	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis)  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis)	12	None	replace
83	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol  varName	12	None	replace
84	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa);  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol  varName	12	None	replace
85	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
86	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends!=  null);	      	compilable	  [FE]  AssertionFailedError  	8	6	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null);	      	compilable	  [FE]  AssertionFailedError  	8	6	replace
89	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
90	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[t.getSourceName()  ]);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
91	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());	      	compilable	  [FE]  RuntimeException  	8	13	replace
92	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());	      	compilable	  [FE]  RuntimeException  	8	13	replace
93	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends  ==  null);	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
94	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends  ==  null);	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  c.defMetadata.depends.clear();  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	c.defMetadata.depends.clear();	      	compilable	  [FE]  AssertionFailedError  	8	6	replace
96	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  c.defMetadata.depends.clear();  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();	      	compilable	  [FE]  AssertionFailedError  	8	6	replace
97	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t.getModule()));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t.getModule()));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t.getModule()));	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
98	[BUG]  [BUGGY]      AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t.getSourceName()));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]      AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t.getSourceName()));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	        AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t.getSourceName()));	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
99	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	11	None	replace
100	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),  c.defMetadata);  [CE]  cannot  find  symbol  defPREDICATE  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defPREDICATE	11	None	replace
101	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t);  [CE]  cannot  find  symbol  varName  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  varName	1	None	replace
102	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getModule());  [CE]  cannot  find  symbol  varName  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getModule());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  varName	1	None	replace
103	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  t.getModule()));  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  t.getModule()));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  t.getModule()));	  inlinedNewDependencies.add(c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  varName	1	None	replace
104	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  def);  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c);    	non-compiled	[CE]  cannot  find  symbol  varName	14	None	replace
105	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
106	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
107	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode);  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
108	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode);  [CE]  cannot  find  symbol  cfgNode  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	3	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	      	compilable	  [FE]  AssertionFailedError  	8	6	replace
110	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	      	compilable	  [FE]  AssertionFailedError  	8	6	replace
111	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
112	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
113	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]        AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
115	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
116	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
117	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
119	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
120	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	      	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	8	13	replace
121	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	2	None	replace
122	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  c.defMetadata);  [CE]  cannot  find  symbol  cfgNode  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  c.defMetadata);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	2	None	replace
123	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varName));  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varName));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varName));	  inlinedNewDependencies.add(c.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol  varName	6	None	replace
124	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.vars);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.vars);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol  varName	6	None	replace
125	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c);  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  varName	13	None	replace
126	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  c.def);  [CE]  cannot  find  symbol  cfgNode  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  c.def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	4	None	replace
127	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  def);  [CE]  cannot  find  symbol  varName  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol  varName	12	None	replace
128	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),  t);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),  t);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),  t);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
129	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  def);  [CE]  cannot  find  symbol  def  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  def);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg);    	non-compiled	[CE]  cannot  find  symbol  def	12	None	replace
130	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]      Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	        Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  RuntimeException  	7	13	add
131	[BUG]  [BUGGY]      Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]      Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	        Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  RuntimeException  	7	13	add
132	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]          AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(varName));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  varName	10	None	replace
133	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t);  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t);	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  varName	10	None	replace
134	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName),  t);  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName),  t);  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName),  t);	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  varName	10	None	replace
135	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t.getModule());  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t.getModule());  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t.getModule());	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  varName	10	None	replace
136	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(n));  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError    [CONTEXT]    c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {    [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(n));  [BUGGY]    }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(n));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
