bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	92	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	  [FE]  AssertionFailedError  	92	6	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	  [FE]  AssertionFailedError  	92	6	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	92	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	92	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends!=  null  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	  [FE]  AssertionFailedError  	92	6	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  ||  c.defMetadata.depends.isEmpty());  [FE]  AssertionFailedError  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	  [FE]  AssertionFailedError  	92	6	replace
8	[BUG]  [BUGGY]  candidates.add(c.getSourceName());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  candidates.add(c.getSourceName());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	candidates.add(c.getSourceName());	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
9	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends;  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends;	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
10	[BUG]  [BUGGY]  candidates.add(t.getSourceName());  [CE]  no  suitable  method  found  for  add(String)  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  candidates.add(t.getSourceName());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	candidates.add(t.getSourceName());	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  no  suitable  method  found  for  add(String)	57	None	replace
11	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.depends]);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.depends]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.depends]);	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
12	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.inlineVariable()  ]);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.inlineVariable()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.inlineVariable()  ]);	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
13	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.getAssertionFailedError();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.getAssertionFailedError();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.getAssertionFailedError();	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
14	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.depends()  ]);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.depends()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.depends()  ]);	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
15	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.varName,  c.getScope().getVar(c.varName));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.varName,  c.getScope().getVar(c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.varName,  c.getScope().getVar(c.varName));	  inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
16	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.varName.getScope().getVar(c.varName));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.varName.getScope().getVar(c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.varName.getScope().getVar(c.varName));	  inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
17	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.varName,  t.getScope().getVar(c.varName));  [CE]  no  suitable  method  found  for  add(String,Var)  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.varName,  t.getScope().getVar(c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.varName,  t.getScope().getVar(c.varName));	  inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));    	non-compiled	[CE]  no  suitable  method  found  for  add(String,Var)	16	None	replace
18	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.varName.getScope(),  c.varName));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.varName.getScope(),  c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.varName.getScope(),  c.varName));	  inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));    	non-compiled	[CE]  ';'  expected	16	None	replace
19	[BUG]  [BUGGY]  c.inlineMetadata();  [CE]  cannot  find  symbol  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineMetadata();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineMetadata();	  c.inlineVariable();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
20	[BUG]  [BUGGY]  c.defMetadata.depends.remove(varName);  [CE]  cannot  find  symbol  varName  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.remove(varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.remove(varName);	  c.inlineVariable();    	non-compiled	[CE]  cannot  find  symbol  varName	53	None	replace
21	[BUG]  [BUGGY]  c.inlineFunction();  [CE]  cannot  find  symbol  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineFunction();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineFunction();	  c.inlineVariable();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
22	[BUG]  [BUGGY]  c.inlineDependencies();  [CE]  cannot  find  symbol  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineDependencies();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineDependencies();	  c.inlineVariable();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
23	[BUG]  [BUGGY]  c.defMetadata.depends.remove();  [CE]  no  suitable  method  found  for  remove()  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.remove();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.remove();	  c.inlineVariable();    	non-compiled	[CE]  no  suitable  method  found  for  remove()	53	None	replace
24	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.defMetadata.depends));  [CE]  cannot  find  symbol  defMetadata  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.defMetadata.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(t.defMetadata.depends));	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  cannot  find  symbol  defMetadata	29	None	replace
25	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  n));  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  n));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  n));	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  cannot  find  symbol  n	29	None	replace
26	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  numUseWithinUseCfgNode);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	29	None	replace
27	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  numUseWithinUseCfgNode));	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	29	None	replace
28	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata.depends));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata.depends));	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
29	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  n);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	29	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  depends  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  depends	120	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	120	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	120	None	replace
37	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.varName));  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(t.varName));	  inlinedNewDependencies.add(c.getScope().getVar(n));    	non-compiled	[CE]  cannot  find  symbol  varName	34	None	replace
38	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  n	106	None	replace
39	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  name	106	None	replace
40	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  varName	106	None	replace
41	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def.depends,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def.depends,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  def.depends,  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  varName	106	None	replace
42	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	115	13	add
43	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	115	13	add
44	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  cannot  find  symbol	115	None	add
45	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	115	13	add
46	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	115	13	add
47	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  cannot  find  symbol	115	None	add
48	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  [CE]  ';'  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;	  	non-compiled	[CE]  ';'  expected	115	None	add
49	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  not  a  statement  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  not  a  statement	115	None	add
50	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.inlineVariable());  if(!c.defMetadata.inlineVariable())  {  continue;  }  [CE]  cannot  find  symbol  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.inlineVariable());  if(!c.defMetadata.inlineVariable())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.inlineVariable());  if(!c.defMetadata.inlineVariable())  {  continue;  }	  	non-compiled	[CE]  cannot  find  symbol	115	None	add
51	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  reachingUses  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  continue;  }	  	non-compiled	[CE]  cannot  find  symbol  reachingUses	115	None	add
52	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.defMetadata);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.defMetadata);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
53	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	21	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||  c.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||  c.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||  c.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	112	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	112	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  &&  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  &&  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  &&  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	112	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	112	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkArgument(c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkArgument(c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkArgument(c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	112	None	replace
59	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[t.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
60	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError[t.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
61	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError[t.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError[t.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError[t.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
62	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
63	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[t.getSourceName()  +  1]);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[t.getSourceName()  +  1]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[t.getSourceName()  +  1]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
64	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError[t.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
65	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  num);  [CE]  cannot  find  symbol  num  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  num);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  num);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    n);    	non-compiled	[CE]  cannot  find  symbol  num	41	None	replace
66	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinCfgNode);  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    n);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	41	None	replace
67	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    n);    	non-compiled	[CE]  cannot  find  symbol  varName	41	None	replace
68	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.defMetadata);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  n	19	None	replace
69	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.defMetadata);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	19	None	replace
70	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	19	None	replace
71	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  c.defMetadata);  [CE]  cannot  find  symbol  depends  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  depends	19	None	replace
72	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.defMetadata);  [CE]  no  suitable  method  found  for  add(Var,Definition,Definition)  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,Definition,Definition)	19	None	replace
73	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  def);  [CE]  cannot  find  symbol  def  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  def	19	None	replace
74	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  cfg);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	83	None	replace
75	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfg,  reachingUses);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfg,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	83	None	replace
76	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfg,  reachingUses);  [CE]  cannot  find  symbol  cfgNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfg,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	83	None	replace
77	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cFgNode),  cfg,  reachingUses);  [CE]  cannot  find  symbol  cFgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cFgNode),  cfg,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cFgNode),  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  cFgNode	83	None	replace
78	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	83	None	replace
79	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  cfg,  reachingUses);  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  cfg,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  n	83	None	replace
80	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.depends));  [CE]  cannot  find  symbol  depends  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(t.depends));	  inlinedNewDependencies.add(t.getScope().getVar(c.depends));    	non-compiled	[CE]  cannot  find  symbol  depends	32	None	replace
81	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.depends));  [CE]  cannot  find  symbol  depends  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.depends));	  inlinedNewDependencies.add(t.getScope().getVar(c.depends));    	non-compiled	[CE]  cannot  find  symbol  depends	32	None	replace
82	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata.depends));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata.depends));	  inlinedNewDependencies.add(t.getScope().getVar(c.depends));    	non-compiled	[CE]  ';'  expected	32	None	replace
83	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata.depends);  [CE]  cannot  find  symbol  depends  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.depends));    	non-compiled	[CE]  cannot  find  symbol  depends	32	None	replace
84	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c,  c.depends));  [CE]  cannot  find  symbol  depends  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c,  c.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c,  c.depends));	  inlinedNewDependencies.add(t.getScope().getVar(c.depends));    	non-compiled	[CE]  cannot  find  symbol  depends	32	None	replace
85	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	10	None	replace
86	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses.depends,  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses.depends,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses.depends,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	10	None	replace
87	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	10	None	replace
88	[BUG]  [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(name),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	68	None	replace
89	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.defMetadata);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(name),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  name	68	None	replace
90	[BUG]  [BUGGY]  inlinedNewDependencies.add(s.getScope().getVar(varName),  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(s.getScope().getVar(varName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(s.getScope().getVar(varName),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(name),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	68	None	replace
91	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n,  t.getModule()));  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n,  t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n,  t.getModule()));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    t.getModule()));    	non-compiled	[CE]  cannot  find  symbol  n	103	None	replace
92	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode,  t.getModule()));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode,  t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode,  t.getModule()));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    t.getModule()));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	103	None	replace
93	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName,  c.getModule()));  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName,  c.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName,  c.getModule()));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    t.getModule()));    	non-compiled	[CE]  cannot  find  symbol  varName	103	None	replace
94	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name,  t.getModule()));  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name,  t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name,  t.getModule()));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    t.getModule()));    	non-compiled	[CE]  cannot  find  symbol  name	103	None	replace
95	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode,  t.getModule()));  [CE]  cannot  find  symbol  fnNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode,  t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode,  t.getModule()));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    t.getModule()));    	non-compiled	[CE]  cannot  find  symbol  fnNode	103	None	replace
96	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(varName));	  inlinedNewDependencies.add(c.getScope().getVar(name));    	non-compiled	[CE]  cannot  find  symbol  varName	35	None	replace
97	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfa);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfa);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	84	None	replace
98	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfa);  [CE]  cannot  find  symbol  cfgNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfa);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	84	None	replace
99	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName);  [CE]  cannot  find  symbol  cfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfa);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	84	None	replace
100	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  cfa);  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfa);    	non-compiled	[CE]  cannot  find  symbol  n	84	None	replace
101	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfa);    	non-compiled	[CE]  cannot  find  symbol  varName	84	None	replace
102	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  cfa);  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfa);    	non-compiled	[CE]  cannot  find  symbol  name	84	None	replace
103	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlinedNewDependencies);  [CE]  cannot  find  symbol  inlinedNewDependencies  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlinedNewDependencies);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlinedNewDependencies);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol  inlinedNewDependencies	1	None	replace
104	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol  varName	1	None	replace
105	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.varName);  [CE]  no  suitable  method  found  for  add(Var,String)  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.varName);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,String)	1	None	replace
106	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defNode);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defNode);    	non-compiled	[CE]  cannot  find  symbol  varName	40	None	replace
107	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.defNode);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defNode);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
108	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol  varName	128	None	replace
109	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  t);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  t);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol  varName	128	None	replace
110	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol  varName	128	None	replace
111	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.defMetadata.getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.defMetadata.getVar(numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.defMetadata.getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	81	None	replace
112	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getVar(numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	81	None	replace
113	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.defMetadata.getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.defMetadata.getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.defMetadata.getVar(varName));	  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  varName	81	None	replace
114	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(n),  t);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(n),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(n),  t);	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  n	133	None	replace
115	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode),  t);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode),  t);	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	133	None	replace
116	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(name),  t);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(name),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(name),  t);	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  name	133	None	replace
117	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(id),  t);  [CE]  cannot  find  symbol  id  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(id),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(id),  t);	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  id	133	None	replace
118	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(n),  t);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(n),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(n),  t);	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  n	134	None	replace
119	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(name),  t);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(name),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(name),  t);	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  name	134	None	replace
120	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode),  t);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode),  t);	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	134	None	replace
121	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(id),  t);  [CE]  cannot  find  symbol  id  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(id),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(id),  t);	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  id	134	None	replace
122	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.vars);  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.vars);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  cannot  find  symbol  n	124	None	replace
123	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.vars);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.vars);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  cannot  find  symbol  name	124	None	replace
124	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata.vars);  [CE]  cannot  find  symbol  NAME  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata.vars);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  cannot  find  symbol  NAME	124	None	replace
125	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(vName),  c.defMetadata.vars);  [CE]  cannot  find  symbol  vName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(vName),  c.defMetadata.vars);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(vName),  c.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  cannot  find  symbol  vName	124	None	replace
126	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	20	None	replace
127	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	20	None	replace
128	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata,  reachingUses);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	20	None	replace
129	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata,  reachingUses);  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  n	20	None	replace
130	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  n);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	8	None	replace
131	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  n);  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  n	8	None	replace
132	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  0);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  0);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	8	None	replace
133	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	8	None	replace
134	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  1);  [CE]  cannot  find  symbol  varName  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  1);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  1);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	8	None	replace
135	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  0);  [CE]  no  suitable  method  found  for  add(Var,Set<Var>,int)  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  0);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,Set<Var>,int)	8	None	replace
136	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  n	43	None	replace
137	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	43	None	replace
138	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  name	43	None	replace
139	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	43	None	replace
140	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defMetadata.numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  cfgNode  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defMetadata.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defMetadata.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	43	None	replace
141	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(NAME),  c.defMetadata.numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  NAME  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(NAME),  c.defMetadata.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(NAME),  c.defMetadata.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  NAME	43	None	replace
142	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  t.defMetadata);  [CE]  cannot  find  symbol  defPREDICATE  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defPREDICATE	100	None	replace
143	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.defPREDICATE),  c.defMetadata);  [CE]  cannot  find  symbol  defPREDICATE  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.defPREDICATE),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(t.defPREDICATE),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defPREDICATE	100	None	replace
144	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata),  c.defPREDICATE);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata),  c.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),    c.defMetadata);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	100	None	replace
145	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata),  t.defPREDICATE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata),  t.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata),  t.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
146	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  c.defMetadata);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),    c.defMetadata);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	100	None	replace
147	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    def);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	129	None	replace
148	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachUses);  [CE]  cannot  find  symbol  reachUses  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    def);    	non-compiled	[CE]  cannot  find  symbol  reachUses	129	None	replace
149	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    def);    	non-compiled	[CE]  cannot  find  symbol  varName	129	None	replace
150	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachingDef);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,MustBeReachingVariableDef)  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,MustBeReachingVariableDef)	129	None	replace
151	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa,  c.defMetadata);  [CE]  cannot  find  symbol  def  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  def	77	None	replace
152	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfa,  c.defMetadata);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfa,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfa,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  n	77	None	replace
153	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfa,  c.defMetadata);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfa,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfa,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	77	None	replace
154	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def,  c.defMetadata);  [CE]  cannot  find  symbol  def  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  def	77	None	replace
155	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  c.defMetadata,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,Definition,MaybeReachingVariableUse)  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.defMetadata);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,Definition,MaybeReachingVariableUse)	77	None	replace
156	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.defMetadata,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,Definition,MaybeReachingVariableUse)  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.defMetadata);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,Definition,MaybeReachingVariableUse)	77	None	replace
157	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	79	None	replace
158	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  varName,  reachingUses);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  varName,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  varName,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    reachingUses);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	79	None	replace
159	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c,  reachingUses);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	79	None	replace
160	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c,  reachingUses);  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  n	79	None	replace
161	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	122	None	replace
162	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	122	None	replace
163	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	122	None	replace
164	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	122	None	replace
165	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	122	None	replace
166	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	122	None	replace
167	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.def);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	73	None	replace
168	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.def);  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def);    	non-compiled	[CE]  cannot  find  symbol  n	73	None	replace
169	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.varName);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.varName);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	73	None	replace
170	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError(t.getModule()));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError(t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError(t.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
171	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(c.getModule()));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(c.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(c.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
172	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t,  c.getModule()));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t,  c.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t,  c.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
173	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(t.getModule()));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(t.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
174	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.defMetadata.depends.toArray(new  AssertionFailedError(c.getModule()));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.defMetadata.depends.toArray(new  AssertionFailedError(c.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.defMetadata.depends.toArray(new  AssertionFailedError(c.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
175	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError(t.getModule()));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError(t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError(t.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
176	[BUG]  [BUGGY]  c.defMetadata.inlineVariable();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inlineVariable();	  c.defMetadata.depends.clear();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
177	[BUG]  [BUGGY]  c.defMetadata.inlineDependencies.clear();  [CE]  cannot  find  symbol  inlineDependencies  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inlineDependencies.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inlineDependencies.clear();	  c.defMetadata.depends.clear();    	non-compiled	[CE]  cannot  find  symbol  inlineDependencies	96	None	replace
178	[BUG]  [BUGGY]  c.defMetadata.depends.add(n);  [CE]  cannot  find  symbol  n  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.add(n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.add(n);	  c.defMetadata.depends.clear();    	non-compiled	[CE]  cannot  find  symbol  n	96	None	replace
179	[BUG]  [BUGGY]  c.defMetadata.depends.remove(c.inlineVariable());  [CE]  'void'  type  not  allowed  here  [FE]          AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.remove(c.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.remove(c.inlineVariable());	  c.defMetadata.depends.clear();    	non-compiled	[CE]  'void'  type  not  allowed  here	96	None	replace
180	[BUG]  [BUGGY]  c.defMetadata.inlineCfgNode();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inlineCfgNode();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inlineCfgNode();	  c.defMetadata.depends.clear();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
181	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.depends!=  null);  [CE]  cannot  find  symbol  depends  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.depends!=  null);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  depends	58	None	replace
182	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends  ==  null);  [CE]  cannot  find  symbol  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends  ==  null);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  AssertionFailedError	58	None	replace
183	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.depends  ==  null);  [CE]  cannot  find  symbol  depends  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.depends  ==  null);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  depends	58	None	replace
184	[BUG]  [BUGGY]  AssertionFailedError.checkState(c,  c.defMetadata.depends!=  null);  [CE]  cannot  find  symbol  AssertionFailedError  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c,  c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c,  c.defMetadata.depends!=  null);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  AssertionFailedError	58	None	replace
185	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends  >=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends  >=  null);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	58	None	replace
186	[BUG]  [BUGGY]  AssertionFailedError.checkState(t.defMetadata.depends!=  null);  [CE]  cannot  find  symbol  defMetadata  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(t.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(t.defMetadata.depends!=  null);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  defMetadata	58	None	replace
187	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	9	None	replace
188	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.depends,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	9	None	replace
189	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	9	None	replace
190	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  numUseWithinUseCfgNode,  c.depends);  [CE]  cannot  find  symbol  varName  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  numUseWithinUseCfgNode,  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  numUseWithinUseCfgNode,  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	9	None	replace
191	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode,  cfa);  [CE]  cannot  find  symbol  varName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode,  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode,  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	9	None	replace
192	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  numUseWithinUseCfgNode));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.varName,  numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
193	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.varName));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  t.varName));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
194	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  numUseWithinUseCfgNode));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
195	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  n));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  n));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  n));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
196	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  numUseWithinCfgNode));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.varName,  numUseWithinCfgNode));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
197	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope(),  c.varName));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope(),  c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope(),  c.varName));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
198	[BUG]  [BUGGY]  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	c.inlineVariable();    c.inlineVariable();	  	compilable	timeout	52	1	add
199	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineVariable();  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineVariable();	  	compilable	timeout	52	1	add
200	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineMetadata();  [CE]  cannot  find  symbol  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineMetadata();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineMetadata();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
201	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineFunction();  [CE]  cannot  find  symbol  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineFunction();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineFunction();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
202	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineDependencies();  [CE]  cannot  find  symbol  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineDependencies();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineDependencies();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
203	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineDependency();  [CE]  cannot  find  symbol  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineDependency();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineDependency();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
204	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineScope();  [CE]  cannot  find  symbol  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineScope();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineScope();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
205	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineParent();  [CE]  cannot  find  symbol  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineParent();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineParent();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
206	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineDependencies(t);  [CE]  cannot  find  symbol  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineDependencies(t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineDependencies(t);	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
207	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  cfg,  def);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  cfg,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  n	127	None	replace
208	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfg,  def);  [CE]  cannot  find  symbol  cfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfg,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	127	None	replace
209	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c,  varName),  cfg,  def);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c,  varName),  cfg,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c,  varName),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  varName	127	None	replace
210	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  cfg,  def);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  cfg,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  name	127	None	replace
211	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  cfg,  def);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  cfg,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	127	None	replace
212	[BUG]  [BUGGY]  candidates.add(t.inlineVariable(),  t.inlineVariable());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  candidates.add(t.inlineVariable(),  t.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	candidates.add(t.inlineVariable(),  t.inlineVariable());	          if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable(),    t.inlineVariable());    }    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
213	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }	          if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable(),    t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	59	None	replace
214	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }	          if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable(),    t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	59	None	replace
215	[BUG]  [BUGGY]  vices.add(t.inlineVariable(),  t.inlineVariable());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  vices.add(t.inlineVariable(),  t.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	vices.add(t.inlineVariable(),  t.inlineVariable());	          if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable(),    t.inlineVariable());    }    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
216	[BUG]  [BUGGY]  candidates.add(c.inlineVariable(),  c.inlineVariable());  [CE]  'void'  type  not  allowed  here  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  candidates.add(c.inlineVariable(),  c.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	candidates.add(c.inlineVariable(),  c.inlineVariable());	          if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable(),    t.inlineVariable());    }    	non-compiled	[CE]  'void'  type  not  allowed  here	59	None	replace
217	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }	          if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable(),    t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	59	None	replace
218	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  t.getScope());  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  t.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	25	None	replace
219	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.varName.getScope());  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.varName.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.varName.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	25	None	replace
220	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg.getScope());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
221	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.defMetadata.getScope());  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.defMetadata.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.defMetadata.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	25	None	replace
222	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t.getScope());  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	25	None	replace
223	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.inlineScope,  t.getScope());  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.inlineScope,  t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.inlineScope,  t.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	25	None	replace
224	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  c.getScope());  [CE]  cannot  find  symbol  varName  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  c.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg,  c.getScope().getVar(varName),  c.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	25	None	replace
225	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defPREDICATE);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	72	None	replace
226	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defPREDICATE);  [CE]  cannot  find  symbol  defPREDICATE  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  cannot  find  symbol  defPREDICATE	72	None	replace
227	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defPREDICATE);  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  cannot  find  symbol  n	72	None	replace
228	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defPREDICATE);  [CE]  cannot  find  symbol  cfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	72	None	replace
229	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),  c.defPREDICATE);  [CE]  cannot  find  symbol  defPREDICATE  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),  c.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  cannot  find  symbol  defPREDICATE	72	None	replace
230	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defPREDICATE);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  cannot  find  symbol  name	72	None	replace
231	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachUses);  [CE]  cannot  find  symbol  reachUses  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  reachUses	22	None	replace
232	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  null);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,<null>)  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  null);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,<null>)	22	None	replace
233	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  def);  [CE]  cannot  find  symbol  cfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	22	None	replace
234	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(name));  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(name));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(name));	  inlinedNewDependencies.add(c.defMetadata.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  name	132	None	replace
235	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(id));  [CE]  cannot  find  symbol  id  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(id));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(id));	  inlinedNewDependencies.add(c.defMetadata.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  id	132	None	replace
236	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(i));  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(i));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(i));	  inlinedNewDependencies.add(c.defMetadata.getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  i	132	None	replace
237	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	86	None	replace
238	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses.depends,  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses.depends,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses.depends,  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	86	None	replace
239	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  varName	33	None	replace
240	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.getScope().getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.getScope().getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.getScope().getVar(varName));	  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  varName	33	None	replace
241	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  cfgNode));  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  cfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  cfgNode));	  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  varName	33	None	replace
242	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.depends);  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	69	None	replace
243	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.depends);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  t.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
244	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(v.varName),  t.depends);  [CE]  cannot  find  symbol  v  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(v.varName),  t.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(v.varName),  t.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends);    	non-compiled	[CE]  cannot  find  symbol  v	69	None	replace
245	[BUG]  [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  c.depends);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	69	None	replace
246	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError(t.getSourceName()));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError(t.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError(t.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
247	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(c.getSourceName()));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(c.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(c.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
248	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t,  c.getSourceName()));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t,  c.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError(t,  c.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
249	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError(t.getSourceName()));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError(t.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError(t.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
250	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.defMetadata.depends.toArray(new  AssertionFailedError(c.getSourceName()));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.defMetadata.depends.toArray(new  AssertionFailedError(c.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.defMetadata.depends.toArray(new  AssertionFailedError(c.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
251	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError(t.getSourceName()));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError(t.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError(t.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
252	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(n),  t.getModule());  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(n),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(n),  t.getModule());	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  n	135	None	replace
253	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode),  t.getModule());  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode),  t.getModule());	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	135	None	replace
254	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(name),  t.getModule());  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(name),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(name),  t.getModule());	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  name	135	None	replace
255	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(id),  t.getModule());  [CE]  cannot  find  symbol  id  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(id),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(id),  t.getModule());	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  id	135	None	replace
256	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfg);  [CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,ControlFlowGraph<Node>)  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,ControlFlowGraph<Node>)	27	None	replace
257	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfg,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,ControlFlowGraph<Node>,MaybeReachingVariableUse)  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfg,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,ControlFlowGraph<Node>,MaybeReachingVariableUse)	27	None	replace
258	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfg);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,ControlFlowGraph<Node>)  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,ControlFlowGraph<Node>)	27	None	replace
259	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfg,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfg,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	27	None	replace
260	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses,  cfg);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
261	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  varName);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  varName);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	125	None	replace
262	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  c);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	125	None	replace
263	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c);  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c);    	non-compiled	[CE]  cannot  find  symbol  n	125	None	replace
264	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c);    	non-compiled	[CE]  cannot  find  symbol  name	125	None	replace
265	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  v);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  v);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  v);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	125	None	replace
266	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	42	None	replace
267	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends);  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  n	42	None	replace
268	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  name	42	None	replace
269	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.defMetadata);  [CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,Definition)  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,Definition)	17	None	replace
270	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,Definition)  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,Definition)	17	None	replace
271	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,Definition,MaybeReachingVariableUse)  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,Definition,MaybeReachingVariableUse)	17	None	replace
272	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  t.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	17	None	replace
273	[BUG]  [BUGGY]  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends    ==    null);    Preconditions.checkState(c.defMetadata.depends  ==  null);	  	compilable	timeout	93	1	add
274	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    Preconditions.checkState(c.defMetadata.depends  ==  null);	  	compilable	timeout	93	1	add
275	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends    ==    null);    Preconditions.checkState(c.defMetadata.depends!=  null);	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	93	13	add
276	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends!=  null);  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    Preconditions.checkState(c.defMetadata.depends!=  null);	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	93	13	add
277	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode))  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode))  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode))  {  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  ';'  expected	93	None	add
278	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode);  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	93	None	add
279	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode)  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [CE]  ';'  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode)  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode)  {  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  ';'  expected	93	None	add
280	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode));  Preconditions.checkState(c.defMetadata.depends  ==  null);  [CE]  ';'  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode));  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode));  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  ';'  expected	93	None	add
281	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode))  {  Preconditions.checkState(c.defMetadata.depends  ==  nu  [CE]  ';'  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode))  {  Preconditions.checkState(c.defMetadata.depends  ==  nu  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    AssertionFailedError.make(t,  c.defMetadata.depends,  numUseWithinUseCfgNode,  numUseWithinUseCfgNode))  {  Preconditions.checkState(c.defMetadata.depends  ==  nu	  	non-compiled	[CE]  ';'  expected	93	None	add
282	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  }  else  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends    ==    null);    Preconditions.checkState(c.defMetadata.depends  ==  null);  }  else  {  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	compilable	  [FE]  RuntimeException  	93	28	add
283	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  }  else  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [FE]  RuntimeException  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  }  else  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    Preconditions.checkState(c.defMetadata.depends  ==  null);  }  else  {  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	compilable	  [FE]  RuntimeException  	93	28	add
284	[BUG]  [BUGGY]  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	compilable	timeout	111	1	add
285	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	compilable	timeout	111	1	add
286	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol	111	None	add
287	[BUG]  [BUGGY]  timeout  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	compilable	timeout	111	1	add
288	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  timeout  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	compilable	timeout	111	1	add
289	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Context.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  Context  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Context.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Context.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  Context	111	None	add
290	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol	111	None	add
291	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  }  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	add
292	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.desefMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  desefMetadata  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.desefMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.desefMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  desefMetadata	111	None	add
293	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defNode);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defNode);    	non-compiled	[CE]  cannot  find  symbol  n	39	None	replace
294	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defNode);  [CE]  cannot  find  symbol  cfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defNode);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	39	None	replace
295	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defNode);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	39	None	replace
296	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defNode);  [CE]  cannot  find  symbol  defNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defNode);    	non-compiled	[CE]  cannot  find  symbol  defNode	39	None	replace
297	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfa);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	82	None	replace
298	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(v));  [CE]  cannot  find  symbol  v  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(v));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(v));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(id));    	non-compiled	[CE]  cannot  find  symbol  v	48	None	replace
299	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.depends.getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.depends.getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.depends.getVar(varName));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(id));    	non-compiled	[CE]  cannot  find  symbol  varName	48	None	replace
300	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfgNode);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	107	None	replace
301	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  cfgNode);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfgNode);    	non-compiled	[CE]  cannot  find  symbol  n	107	None	replace
302	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  cfgNode);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfgNode);    	non-compiled	[CE]  cannot  find  symbol  name	107	None	replace
303	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  cfgNode);  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfgNode);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	107	None	replace
304	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
305	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	71	None	replace
306	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  def);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  def);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
307	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  def);  [CE]  cannot  find  symbol  def  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  def);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol  def	71	None	replace
308	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  n);  [CE]  cannot  find  symbol  n  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  n);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol  n	71	None	replace
309	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  n);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  n);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
310	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  c.defMetadata);  [CE]  no  suitable  method  found  for  add(FlowSensitiveInlineVariables.Candidate,Var,Definition)  [FE]                                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  c.defMetadata);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  no  suitable  method  found  for  add(FlowSensitiveInlineVariables.Candidate,Var,Definition)	71	None	replace
311	[BUG]  [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t,  c.getScope().getVar(varName));	  inlinedNewDependencies.add(t.getScope().getVar(name));    	non-compiled	[CE]  cannot  find  symbol  varName	75	None	replace
312	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.variableName));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.variableName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.variableName));	  inlinedNewDependencies.add(t.getScope().getVar(c.variableName));    	non-compiled	[CE]  cannot  find  symbol  	31	None	replace
313	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.variableName));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.variableName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(t.variableName));	  inlinedNewDependencies.add(t.getScope().getVar(c.variableName));    	non-compiled	[CE]  cannot  find  symbol  	31	None	replace
314	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(v.variableName));  [CE]  cannot  find  symbol  v  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(v.variableName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(v.variableName));	  inlinedNewDependencies.add(t.getScope().getVar(c.variableName));    	non-compiled	[CE]  cannot  find  symbol  v	31	None	replace
315	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(variableName));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(variableName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(variableName));	  inlinedNewDependencies.add(t.getScope().getVar(c.variableName));    	non-compiled	[CE]  cannot  find  symbol  	31	None	replace
316	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.variableName));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.variableName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.variableName));	  inlinedNewDependencies.add(t.getScope().getVar(c.variableName));    	non-compiled	[CE]  cannot  find  symbol  	31	None	replace
317	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.defMetadata.depends);  [CE]  cannot  find  symbol  n  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
318	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.defMetadata.depends);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	11	None	replace
319	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	11	None	replace
320	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.depends);  [CE]  cannot  find  symbol  varName  [FE]                                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	11	None	replace
321	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  c.depends);  [CE]  cannot  find  symbol  depends  [FE]                                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  depends	11	None	replace
322	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  c.defMetadata.depends);  [CE]  cannot  find  symbol  depends  [FE]                                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.depends,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  depends	11	None	replace
323	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t);  [CE]  cannot  find  symbol  n  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  n	101	None	replace
324	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	101	None	replace
325	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t);  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  name	101	None	replace
326	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t);  [CE]  cannot  find  symbol  fnNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  fnNode	101	None	replace
327	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(id),  t);  [CE]  cannot  find  symbol  id  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(id),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(id),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  id	101	None	replace
328	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t);  [CE]  cannot  find  symbol  NAME  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  NAME	101	None	replace
329	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.defMetadata);  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  t.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  n	18	None	replace
330	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.defMetadata);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	18	None	replace
331	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.defMetadata);  [CE]  cannot  find  symbol  NAME  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  NAME	18	None	replace
332	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.defMetadata);  [CE]  cannot  find  symbol  fnNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  fnNode	18	None	replace
333	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	114	None	replace
334	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	114	None	replace
335	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	114	None	replace
336	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	114	None	replace
337	[BUG]  [BUGGY]  Preconditions.checkState(c.def.depends.isEmpty());  if(!c.def.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.def.depends.isEmpty());  if(!c.def.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.def.depends.isEmpty());  if(!c.def.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	114	None	replace
338	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	114	None	replace
339	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(Node.NAME));  [CE]  cannot  find  symbol  NAME  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(Node.NAME));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(Node.NAME));	  inlinedNewDependencies.add(c.getScope().getVar(NAME));    	non-compiled	[CE]  cannot  find  symbol  NAME	38	None	replace
340	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defName),  t.defMetadata);  [CE]  cannot  find  symbol  defName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defName),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defName),  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defName	67	None	replace
341	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  defName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.defName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defName	67	None	replace
342	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.depends);  [CE]  cannot  find  symbol  defName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.defName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defName	67	None	replace
343	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(v));  [CE]  cannot  find  symbol  v  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(v));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(v));	  inlinedNewDependencies.add(c.defMetadata.getVar(n));    	non-compiled	[CE]  cannot  find  symbol  v	136	None	replace
344	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(t.varName));  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(t.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(t.varName));	  inlinedNewDependencies.add(c.defMetadata.getVar(n));    	non-compiled	[CE]  cannot  find  symbol  varName	136	None	replace
345	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(vn));  [CE]  cannot  find  symbol  vn  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(vn));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(vn));	  inlinedNewDependencies.add(c.defMetadata.getVar(n));    	non-compiled	[CE]  cannot  find  symbol  vn	136	None	replace
346	[BUG]  [BUGGY]  For(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  ')'  expected	56	None	replace
347	[BUG]  [BUGGY]  for(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  for(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	for(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  ')'  expected	56	None	replace
348	[BUG]  [BUGGY]  AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
349	[BUG]  [BUGGY]  Pentru(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Pentru(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Pentru(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  ')'  expected	56	None	replace
350	[BUG]  [BUGGY]  AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
351	[BUG]  [BUGGY]  For(AssertionFailedError  c  =  candidates.get(1);  c.inlineVariable();  c.inlineVariable();  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  c  =  candidates.get(1);  c.inlineVariable();  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  c  =  candidates.get(1);  c.inlineVariable();  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  ')'  expected	56	None	replace
352	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.defMetadata.depends);  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  t.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  n	7	None	replace
353	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.defMetadata.depends);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	7	None	replace
354	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.defMetadata.depends);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  t.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  name	7	None	replace
355	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.defMetadata.depends);  [CE]  cannot  find  symbol  NAME  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  NAME	7	None	replace
356	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
357	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  cfgNode  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	4	None	replace
358	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
359	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c);  [CE]  cannot  find  symbol  n  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  n	4	None	replace
360	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c);  [CE]  cannot  find  symbol  varName  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
361	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c);  [CE]  cannot  find  symbol  varName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
362	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c);  [CE]  cannot  find  symbol  varName  [FE]                                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
363	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  varName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  varName);	  inlinedNewDependencies.add(c.getScope(),    c.varName);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
364	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.varName);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  t.varName);	  inlinedNewDependencies.add(c.getScope(),    c.varName);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
365	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope(),  varName);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope(),  varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope(),  varName);	  inlinedNewDependencies.add(c.getScope(),    c.varName);    	non-compiled	[CE]  cannot  find  symbol  varName	70	None	replace
366	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  n,  c.varName);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  n,  c.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  n,  c.varName);	  inlinedNewDependencies.add(c.getScope(),    c.varName);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
367	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope(),  varName);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope(),  varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope(),  varName);	  inlinedNewDependencies.add(c.getScope(),    c.varName);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
368	[BUG]  [BUGGY]  ||!c.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  ||!c.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	||!c.depends.isEmpty())  {  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
369	[BUG]  [BUGGY]  Context.checkState(!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
370	[BUG]  [BUGGY]  if(!c.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  cannot  find  symbol  depends  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.depends.isEmpty())  {  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  cannot  find  symbol  depends	51	None	replace
371	[BUG]  [BUGGY]  Context.checkState(!c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
372	[BUG]  [BUGGY]  Context.checkState(!c.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.depends.isEmpty())  {  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
373	[BUG]  [BUGGY]  Context.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
374	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  c,  def);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  c,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  c,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    def);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	104	None	replace
375	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c,  def);  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    def);    	non-compiled	[CE]  cannot  find  symbol  n	104	None	replace
376	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c,  def);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    def);    	non-compiled	[CE]  cannot  find  symbol  name	104	None	replace
377	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  def,  c);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  def,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  def,  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    def);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	104	None	replace
378	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  c.defMetadata.depends.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	c.defMetadata.depends.clear();    c.defMetadata.depends.clear();	  	compilable	timeout	95	1	add
379	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  c.defMetadata.depends.clear();  timeout  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  c.defMetadata.depends.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    c.defMetadata.depends.clear();	  	compilable	timeout	95	1	add
380	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
381	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.depends.clear();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.depends.clear();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.depends.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
382	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	c.defMetadata.depends.clear();    if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }	  	compilable	timeout	95	1	add
383	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  timeout  [FE]          AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }	  	compilable	timeout	95	1	add
384	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.	  	non-compiled	[CE]  ';'  expected	95	None	add
385	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();	  	non-compiled	[CE]  ';'  expected	95	None	add
386	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.depends.clear();  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.depends.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.clear())  {  c.defMetadata.depends.clear();	  	non-compiled	[CE]  ';'  expected	95	None	add
387	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n,  c.varName));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n,  c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n,  c.varName));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  cannot  find  symbol  n	123	None	replace
388	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name,  c.varName));  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name,  c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name,  c.varName));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  cannot  find  symbol  name	123	None	replace
389	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varValue));  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varValue));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varValue));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  cannot  find  symbol  varName	123	None	replace
390	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(v,  c.varName));  [CE]  cannot  find  symbol  v  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(v,  c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(v,  c.varName));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  cannot  find  symbol  v	123	None	replace
391	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varType));  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varType));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.varType));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  cannot  find  symbol  varName	123	None	replace
392	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    cfg);    	non-compiled	[CE]  cannot  find  symbol  varName	23	None	replace
393	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfg);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    cfg);    	non-compiled	[CE]  cannot  find  symbol  n	23	None	replace
394	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  cfgNode);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    cfg);    	non-compiled	[CE]  cannot  find  symbol  varName	23	None	replace
395	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  cfg);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    cfg);    	non-compiled	[CE]  cannot  find  symbol  varName	23	None	replace
396	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  n	105	None	replace
397	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  name  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  name	105	None	replace
398	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(NAME_PREDICATE),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  NAME_PREDICATE  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(NAME_PREDICATE),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(NAME_PREDICATE),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  NAME_PREDICATE	105	None	replace
399	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends,  def);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  varName	105	None	replace
400	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.varName);  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  t.varName);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  n	15	None	replace
401	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.varName);  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  t.varName);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  name	15	None	replace
402	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.scope);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.scope);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.scope);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  varName	15	None	replace
403	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.sourceName);  [CE]  cannot  find  symbol  varName  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.sourceName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.sourceName);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  varName	15	None	replace
404	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.type);  [CE]  cannot  find  symbol  varName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.type);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.type);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  varName	15	None	replace
405	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c);  [CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,FlowSensitiveInlineVariables.Candidate)  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,FlowSensitiveInlineVariables.Candidate)	78	None	replace
406	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	78	None	replace
407	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,FlowSensitiveInlineVariables.Candidate)  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,FlowSensitiveInlineVariables.Candidate)	78	None	replace
408	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
409	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t.defMetadata);  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	99	None	replace
410	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.depends.getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.depends.getVar(numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.depends.getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	46	None	replace
411	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.depends.getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.depends.getVar(numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.depends.getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	46	None	replace
412	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName,  numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName,  numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName,  numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  varName	46	None	replace
413	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  n	121	None	replace
414	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	121	None	replace
415	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata);  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  name	121	None	replace
416	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata);  [CE]  cannot  find  symbol  NAME  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  NAME	121	None	replace
417	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(vName),  c.defMetadata);  [CE]  cannot  find  symbol  vName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(vName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(vName),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  vName	121	None	replace
418	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  n);  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  n	3	None	replace
419	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  n);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
420	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  useCfgNode);  [CE]  cannot  find  symbol  useCfgNode  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  useCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  useCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  useCfgNode	3	None	replace
421	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  0);  [CE]  no  suitable  method  found  for  add(Var,FlowSensitiveInlineVariables.Candidate,int)  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  0);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,FlowSensitiveInlineVariables.Candidate,int)	3	None	replace
422	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.defNode);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
423	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
424	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  +  1]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  +  1]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  +  1]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
425	[BUG]  [BUGGY]  AssertionFailedError  t  =  c,  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c,  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c,  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  ';'  expected	89	None	replace
426	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  *  2]);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  *  2]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  *  2]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
427	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.def);  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  t.def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  n	62	None	replace
428	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.def);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  t.def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  name	62	None	replace
429	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.def);  [CE]  cannot  find  symbol  NAME  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  NAME	62	None	replace
430	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.def);  [CE]  cannot  find  symbol  fnNode  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  fnNode	62	None	replace
431	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(vName),  t.def);  [CE]  cannot  find  symbol  vName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(vName),  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(vName),  t.def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  vName	62	None	replace
432	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.node));  [CE]  cannot  find  symbol  node  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.node));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.node));	  inlinedNewDependencies.add(t.getScope().getVar(n));    	non-compiled	[CE]  cannot  find  symbol  node	30	None	replace
433	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c));  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c));	  inlinedNewDependencies.add(t.getScope().getVar(n));    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	30	None	replace
434	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  depends  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  depends	116	None	replace
435	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
436	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty());  if(!c.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  depends  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty());  if(!c.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty());  if(!c.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  depends	116	None	replace
437	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  depends  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  depends	116	None	replace
438	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  depends  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  depends	116	None	replace
439	[BUG]  [BUGGY]  Preconditions.checkState(c.def.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  depends  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.def.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.def.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  depends	116	None	replace
440	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	55	None	replace
441	[BUG]  [BUGGY]  Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	55	None	replace
442	[BUG]  [BUGGY]  candidates.add(t.inlineVariable());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  candidates.add(t.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	candidates.add(t.inlineVariable());	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
443	[BUG]  [BUGGY]  candidates.add(c.inlineVariable());  [CE]  'void'  type  not  allowed  here  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  candidates.add(c.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	candidates.add(c.inlineVariable());	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  'void'  type  not  allowed  here	55	None	replace
444	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable());  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	55	None	replace
445	[BUG]  [BUGGY]  Pentru(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable());  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Pentru(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Pentru(AssertionFailedError  t  :  c.depends)  {  candidates.add(t.inlineVariable());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	55	None	replace
446	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	113	13	add
447	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	113	13	add
448	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol	113	None	add
449	[BUG]  [BUGGY]  timeout  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	timeout	113	1	add
450	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  timeout  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	timeout	113	1	add
451	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol	113	None	add
452	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	113	13	add
453	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	113	13	add
454	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  break;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  break;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	113	13	add
455	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  break;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  break;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  break;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	113	13	add
456	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  [CE]  ';'  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	113	None	add
457	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.inlineVariable());  if(!c.defMetadata.inlineVariable())  {  return;  }  [CE]  cannot  find  symbol  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.inlineVariable());  if(!c.defMetadata.inlineVariable())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.inlineVariable());  if(!c.defMetadata.inlineVariable())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol	113	None	add
458	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	50	13	add
459	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	50	13	add
460	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  cannot  find  symbol  depends  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.depends.isEmpty())  {  c.inlineVariable();  }	  	non-compiled	[CE]  cannot  find  symbol  depends	50	None	add
461	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.isEmpty())  {  c.inlineVariable();  }  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.isEmpty())  {  c.inlineVariable();  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
462	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.calls.isEmpty())  {  c.inlineVariable();  }  [CE]  cannot  find  symbol  calls  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.calls.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.calls.isEmpty())  {  c.inlineVariable();  }	  	non-compiled	[CE]  cannot  find  symbol  calls	50	None	add
463	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.reachingUses.isEmpty())  {  c.inlineVariable();  }  [CE]  cannot  find  symbol  reachingUses  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.reachingUses.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.reachingUses.isEmpty())  {  c.inlineVariable();  }	  	non-compiled	[CE]  cannot  find  symbol  reachingUses	50	None	add
464	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.inlineVariable())  {  c.inlineVariable();  }  [CE]  'void'  type  not  allowed  here  [FE]              RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.inlineVariable())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.inlineVariable())  {  c.inlineVariable();  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	50	None	add
465	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]                RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.depends.equals( " "))  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.depends.equals( " "))  {  c.inlineVariable();  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	50	13	add
466	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.depends.equals( " "))  {  c.inlineVariable();  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]                RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.depends.equals( " "))  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.depends.equals( " "))  {  c.inlineVariable();  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	50	13	add
467	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    n);    	non-compiled	[CE]  cannot  find  symbol  n	44	None	replace
468	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  n);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  n);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    n);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	44	None	replace
469	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  n);  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  n);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    n);    	non-compiled	[CE]  cannot  find  symbol  name	44	None	replace
470	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  n);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  n	24	None	replace
471	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  n);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	24	None	replace
472	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  useCfgNode);  [CE]  cannot  find  symbol  useCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  useCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  useCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  useCfgNode	24	None	replace
473	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  1);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,int)  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  1);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  1);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    numUseWithinUseCfgNode);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,int)	24	None	replace
474	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.depends.getVar(numUseWithinCfgNode));  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.depends.getVar(numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.depends.getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	49	None	replace
475	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.depends.getVar(numUseWithinCfgNode));  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.depends.getVar(numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.depends.getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	49	None	replace
476	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.defMetadata.depends.getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.defMetadata.depends.getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.defMetadata.depends.getVar(varName));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(name));    	non-compiled	[CE]  cannot  find  symbol  varName	47	None	replace
477	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getScope());  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
478	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.getScope());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
479	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.getScope());  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
480	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  t.getScope());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.varName,  t.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
481	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  c.getScope());  [CE]  cannot  find  symbol  varName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  c.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  c.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
482	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.vs.getScope());  [CE]  cannot  find  symbol  vs  [FE]                                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.vs.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.vs.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  vs	5	None	replace
483	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlineDynamicScope,  t.getScope());  [CE]  cannot  find  symbol  inlineDynamicScope  [FE]                                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlineDynamicScope,  t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlineDynamicScope,  t.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  inlineDynamicScope	5	None	replace
484	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.defMetadata.depends);  [CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,Set<Var>)  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,Set<Var>)	6	None	replace
485	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	6	None	replace
486	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata.depends,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,Set<Var>,MaybeReachingVariableUse)  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,Set<Var>,MaybeReachingVariableUse)	6	None	replace
487	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.depends);  [CE]  cannot  find  symbol  depends  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  depends	6	None	replace
488	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	64	None	replace
489	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.def,  reachingUses);  [CE]  cannot  find  symbol  n  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  n	64	None	replace
490	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.def);  [CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,Node)  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,Node)	64	None	replace
491	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.def,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	64	None	replace
492	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.def);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,Node)  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,Node)	60	None	replace
493	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses,  c.def);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  reachingUses,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
494	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.def,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	60	None	replace
495	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	60	None	replace
496	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  AssertionFailedError  	109	3	add
497	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  AssertionFailedError  	109	3	add
498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  AssertionFailedError  	109	3	add
499	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  AssertionFailedError  	109	3	add
500	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(C.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [CE]  package  C.defMetadata  does  not  exist  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(C.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(C.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  package  C.defMetadata  does  not  exist	109	None	add
501	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Context.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  Context  [FE]          AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Context.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Context.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  Context	109	None	add
502	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||! "c.defMetadata.depends.isEmpty());  [CE]  unclosed  string  literal  [FE]            AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||! "c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||! "c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  unclosed  string  literal	109	None	add
503	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]              AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  depends	109	None	add
504	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUse));  [CE]  cannot  find  symbol  numUseWithinUse  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUse));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUse));	  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUse	28	None	replace
505	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends!=    null);    Preconditions.checkState(c.defMetadata.depends!=  null);	  	compilable	  [FE]  AssertionFailedError  	87	3	add
506	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends!=  null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    Preconditions.checkState(c.defMetadata.depends!=  null);	  	compilable	  [FE]  AssertionFailedError  	87	3	add
507	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends!=    null);    Preconditions.checkState(c.defMetadata.depends  ==  null);	  	compilable	timeout	87	1	add
508	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  timeout  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    Preconditions.checkState(c.defMetadata.depends  ==  null);	  	compilable	timeout	87	1	add
509	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  >=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    Preconditions.checkState(c.defMetadata.depends  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	87	None	add
510	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  >>  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    Preconditions.checkState(c.defMetadata.depends  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	87	None	add
511	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    AssertionFailedError  <  Node>  c  =  c.inlineVariable();	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
512	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  [BUGGY]  null);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(c.defMetadata.depends  [BUGGY]  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    Preconditions.checkState(c.defMetadata.depends  [BUGGY]  null);	  	non-compiled	[CE]  ')'  expected	87	None	add
513	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Context.checkState(c.defMetadata.depends!=  null);  [CE]  cannot  find  symbol  Context  [FE]                AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Context.checkState(c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    Context.checkState(c.defMetadata.depends!=  null);	  	non-compiled	[CE]  cannot  find  symbol  Context	87	None	add
514	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(C.defMetadata.depends!=  null);  [CE]  package  C  does  not  exist  [FE]                  AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  Preconditions.checkState(C.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    Preconditions.checkState(C.defMetadata.depends!=  null);	  	non-compiled	[CE]  package  C  does  not  exist	87	None	add
515	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  numUseWithinCfgNode));  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  numUseWithinCfgNode));	  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode));    	non-compiled	[CE]  cannot  find  symbol  varName	37	None	replace
516	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.def);  [CE]  no  suitable  method  found  for  add(Var,Definition,Node)  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,Definition,Node)	63	None	replace
517	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.def);  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  cannot  find  symbol  n	63	None	replace
518	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.def);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  numUseWithinUseCfgNode,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	63	None	replace
519	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	63	None	replace
520	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  c.def);  [CE]  no  suitable  method  found  for  add(Var,Node,Node)  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,Node,Node)	63	None	replace
521	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.def);  [CE]  cannot  find  symbol  varName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	63	None	replace
522	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.getModule());  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	102	None	replace
523	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.getModule());  [CE]  cannot  find  symbol  n  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  t.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  n	102	None	replace
524	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.getModule());  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  t.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  name	102	None	replace
525	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.getModule());  [CE]  cannot  find  symbol  NAME  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME),  t.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  NAME	102	None	replace
526	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.getModule());  [CE]  cannot  find  symbol  fnNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  fnNode	102	None	replace
527	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	117	13	add
528	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	117	13	add
529	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	117	13	add
530	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	117	13	add
531	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol	117	None	add
532	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol	117	None	add
533	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  RuntimeException  	117	13	add
534	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  RuntimeException  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  RuntimeException  	117	13	add
535	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  [CE]  ';'  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;	  	non-compiled	[CE]  ';'  expected	117	None	add
536	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	117	None	add
537	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  not  a  statement  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  not  a  statement	117	None	add
538	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  RuntimeException  	130	13	add
539	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  RuntimeException  	130	13	add
540	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
541	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
542	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  depends	130	None	add
543	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  depends	130	None	add
544	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol	130	None	add
545	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  ';'  expected	130	None	add
546	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]                RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
547	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]                RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
548	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]                  RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  break;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  break;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
549	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  break;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]                  RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  break;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  break;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
550	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c,    c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	13	None	replace
551	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(n));  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(n));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(n));	  inlinedNewDependencies.add(c,    c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  n	13	None	replace
552	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(name));  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(name));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(name));	  inlinedNewDependencies.add(c,    c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
553	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(id));  [CE]  cannot  find  symbol  id  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(id));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(id));	  inlinedNewDependencies.add(c,    c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  id	13	None	replace
554	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(context));  [CE]  cannot  find  symbol  context  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(context));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(context));	  inlinedNewDependencies.add(c,    c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  context	13	None	replace
555	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(numUseWithinCfgNode));  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(c,    c.getScope().getVar(varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	13	None	replace
556	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	110	None	replace
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	compilable	  [FE]  AssertionFailedError  	110	6	replace
558	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	compilable	  [FE]  AssertionFailedError  	110	6	replace
559	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	110	None	replace
560	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa,  c.def);  [CE]  cannot  find  symbol  def  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  cannot  find  symbol  def	80	None	replace
561	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.def,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,Node,MaybeReachingVariableUse)  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfa,  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowAnalysis,Node,MaybeReachingVariableUse)	80	None	replace
562	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  c.def);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,Node)  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,Node)	80	None	replace
563	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  cfa,  inlineCfgNode,  c.def);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  cfa,  inlineCfgNode,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  cfa,  inlineCfgNode,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
564	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
565	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
566	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
567	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
568	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  preconditions.checkState(c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  preconditions  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty());  preconditions.checkState(c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	91	None	add
569	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
570	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
571	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  RuntimeException  	91	28	add
572	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  RuntimeException  	91	28	add
573	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]              RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
574	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]              RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
575	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  preconditions.checkState(!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  preconditions  [FE]                RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty());  preconditions.checkState(!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty());  preconditions.checkState(!c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  preconditions	91	None	add
576	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]                  RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
577	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]                  RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
578	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  defMetadata);  [CE]  cannot  find  symbol  defMetadata  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    def);    	non-compiled	[CE]  cannot  find  symbol  defMetadata	2	None	replace
579	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  null);  [CE]  no  suitable  method  found  for  add(Var,FlowSensitiveInlineVariables.Candidate,<null>)  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  null);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,FlowSensitiveInlineVariables.Candidate,<null>)	2	None	replace
580	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	108	None	replace
581	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	118	None	replace
582	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
583	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
584	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
585	[BUG]  [BUGGY]  Preconditions.checkState(c.def.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.def.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.def.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	118	None	replace
586	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
587	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
588	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(t.varName));  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(t.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(t.varName));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(n));    	non-compiled	[CE]  cannot  find  symbol  varName	45	None	replace
589	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(vn));  [CE]  cannot  find  symbol  vn  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(vn));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(vn));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(n));    	non-compiled	[CE]  cannot  find  symbol  vn	45	None	replace
590	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfa);  [CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,ControlFlowAnalysis)  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MaybeReachingVariableUse,ControlFlowAnalysis)	26	None	replace
591	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfgNode);  [CE]  cannot  find  symbol  cfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingUses,  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	26	None	replace
592	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfa);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,ControlFlowAnalysis)  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    reachingUses);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,ControlFlowAnalysis)	26	None	replace
593	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  cfa);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	26	None	replace
594	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  reachingUses);  [CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,MaybeReachingVariableUse)  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,MustBeReachingVariableDef,MaybeReachingVariableUse)	76	None	replace
595	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	76	None	replace
596	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  cannot  find  symbol  varName	76	None	replace
597	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingDef);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  cannot  find  symbol  varName	76	None	replace
598	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  def);  [CE]  cannot  find  symbol  def  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  cannot  find  symbol  def	76	None	replace
599	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  callingUses);  [CE]  cannot  find  symbol  callingUses  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  callingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  callingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  cannot  find  symbol  callingUses	76	None	replace
600	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  c.defMetadata);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(n),    c.defMetadata);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	65	None	replace
601	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata);  [CE]  cannot  find  symbol  depends  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.depends),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(n),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  depends	65	None	replace
602	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends);  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  n	85	None	replace
603	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	85	None	replace
604	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends);  [CE]  cannot  find  symbol  name  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  name	85	None	replace
605	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.depends);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	85	None	replace
606	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata.depends);  [CE]  cannot  find  symbol  NAME  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(NAME),  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  NAME	85	None	replace
607	[BUG]  [BUGGY]  Preconditions.checkState(c.depends  ==  null);  [CE]  cannot  find  symbol  depends  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends  ==  null);	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	non-compiled	[CE]  cannot  find  symbol  depends	94	None	replace
608	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends  ==  null);  [CE]  cannot  find  symbol  depends  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends  ==  null);	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	non-compiled	[CE]  cannot  find  symbol  depends	94	None	replace
609	[BUG]  [BUGGY]  Preconditions.checkState(c.depends!=  null);  [CE]  cannot  find  symbol  depends  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends!=  null);	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	non-compiled	[CE]  cannot  find  symbol  depends	94	None	replace
610	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends!=  null);  [CE]  cannot  find  symbol  depends  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||  c.defMetadata.depends!=  null);	  Preconditions.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  depends	88	None	replace
611	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	126	None	replace
612	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	126	None	replace
613	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	126	None	replace
614	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.varNode,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	126	None	replace
615	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c.varName);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  c.varName);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	126	None	replace
616	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  def);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	126	None	replace
617	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	126	None	replace
618	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	119	13	add
619	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	119	13	add
620	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	119	13	add
621	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	119	13	add
622	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  cannot  find  symbol	119	None	add
623	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  cannot  find  symbol	119	None	add
624	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  [CE]  ';'  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;	  	non-compiled	[CE]  ';'  expected	119	None	add
625	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  not  a  statement  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  not  a  statement	119	None	add
626	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	119	None	add
627	[BUG]  [BUGGY]  Pentru(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Pentru(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Pentru(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.inlineVariable())    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ')'  expected	54	None	replace
628	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.inlineVariable())    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ')'  expected	54	None	replace
629	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.inlineVariable();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.inlineVariable();	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.inlineVariable())    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
630	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.inlineVariable())    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ')'  expected	54	None	replace
631	[BUG]  [BUGGY]  Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.inlineVariable())    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ')'  expected	54	None	replace
632	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.def);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.def);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
633	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.def);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.def);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  varName	61	None	replace
634	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.def);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.def);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  varName	61	None	replace
635	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	131	None	replace
636	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
637	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
638	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  depends  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  depends	131	None	replace
639	[BUG]  [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
640	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]              RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	131	None	replace
641	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]                RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  ||!c.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
642	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  t.defMetadata);  [CE]  cannot  find  symbol  defNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  t.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defNode	66	None	replace
643	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.defNode),  c.defMetadata);  [CE]  cannot  find  symbol  defNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(t.defNode),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(t.defNode),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defNode	66	None	replace
644	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.depends);  [CE]  cannot  find  symbol  defNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defNode	66	None	replace
645	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c,  c.defNode),  c.defMetadata);  [CE]  cannot  find  symbol  defNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c,  c.defNode),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c,  c.defNode),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defNode	66	None	replace
646	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c,  reachingUses);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  name	79	None	replace
647	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  def);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  def);	  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	99	None	replace
648	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata),  numUseWithinUseCfgNode);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata),  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata),  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),    c.defMetadata);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	99	None	replace
649	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(inCfgNode));  [CE]  cannot  find  symbol  inCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(inCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(inCfgNode));	  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode));    	non-compiled	[CE]  cannot  find  symbol  inCfgNode	74	None	replace
650	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t.getModule());  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	102	None	replace
651	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.references.getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.references.getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.references.getVar(varName));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(name));    	non-compiled	[CE]  cannot  find  symbol  varName	47	None	replace
652	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	109	13	add
653	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	109	13	add
654	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol	109	None	add
655	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  c.defPREDICATE);  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  c.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  c.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	72	None	replace
656	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	17	None	replace
657	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	17	None	replace
658	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	118	None	replace
659	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	118	None	replace
660	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	118	None	replace
661	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	118	None	replace
662	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable()  ||!c.inlineVariable())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable()  ||!c.inlineVariable())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable()  ||!c.inlineVariable())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	118	None	replace
663	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	125	None	replace
664	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c);  [CE]  cannot  find  symbol  cfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	125	None	replace
665	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol	130	None	add
666	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
667	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
668	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	130	None	add
669	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
670	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	130	13	add
671	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.inline(new  AssertionFailedError(t.getSourceName()));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.inline(new  AssertionFailedError(t.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.inline(new  AssertionFailedError(t.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
672	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError(t.getSourceName()));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError(t.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError(t.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
673	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.getScope().getVar(numUseWithinCfgNode));  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.getScope().getVar(numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.getScope().getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	37	None	replace
674	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName));	  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode));    	non-compiled	[CE]  cannot  find  symbol  varName	37	None	replace
675	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  def.varName);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  def.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  def.varName);	  inlinedNewDependencies.add(c.getScope(),    c.varName);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
676	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingDef);  [CE]  no  suitable  method  found  for  add(Var,FlowSensitiveInlineVariables.Candidate,MustBeReachingVariableDef)  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,FlowSensitiveInlineVariables.Candidate,MustBeReachingVariableDef)	2	None	replace
677	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    def);    	non-compiled	[CE]  cannot  find  symbol  varName	2	None	replace
678	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  def);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  def);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
679	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(node));  [CE]  cannot  find  symbol  node  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(node));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(node));	  inlinedNewDependencies.add(c.getScope().getVar(n));    	non-compiled	[CE]  cannot  find  symbol  node	34	None	replace
680	[BUG]  [BUGGY]  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
681	[BUG]  [BUGGY]  AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ';'  expected	57	None	replace
682	[BUG]  [BUGGY]  DesertionFailedError  t  =  c.defMetadata.depends;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  DesertionFailedError  t  =  c.defMetadata.depends;  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	DesertionFailedError  t  =  c.defMetadata.depends;	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
683	[BUG]  [BUGGY]  AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.getSourceName());	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ';'  expected	57	None	replace
684	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.varName.getScope(),  c.getVar(varName));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.varName.getScope(),  c.getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.varName.getScope(),  c.getVar(varName));	  inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
685	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.vars);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.vars);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	124	None	replace
686	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.vars);  [CE]  cannot  find  symbol  defName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.vars);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  cannot  find  symbol  defName	124	None	replace
687	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata.vars);  [CE]  cannot  find  symbol  fnNode  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata.vars);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  cannot  find  symbol  fnNode	124	None	replace
688	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfgNode.getScope().getVar(varName),  c.varName);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfgNode.getScope().getVar(varName),  c.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfgNode.getScope().getVar(varName),  c.varName);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol  varName	128	None	replace
689	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope(),  c.varName,  t);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope(),  c.varName,  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope(),  c.varName,  t);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
690	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  def);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  def);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol  varName	128	None	replace
691	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(mName),  cfgNode);  [CE]  cannot  find  symbol  mName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(mName),  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(mName),  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfgNode);    	non-compiled	[CE]  cannot  find  symbol  mName	107	None	replace
692	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.checkState(c.defMetadata.depends  ==  null);  [CE]  cannot  find  symbol  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    NodeUtil.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  cannot  find  symbol	93	None	add
693	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.depends.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [CE]  not  a  statement  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.depends.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.depends.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  not  a  statement	93	None	add
694	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.mayHaveSideEffects(c.defMetadata.depends);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Set<Var>)  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.mayHaveSideEffects(c.defMetadata.depends);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    NodeUtil.mayHaveSideEffects(c.defMetadata.depends);  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Set<Var>)	93	None	add
695	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.checkDependency(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [CE]  cannot  find  symbol  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.checkDependency(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    NodeUtil.checkDependency(c.defMetadata.depends  ==  null);  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  cannot  find  symbol	93	None	add
696	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.depends.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  nu  [CE]  not  a  statement  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.depends.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  nu  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.depends.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  nu	  	non-compiled	[CE]  not  a  statement	93	None	add
697	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [CE]  not  a  statement  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    NodeUtil.mayHaveSideEffects(c.defMetadata.depends)&&!c.defMetadata.isEmpty())  {  Preconditions.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  not  a  statement	93	None	add
698	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  def);  [CE]  cannot  find  symbol  defNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defNode	66	None	replace
699	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata.depends);  [CE]  cannot  find  symbol  defNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defNode	66	None	replace
700	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(cfgNode),  c.defMetadata);  [CE]  cannot  find  symbol  cfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(cfgNode),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(cfgNode),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	66	None	replace
701	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(def),  t.def);  [CE]  cannot  find  symbol  def  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(def),  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(def),  t.def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  def	62	None	replace
702	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.def);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.def);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	62	None	replace
703	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfgNode);  [CE]  cannot  find  symbol  cfgNode  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	76	None	replace
704	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  cannot  find  symbol  varName	76	None	replace
705	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  def);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  cannot  find  symbol  varName	76	None	replace
706	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  cfa);  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfa);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	84	None	replace
707	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata.depends);  [CE]  cannot  find  symbol  defName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  defName	42	None	replace
708	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata.depends);  [CE]  cannot  find  symbol  defName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  defName	42	None	replace
709	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.varName),  c.depends);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.varName),  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.varName),  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	42	None	replace
710	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	6	None	replace
711	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingUses,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	6	None	replace
712	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends!=  null);	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
713	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends!=  null);  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends!=  null);	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
714	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.isEmpty());  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
715	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends  ==  null);	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
716	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends  ==  null);  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends  ==  null);	  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	91	13	add
717	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.length  ==  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  length  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.length  ==  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.length  ==  numUseWithinUseCfgNode);	  	non-compiled	[CE]  cannot  find  symbol  length	91	None	add
718	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.def,  reachingUses);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	64	None	replace
719	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.def,  reachingUses);  [CE]  cannot  find  symbol  cfgNode  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	64	None	replace
720	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.def,  reachingUses);  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  name	64	None	replace
721	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  c.def,  reachingUses);  [CE]  cannot  find  symbol  def  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(def),  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  def	64	None	replace
722	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.def,  reachingUses);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.def),  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	64	None	replace
723	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  c.depends);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	11	None	replace
724	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	11	None	replace
725	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  t.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	11	None	replace
726	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode),  t.getModule());  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode),  t.getModule());	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t.getModule());    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	135	None	replace
727	[BUG]  [BUGGY]  c.defMetadata.inlineCfgNode.clear();  [CE]  cannot  find  symbol  inlineCfgNode  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inlineCfgNode.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inlineCfgNode.clear();	  c.defMetadata.depends.clear();    	non-compiled	[CE]  cannot  find  symbol  inlineCfgNode	96	None	replace
728	[BUG]  [BUGGY]  c.defMetadata.depends.add(t);  [CE]  no  suitable  method  found  for  add(NodeTraversal)  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.add(t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.add(t);	  c.defMetadata.depends.clear();    	non-compiled	[CE]  no  suitable  method  found  for  add(NodeTraversal)	96	None	replace
729	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	117	None	add
730	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;	  	non-compiled	[CE]  ';'  expected	117	None	add
731	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode,  c.varName));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode,  c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode,  c.varName));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	123	None	replace
732	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.depends));  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.depends));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  cannot  find  symbol  varName	123	None	replace
733	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  c.defMetadata.getScope());  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  c.defMetadata.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  c.defMetadata.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	25	None	replace
734	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	86	None	replace
735	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  defName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  defName	86	None	replace
736	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(n),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  n	86	None	replace
737	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(name),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  name	86	None	replace
738	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	86	None	replace
739	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa);  [CE]  cannot  find  symbol  def  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    def);    	non-compiled	[CE]  cannot  find  symbol  def	129	None	replace
740	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(def),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  def  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(def),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(def),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  def	106	None	replace
741	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	106	None	replace
742	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  defName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  defName	106	None	replace
743	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defName),  def);  [CE]  cannot  find  symbol  defName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defName),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defName),  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.defName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defName	67	None	replace
744	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defName));  [CE]  cannot  find  symbol  defName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defName));	  inlinedNewDependencies.add(t.getScope().getVar(c.defName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defName	67	None	replace
745	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  t);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  t);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
746	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
747	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
748	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	95	None	add
749	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  c.defMetadata.depends.clear();	  	non-compiled	[CE]  ';'  expected	95	None	add
750	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  this.defMetadata.depends.clear();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  this.defMetadata.depends.clear();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    AssertionFailedError  <  Node>  c  =  c.inlineVariable();  if(!c.defMetadata.depends.isEmpty())  {  this.defMetadata.depends.clear();  }	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
751	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	115	None	add
752	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  depends	110	None	replace
753	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
754	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	compilable	timeout	110	1	replace
755	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty());  timeout  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	compilable	timeout	110	1	replace
756	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode));  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(c.defMetadata.getVar(n));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	136	None	replace
757	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(node));  [CE]  cannot  find  symbol  node  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(node));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(node));	  inlinedNewDependencies.add(c.defMetadata.getVar(n));    	non-compiled	[CE]  cannot  find  symbol  node	136	None	replace
758	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	116	None	replace
759	[BUG]  [BUGGY]  timeout  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	compilable	timeout	116	1	replace
760	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  timeout  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	compilable	timeout	116	1	replace
761	[BUG]  [BUGGY]  timeout  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends  ==  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	compilable	timeout	116	1	replace
762	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  timeout  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends  ==  null);  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	compilable	timeout	116	1	replace
763	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	116	None	replace
764	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	116	None	replace
765	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	116	None	replace
766	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	116	None	replace
767	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.getVar(numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	81	None	replace
768	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getVar(varName));  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getVar(varName));	  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  varName	81	None	replace
769	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	122	None	replace
770	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	122	None	replace
771	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa.depends,  c.defMetadata.depends);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa.depends,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa.depends,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	8	None	replace
772	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	8	None	replace
773	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	8	None	replace
774	[BUG]  [BUGGY]  AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.inlineVariable())    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ';'  expected	54	None	replace
775	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata);  [CE]  cannot  find  symbol  defName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defName	121	None	replace
776	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata);  [CE]  cannot  find  symbol  fnNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  fnNode	121	None	replace
777	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	114	None	replace
778	[BUG]  [BUGGY]  timeout  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	compilable	timeout	114	1	replace
779	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  return;  }  timeout  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null);  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	compilable	timeout	114	1	replace
780	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.inlineVariable())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.inlineVariable())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.inlineVariable())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	114	None	replace
781	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	114	None	replace
782	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	114	None	replace
783	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends  ==  null  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	92	13	replace
784	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  ||  c.defMetadata.depends.isEmpty());  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends  ==  null  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a  	92	13	replace
785	[BUG]  [BUGGY]  timeout  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	timeout	92	1	replace
786	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.isEmpty());  timeout  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	timeout	92	1	replace
787	[BUG]  [BUGGY]  timeout  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends!=  null  &&!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	timeout	92	1	replace
788	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&!c.defMetadata.depends.isEmpty());  timeout  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null  &&!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	compilable	timeout	92	1	replace
789	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata));  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata));	  inlinedNewDependencies.add(t.getScope().getVar(n),    c.defMetadata);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	65	None	replace
790	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defMetadata);  [CE]  cannot  find  symbol  cfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(n),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	65	None	replace
791	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.def),  def);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.def),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.def),  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	73	None	replace
792	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.def);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def);    	non-compiled	[CE]  cannot  find  symbol  name	73	None	replace
793	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  c.def);  [CE]  cannot  find  symbol  def  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(def),  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def);    	non-compiled	[CE]  cannot  find  symbol  def	73	None	replace
794	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t);  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinCfgNode),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	101	None	replace
795	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(inputName),  t);  [CE]  cannot  find  symbol  inputName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(inputName),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(inputName),  t);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  inputName	101	None	replace
796	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;	  	non-compiled	[CE]  ';'  expected	119	None	add
797	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	119	None	add
798	[BUG]  [BUGGY]  timeout  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());	  	compilable	timeout	119	1	add
799	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  timeout  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());	  	compilable	timeout	119	1	add
800	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  varName,  def);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c),  varName,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c),  varName,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    def);    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	104	None	replace
801	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  c,  def);  [CE]  cannot  find  symbol  def  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  c,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(def),  c,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    def);    	non-compiled	[CE]  cannot  find  symbol  def	104	None	replace
802	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  reachingUses));  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  reachingUses));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  reachingUses));	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	29	None	replace
803	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  reachingUses);  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends),  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	29	None	replace
804	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  reachingDef));  [CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  reachingDef));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  reachingDef));	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  method  getVar  in  class  Scope  cannot  be  applied  to  given  types;	29	None	replace
805	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  NodeUtil.mayHaveSideEffects(c))  {  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  NodeUtil.mayHaveSideEffects(c))  {  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    NodeUtil.mayHaveSideEffects(c))  {  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  ';'  expected	111	None	add
806	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  NodeUtil.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  NodeUtil.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    NodeUtil.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol	111	None	add
807	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  NodeUtil.mayHaveSideEffects(c))  {  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  }  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  NodeUtil.mayHaveSideEffects(c))  {  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    NodeUtil.mayHaveSideEffects(c))  {  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  }	  	non-compiled	[CE]  ';'  expected	111	None	add
808	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
809	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.depends.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
810	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.getSourceName()  ]);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
811	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(def,  t.getModule()));  [CE]  cannot  find  symbol  def  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(def,  t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(def,  t.getModule()));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    t.getModule()));    	non-compiled	[CE]  cannot  find  symbol  def	103	None	replace
812	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(inputName,  t.getModule()));  [CE]  cannot  find  symbol  inputName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(inputName,  t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(inputName,  t.getModule()));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    t.getModule()));    	non-compiled	[CE]  cannot  find  symbol  inputName	103	None	replace
813	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	120	None	replace
814	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  'void'  type  not  allowed  here  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	120	None	replace
815	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineFunction());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  cannot  find  symbol  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineFunction());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineFunction());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
816	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingDef);  [CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,MustBeReachingVariableDef)  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,ControlFlowGraph<Node>,MustBeReachingVariableDef)	22	None	replace
817	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfg);  [CE]  cannot  find  symbol  def  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  def	22	None	replace
818	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfgNode);  [CE]  cannot  find  symbol  def  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  def	22	None	replace
819	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
820	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  cannot  find  symbol  varName	4	None	replace
821	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    cfg);    	non-compiled	[CE]  cannot  find  symbol  varName	23	None	replace
822	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  cfg);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  n,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    cfg);    	non-compiled	[CE]  cannot  find  symbol  varName	23	None	replace
823	[BUG]  [BUGGY]  Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  }	          if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable(),    t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	59	None	replace
824	[BUG]  [BUGGY]  Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Pentru(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable(),  t.inlineVariable());	          if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable(),    t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	59	None	replace
825	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defNode);  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defNode);    	non-compiled	[CE]  cannot  find  symbol  name	39	None	replace
826	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defNode);  [CE]  cannot  find  symbol  defName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defNode);    	non-compiled	[CE]  cannot  find  symbol  defName	39	None	replace
827	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  NodeUtil.checkState(c.defMetadata.depends!=  null);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  NodeUtil.checkState(c.defMetadata.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    NodeUtil.checkState(c.defMetadata.depends!=  null);	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
828	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  AssertionFailedError  <  Node>  c  =  cfa.inlineVariable();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  AssertionFailedError  <  Node>  c  =  cfa.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    AssertionFailedError  <  Node>  c  =  cfa.inlineVariable();	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
829	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata,  reachingUses);  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  name	20	None	replace
830	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata,  reachingUses);  [CE]  cannot  find  symbol  defName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  defName	20	None	replace
831	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingUses,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	78	None	replace
832	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	78	None	replace
833	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	78	None	replace
834	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  reachingUses  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol  reachingUses	113	None	add
835	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.reachingUses.isEmpty())  {  return;  }	  	non-compiled	[CE]  cannot  find  symbol	113	None	add
836	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.reportUnsupportedOperation());  [CE]  cannot  find  symbol  varName  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.reportUnsupportedOperation());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.reportUnsupportedOperation());	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	69	None	replace
837	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(varName),  c.depends);  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(varName),  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(varName),  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	69	None	replace
838	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.reportUndetectableSource);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.reportUndetectableSource);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.reportUndetectableSource);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends);    	non-compiled	[CE]  cannot  find  symbol  varName	69	None	replace
839	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  reachingUses);  [CE]  no  suitable  method  found  for  add(FlowSensitiveInlineVariables.Candidate,Var,MaybeReachingVariableUse)  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  reachingUses);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  no  suitable  method  found  for  add(FlowSensitiveInlineVariables.Candidate,Var,MaybeReachingVariableUse)	71	None	replace
840	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  reachingUses);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(c.varName),  reachingUses);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
841	[BUG]  [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(c.varName),  reachingUses);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(c.varName),  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t,  c.getScope().getVar(c.varName),  reachingUses);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
842	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.defMetadata.depends.getVar(c.varName));  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.defMetadata.depends.getVar(c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.defMetadata.depends.getVar(c.varName));	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
843	[BUG]  [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(c.varName));  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(c.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t,  c.getScope().getVar(c.varName));	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
844	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	33	None	replace
845	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.getScope().getVar(numUseWithinUseCfgNode));  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.getScope().getVar(numUseWithinUseCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.getScope().getVar(numUseWithinUseCfgNode));	  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	33	None	replace
846	[BUG]  [BUGGY]  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.isEmpty();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	c.defMetadata.depends.isEmpty();	  c.inlineVariable();    	compilable	timeout	53	1	replace
847	[BUG]  [BUGGY]  c.defMetadata.depends.isEmpty();  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.isEmpty();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.isEmpty();	  c.inlineVariable();    	compilable	timeout	53	1	replace
848	[BUG]  [BUGGY]  c.defMetadata.depends.setEmpty(true);  [CE]  cannot  find  symbol  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.setEmpty(true);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.setEmpty(true);	  c.inlineVariable();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
849	[BUG]  [BUGGY]  c.defMetadata.depends.addEmpty();  [CE]  cannot  find  symbol  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.addEmpty();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.addEmpty();	  c.inlineVariable();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
850	[BUG]  [BUGGY]  c.inlineFunction(t,  _func);  [CE]  cannot  find  symbol  _func  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineFunction(t,  _func);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineFunction(t,  _func);	  c.inlineVariable();    	non-compiled	[CE]  cannot  find  symbol  _func	53	None	replace
851	[BUG]  [BUGGY]  c.defMetadata.depends.remove(depends);  [CE]  cannot  find  symbol  depends  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.remove(depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.remove(depends);	  c.inlineVariable();    	non-compiled	[CE]  cannot  find  symbol  depends	53	None	replace
852	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfa);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfa);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	26	None	replace
853	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfa,  reachingUses);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfa,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfa,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	26	None	replace
854	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  reachingUses);  [CE]  cannot  find  symbol  cfgNode  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfgNode,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	26	None	replace
855	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  ==  0);  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  ==  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  ==  0);	  Preconditions.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  length	88	None	replace
856	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  >  0);  [CE]  cannot  find  symbol  length  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  >  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  >  0);	  Preconditions.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  length	88	None	replace
857	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.desefMetadata.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.desefMetadata.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.desefMetadata.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
858	[BUG]  [BUGGY]  AssertionFailedError  t  =  def.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  def.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  def.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
859	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
860	[BUG]  [BUGGY]  AssertionFailedError  t  =  cfa.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  cfa.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  cfa.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
861	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	108	None	replace
862	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode),  t);  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinCfgNode),  t);	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	133	None	replace
863	[BUG]  [BUGGY]  AssertionFailedError  c  =  candidates.get(0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  c  =  candidates.get(0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  c  =  candidates.get(0);	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
864	[BUG]  [BUGGY]  AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
865	[BUG]  [BUGGY]  Pentru(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Pentru(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Pentru(AssertionFailedError  c  =  candidates.get(0);  c.inlineVariable();  c.inlineVariable();	  if(!c.defMetadata.depends.isEmpty())    {    for(AssertionFailedError    c    =    candidates.get(0);    c.inlineVariable();    c.inlineVariable();    }    	non-compiled	[CE]  ')'  expected	56	None	replace
866	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  0);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  0);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
867	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  1);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  1);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  1);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
868	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  3);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  3);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  3);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	3	None	replace
869	[BUG]  [BUGGY]  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends  ==  null  ||!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	compilable	timeout	94	1	replace
870	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  ||!c.defMetadata.depends.isEmpty());  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends  ==  null  ||!c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	compilable	timeout	94	1	replace
871	[BUG]  [BUGGY]  timeout  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  &&  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends  ==  null  &&  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	compilable	timeout	94	1	replace
872	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  &&  c.defMetadata.depends.isEmpty());  timeout  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  &&  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends  ==  null  &&  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	compilable	timeout	94	1	replace
873	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineReference();  [CE]  cannot  find  symbol  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineReference();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineReference();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
874	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getScope().getVar(NAME));  [CE]  cannot  find  symbol  NAME  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getScope().getVar(NAME));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getScope().getVar(NAME));	  inlinedNewDependencies.add(c.getScope().getVar(NAME));    	non-compiled	[CE]  cannot  find  symbol  NAME	38	None	replace
875	[BUG]  [BUGGY]  AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  ';'  expected	55	None	replace
876	[BUG]  [BUGGY]  AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  ';'  expected	55	None	replace
877	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  cfg,  reachingUses);  [CE]  cannot  find  symbol  name  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  cfg,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  cfg,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  name	83	None	replace
878	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName,  reachingUses);  [CE]  cannot  find  symbol  cfgNode  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	83	None	replace
879	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  t.defMetadata.depends);  [CE]  cannot  find  symbol  defName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  t.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(defName),  t.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  defName	7	None	replace
880	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.defMetadata.depends);  [CE]  cannot  find  symbol  fnNode  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  fnNode	7	None	replace
881	[BUG]  [BUGGY]  Context.checkState(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
882	[BUG]  [BUGGY]  Context.checkState(!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  Context  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.defMetadata.depends.isEmpty());	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  cannot  find  symbol  Context	51	None	replace
883	[BUG]  [BUGGY]  Context.checkState(!c.depends.isEmpty());  [CE]  cannot  find  symbol  depends  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.depends.isEmpty());	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  cannot  find  symbol  depends	51	None	replace
884	[BUG]  [BUGGY]  Context.checkState(!c.defMetadata.isEmpty());  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.defMetadata.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.defMetadata.isEmpty());	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
885	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfg,  def);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfg,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	127	None	replace
886	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName,  def);  [CE]  cannot  find  symbol  cfgNode  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cfgNode),  varName,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  cfgNode	127	None	replace
887	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  cfg,  def);  [CE]  cannot  find  symbol  def  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  cfg,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(def),  cfg,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  cannot  find  symbol  def	127	None	replace
888	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(def));  [CE]  cannot  find  symbol  def  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(def));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(def));	  inlinedNewDependencies.add(c.getScope().getVar(id));    	non-compiled	[CE]  cannot  find  symbol  def	36	None	replace
889	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.getSourceName()));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  t.getSourceName()));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
890	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.defMetadata.depends));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.defMetadata.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.defMetadata.depends));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
891	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  numUseWithinCfgNode));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  numUseWithinCfgNode));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
892	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.getSourceName());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.getSourceName());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  t.getSourceName());	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
893	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.varName);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(numUseWithinUseCfgNode),  t.varName);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	15	None	replace
894	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.varName);  [CE]  cannot  find  symbol  fnNode  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  t.varName);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  fnNode	15	None	replace
895	[BUG]  [BUGGY]  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	add	Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	compilable	timeout	112	1	replace
896	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&  c.defMetadata.depends.isEmpty());  timeout  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()  &&  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	compilable	timeout	112	1	replace
897	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
898	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||  c.defMetadata.depends.length  >  0);  [CE]  cannot  find  symbol  length  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||  c.defMetadata.depends.length  >  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||  c.defMetadata.depends.length  >  0);	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  length	112	None	replace
899	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||  c.defMetadata.depends.length  ==  0);  [CE]  cannot  find  symbol  length  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||  c.defMetadata.depends.length  ==  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||  c.defMetadata.depends.length  ==  0);	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  length	112	None	replace
900	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	10	None	replace
901	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(name),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  name	10	None	replace
902	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  n  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(n),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
903	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata.depends,  reachingUses);  [CE]  cannot  find  symbol  defName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(defName),  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  defName	10	None	replace
904	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defMetadata));	  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
905	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  def);  [CE]  cannot  find  symbol  defPREDICATE  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defPREDICATE	100	None	replace
906	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&!c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&!c.defMetadata.depends.isEmpty());	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  AssertionFailedError	58	None	replace
907	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.isEmpty());  [CE]  cannot  find  symbol  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.isEmpty());	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  AssertionFailedError	58	None	replace
908	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  ==  0);  [CE]  cannot  find  symbol  length  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  ==  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  ==  0);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  length	58	None	replace
909	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  >  0);  [CE]  cannot  find  symbol  length  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  >  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends!=  null  &&  c.defMetadata.depends.length  >  0);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  cannot  find  symbol  length	58	None	replace
910	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  n);  [CE]  cannot  find  symbol  numUseWithinCfgNode  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinCfgNode),  n);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    n);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinCfgNode	44	None	replace
911	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  n);  [CE]  cannot  find  symbol  defName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  n);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    n);    	non-compiled	[CE]  cannot  find  symbol  defName	44	None	replace
912	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.dependName),  n);  [CE]  cannot  find  symbol  dependName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.dependName),  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.dependName),  n);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    n);    	non-compiled	[CE]  cannot  find  symbol  dependName	44	None	replace
913	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends);  [CE]  cannot  find  symbol  defName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(defName),  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  defName	85	None	replace
914	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata.depends);  [CE]  cannot  find  symbol  fnNode  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode),  c.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  cannot  find  symbol  fnNode	85	None	replace
915	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError(t.getModule()));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError(t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.references.toArray(new  AssertionFailedError(t.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
916	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.inline(new  AssertionFailedError(t.getModule()));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.inline(new  AssertionFailedError(t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.inline(new  AssertionFailedError(t.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
917	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError(t.getModule()));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError(t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.getTarget().toArray(new  AssertionFailedError(t.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
918	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	9	None	replace
919	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa.depends,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa.depends,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa.depends,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	9	None	replace
920	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingDef);  [CE]  no  suitable  method  found  for  add(Var,Set<Var>,MustBeReachingVariableDef)  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.depends,  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  no  suitable  method  found  for  add(Var,Set<Var>,MustBeReachingVariableDef)	12	None	replace
921	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingDef);  [CE]  cannot  find  symbol  varName  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  varName	12	None	replace
922	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  1);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  1);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  1);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    numUseWithinUseCfgNode);    	non-compiled	[CE]  cannot  find  symbol  varName	24	None	replace
923	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.getScope());  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
924	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.getScope());  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol  varName	5	None	replace
925	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.getScope());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
926	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	131	None	replace
927	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	131	None	replace
928	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	131	None	replace
929	[BUG]  [BUGGY]  Preconditions.checkState(!c.inlineDependencies.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  inlineDependencies  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.inlineDependencies.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.inlineDependencies.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  inlineDependencies	131	None	replace
930	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
931	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  'void'  type  not  allowed  here  [FE]              RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	131	None	replace
932	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  numUseWithinUseCfgNode  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(numUseWithinUseCfgNode),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  numUseWithinUseCfgNode	105	None	replace
933	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  def  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(def),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(def),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  def	105	None	replace
934	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  defName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  defName	105	None	replace
935	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.name),  c.defMetadata.depends,  def);  [CE]  cannot  find  symbol  name  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.name),  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.name),  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  cannot  find  symbol  name	105	None	replace
936	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfgNode,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	126	None	replace
937	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends,  c.defMetadata));  [CE]  cannot  find  symbol  depends  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends,  c.defMetadata));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.depends,  c.defMetadata));	  inlinedNewDependencies.add(t.getScope().getVar(c.depends));    	non-compiled	[CE]  cannot  find  symbol  depends	32	None	replace
938	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  def);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	19	None	replace
939	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	19	None	replace
940	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfa,  c.def);  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfa,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  cfa,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  cannot  find  symbol  n	80	None	replace
941	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  reachingDef);  [CE]  cannot  find  symbol  varName  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	80	None	replace
942	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa,  def);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	80	None	replace
943	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  c.def);  [CE]  cannot  find  symbol  varName  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	63	None	replace
944	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  def);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  cannot  find  symbol  varName	63	None	replace
945	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.def,  reachingUses);  [CE]  cannot  find  symbol  c  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  c	60	None	replace
946	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  reachingUses,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  c  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  c	60	None	replace
947	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  reachingUses,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.def,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.def,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	60	None	replace
948	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [CE]  package  c.defMetadata  does  not  exist  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }	  	non-compiled	[CE]  package  c.defMetadata  does  not  exist	50	None	add
949	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.independs.isEmpty())  {  c.inlineVariable();  }  [CE]  package  c.defMetadata  does  not  exist  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.independs.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.independs.isEmpty())  {  c.inlineVariable();  }	  	non-compiled	[CE]  package  c.defMetadata  does  not  exist	50	None	add
950	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.repeats.isEmpty())  {  c.inlineVariable();  }  [CE]  package  c.defMetadata  does  not  exist  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.repeats.isEmpty())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.repeats.isEmpty())  {  c.inlineVariable();  }	  	non-compiled	[CE]  package  c.defMetadata  does  not  exist	50	None	add
951	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.requires())  {  c.inlineVariable();  }  [CE]  package  c.defMetadata  does  not  exist  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.requires())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.requires())  {  c.inlineVariable();  }	  	non-compiled	[CE]  package  c.defMetadata  does  not  exist	50	None	add
952	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  t.defMetadata);  [CE]  cannot  find  symbol  defName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(defName),  t.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(defName),  t.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  defName	18	None	replace
953	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode);  [CE]  cannot  find  symbol  varName  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	121	None	replace
954	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  c.defMetadata);  [CE]  cannot  find  symbol  varName  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  varName	121	None	replace
955	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  package  c.defMetadata  does  not  exist  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	non-compiled	[CE]  package  c.defMetadata  does  not  exist	94	None	replace
956	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  ||  c.defMetadata.depends.length  ==  0);  [CE]  package  c  does  not  exist  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null  ||  c.defMetadata.depends.length  ==  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends  ==  null  ||  c.defMetadata.depends.length  ==  0);	  Preconditions.checkState(c.defMetadata.depends    ==    null);    	non-compiled	[CE]  package  c  does  not  exist	94	None	replace
957	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  def);  [CE]  cannot  find  symbol  varName  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(varName),  def);	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(varName),    t);    	non-compiled	[CE]  cannot  find  symbol  varName	134	None	replace
958	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingUses,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  c  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  c	27	None	replace
959	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses,  numUseWithinUseCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfg,    reachingUses);    	non-compiled	[CE]  cannot  find  symbol  varName	27	None	replace
960	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.depends.toArray(new  AssertionFailedError(c.getSourceName()));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.depends.toArray(new  AssertionFailedError(c.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.depends.toArray(new  AssertionFailedError(c.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
961	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(t.getSourceName()));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(t.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError(t.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
962	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.toArray(new  AssertionFailedError(c.defMetadata.getSourceName()));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.toArray(new  AssertionFailedError(c.defMetadata.getSourceName()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.toArray(new  AssertionFailedError(c.defMetadata.getSourceName()));	          AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getSourceName()));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
963	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  package  c  does  not  exist  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  package  c  does  not  exist	120	None	replace
964	[BUG]  [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable()  ||!c.inlineVariable())  {  continue;  }  [CE]  cannot  find  symbol  c  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable()  ||!c.inlineVariable())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable()  ||!c.inlineVariable())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  c	120	None	replace
965	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode));  [CE]  cannot  find  symbol  fnNode  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(fnNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(fnNode));	  inlinedNewDependencies.add(c.getScope().getVar(n));    	non-compiled	[CE]  cannot  find  symbol  fnNode	34	None	replace
966	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defName),  c.defMetadata);  [CE]  cannot  find  symbol  c  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defName),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  c	67	None	replace
967	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata,  reachingUses);  [CE]  cannot  find  symbol  c  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.defName),    c.defMetadata);    	non-compiled	[CE]  cannot  find  symbol  c	67	None	replace
968	[BUG]  [BUGGY]  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	for(AssertionFailedError  t  :  c.defMetadata.depends)  {  candidates.add(t.inlineVariable());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
969	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.inlineVariable());  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.inlineVariable());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.inlineVariable());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.inlineVariable());    }    	non-compiled	[CE]  ')'  expected	55	None	replace
970	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.node);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.node);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.node);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    n);    	non-compiled	[CE]  cannot  find  symbol  varName	44	None	replace
971	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinCfgNode);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    n);    	non-compiled	[CE]  cannot  find  symbol  varName	44	None	replace
972	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.depends.toArray(new  AssertionFailedError(c.getModule()));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.depends.toArray(new  AssertionFailedError(c.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.depends.toArray(new  AssertionFailedError(c.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
973	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.toArray(new  AssertionFailedError(c.defMetadata.getModule()));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.toArray(new  AssertionFailedError(c.defMetadata.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.toArray(new  AssertionFailedError(c.defMetadata.getModule()));	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
974	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.node);  [CE]  cannot  find  symbol  varName  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.node);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.node);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  varName	15	None	replace
975	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.paint);  [CE]  cannot  find  symbol  varName  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.paint);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.paint);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  varName	15	None	replace
976	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.path);  [CE]  cannot  find  symbol  varName  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.path);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.path);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.varName);    	non-compiled	[CE]  cannot  find  symbol  varName	15	None	replace
977	[BUG]  [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.getSourceName());  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	For(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ')'  expected	57	None	replace
978	[BUG]  [BUGGY]  for(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.getSourceName());  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  for(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	for(AssertionFailedError  t  :  c.defMetadata)  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.defMetadata.depends)    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ';'  expected	57	None	replace
979	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.ref);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.ref);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.ref);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  ';'  expected	1	None	replace
980	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.asScope);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.asScope);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.asScope);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  ';'  expected	1	None	replace
981	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.saveCfgNode);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.saveCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.saveCfgNode);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  ';'  expected	1	None	replace
982	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingDef,  c.defMetadata.depends,  reachingUses);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingDef,  c.defMetadata.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingDef,  c.defMetadata.depends,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  ';'  expected	86	None	replace
983	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  reachingUses);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  ';'  expected	86	None	replace
984	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def.depends,  reachingUses);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def.depends,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  def.depends,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  ';'  expected	86	None	replace
985	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.name));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.name));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.name));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  ';'  expected	123	None	replace
986	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.node));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.node));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.node));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  ';'  expected	123	None	replace
987	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.sourceName));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.sourceName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.sourceName));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  ';'  expected	123	None	replace
988	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.defMetadata));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.defMetadata));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.defMetadata));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  ';'  expected	123	None	replace
989	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.scope));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  c.scope));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  c.scope));	  inlinedNewDependencies.add(c.getScope().getVar(varName,    c.varName));    	non-compiled	[CE]  ';'  expected	123	None	replace
990	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  c.defMetadata);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defNode),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  ';'  expected	66	None	replace
991	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata,  reachingUses);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defNode),  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  ';'  expected	66	None	replace
992	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defNode));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defNode));	  inlinedNewDependencies.add(t.getScope().getVar(c.defNode),    c.defMetadata);    	non-compiled	[CE]  ';'  expected	66	None	replace
993	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getVar(numUseWithinCfgNode));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getVar(numUseWithinCfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getVar(numUseWithinCfgNode));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(numUseWithinCfgNode));    	non-compiled	[CE]  ';'  expected	49	None	replace
994	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getConstants());  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getConstants());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.getConstants());	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends);    	non-compiled	[CE]  ';'  expected	69	None	replace
995	[BUG]  [BUGGY]  c.defMetadata.inline(varName,  t.getModule());  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inline(varName,  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inline(varName,  t.getModule());	  c.inlineVariable();    	non-compiled	[CE]  ';'  expected	53	None	replace
996	[BUG]  [BUGGY]  c.defMetadata.inline(varName);  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inline(varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inline(varName);	  c.inlineVariable();    	non-compiled	[CE]  ';'  expected	53	None	replace
997	[BUG]  [BUGGY]  c.defMetadata.remove();  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.remove();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.remove();	  c.inlineVariable();    	non-compiled	[CE]  ';'  expected	53	None	replace
998	[BUG]  [BUGGY]  c.defMetadata.depends.remove(0);  [CE]  ';'  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.remove(0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.remove(0);	  c.inlineVariable();    	non-compiled	[CE]  ';'  expected	53	None	replace
999	[BUG]  [BUGGY]  c.defMetadata.remove(varName);  [CE]  ';'  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.remove(varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.remove(varName);	  c.inlineVariable();    	non-compiled	[CE]  ';'  expected	53	None	replace
1000	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.getModule());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.getModule());    	non-compiled	[CE]  ';'  expected	102	None	replace
1001	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.getModule());  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.getModule());	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.getModule());    	non-compiled	[CE]  ';'  expected	102	None	replace
1002	[BUG]  [BUGGY]  Context.checkState(!c.defMetadata.depends.isEmpty());  c.inlineVariable();  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(!c.defMetadata.depends.isEmpty());  c.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(!c.defMetadata.depends.isEmpty());  c.inlineVariable();	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
1003	[BUG]  [BUGGY]  Context.checkState(c.depends.isEmpty());  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(c.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(c.depends.isEmpty());	  if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    	non-compiled	[CE]  ';'  expected	51	None	replace
1004	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE));	  inlinedNewDependencies.add(t.getScope().getVar(n));    	non-compiled	[CE]  ';'  expected	30	None	replace
1005	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defNode));	  inlinedNewDependencies.add(t.getScope().getVar(n));    	non-compiled	[CE]  ';'  expected	30	None	replace
1006	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.node);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.node);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.node);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata.depends);    	non-compiled	[CE]  ';'  expected	7	None	replace
1007	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.references);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.references);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.references);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.defMetadata.depends);    	non-compiled	[CE]  ';'  expected	7	None	replace
1008	[BUG]  [BUGGY]  inlinedNewDependencies.add(v.getScope().getVar(varName));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(v.getScope().getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(v.getScope().getVar(varName));	  inlinedNewDependencies.add(t.getScope().getVar(name));    	non-compiled	[CE]  ';'  expected	75	None	replace
1009	[BUG]  [BUGGY]  inlinedNewDependencies.add(n.getScope().getVar(varName));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(n.getScope().getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(n.getScope().getVar(varName));	  inlinedNewDependencies.add(t.getScope().getVar(name));    	non-compiled	[CE]  ';'  expected	75	None	replace
1010	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkArgument(c.defMetadata.depends  ==  null);  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkArgument(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    Preconditions.checkArgument(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  ';'  expected	93	None	add
1011	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Context.checkState(c.defMetadata.depends  ==  null);  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Context.checkState(c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    Context.checkState(c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  ';'  expected	93	None	add
1012	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(!c.defMetadata.depends  ==  null);  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  Preconditions.checkState(!c.defMetadata.depends  ==  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    Preconditions.checkState(!c.defMetadata.depends  ==  null);	  	non-compiled	[CE]  ';'  expected	93	None	add
1013	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeTraversal.traverse(compiler,  cfa,  new  RuntimeException(t));  [CE]  ';'  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeTraversal.traverse(compiler,  cfa,  new  RuntimeException(t));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    NodeTraversal.traverse(compiler,  cfa,  new  RuntimeException(t));	  	non-compiled	[CE]  ';'  expected	93	None	add
1014	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeTraversal.traverse(compiler,  cfa,  new  RuntimeException( " "));  [CE]  ';'  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends  ==  null);  NodeTraversal.traverse(compiler,  cfa,  new  RuntimeException( " "));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends    ==    null);    NodeTraversal.traverse(compiler,  cfa,  new  RuntimeException( " "));	  	non-compiled	[CE]  ';'  expected	93	None	add
1015	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.size()  ==  1);  if(!c.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.size()  ==  1);  if(!c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.size()  ==  1);  if(!c.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1016	[BUG]  [BUGGY]  NodeUtil.checkState(c.depends.isEmpty());  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  NodeUtil.checkState(c.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	NodeUtil.checkState(c.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1017	[BUG]  [BUGGY]  Context.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Context.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Context.checkState(c.depends.isEmpty());  if(!c.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1018	[BUG]  [BUGGY]  inlinedNewDependencies.add(v.getScope().getVar(varName),  c.defMetadata);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(v.getScope().getVar(varName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(v.getScope().getVar(varName),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(name),    c.defMetadata);    	non-compiled	[CE]  ';'  expected	68	None	replace
1019	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.inline())  {  c.inlineVariable();  }  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.inline())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.inline())  {  c.inlineVariable();  }	  	non-compiled	[CE]  ';'  expected	50	None	add
1020	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.canBeReaching())  {  c.inlineVariable();  }  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.canBeReaching())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.canBeReaching())  {  c.inlineVariable();  }	  	non-compiled	[CE]  ';'  expected	50	None	add
1021	[BUG]  [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.inlined())  {  c.inlineVariable();  }  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  if(!c.defMetadata.depends.isEmpty())  {  c.inlineVariable();  }  if(!c.defMetadata.inlined())  {  c.inlineVariable();  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	if(!c.defMetadata.depends.isEmpty())    {    c.inlineVariable();    }    if(!c.defMetadata.inlined())  {  c.inlineVariable();  }	  	non-compiled	[CE]  ';'  expected	50	None	add
1022	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c.getScope());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  ';'  expected	25	None	replace
1023	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg.getScope());  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg.getScope());	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  ';'  expected	25	None	replace
1024	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  ';'  expected	6	None	replace
1025	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends,  def);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingUses,  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  ';'  expected	6	None	replace
1026	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(t.getModule()));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(t.getModule()));	  inlinedNewDependencies.add(c.defMetadata.getVar(n));    	non-compiled	[CE]  ';'  expected	136	None	replace
1027	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  ';'  expected	119	None	add
1028	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  [CE]  illegal  start  of  expression  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
1029	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||! "c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  unclosed  string  literal  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||! "c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||! "c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  unclosed  string  literal	119	None	add
1030	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1031	[BUG]  [BUGGY]  Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1032	[BUG]  [BUGGY]  Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.inlinedNewDependencies.isEmpty()  ||  c.inlinedNewDependencies.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.inlinedNewDependencies.isEmpty()  ||  c.inlinedNewDependencies.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.inlinedNewDependencies.isEmpty()  ||  c.inlinedNewDependencies.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1033	[BUG]  [BUGGY]  Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.inlinedNewDependencies.isEmpty());  if(!c.defMetadata.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }	          Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1034	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t,  def);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t,  def);	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t);    	non-compiled	[CE]  ';'  expected	133	None	replace
1035	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t,  null);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t,  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getVar(varName),  t,  null);	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t);    	non-compiled	[CE]  ';'  expected	133	None	replace
1036	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends,  c.defMetadata.depends));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.depends,  c.defMetadata.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.depends,  c.defMetadata.depends));	  inlinedNewDependencies.add(t.getScope().getVar(c.depends));    	non-compiled	[CE]  ';'  expected	32	None	replace
1037	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  NodeTraversal.traverse(compiler,  c.inlineVariable(),  t);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  NodeTraversal.traverse(compiler,  c.inlineVariable(),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    NodeTraversal.traverse(compiler,  c.inlineVariable(),  t);	  	non-compiled	[CE]  ';'  expected	87	None	add
1038	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  AssertionFailedError  c  =  cfa.inlineVariable();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  AssertionFailedError  c  =  cfa.inlineVariable();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    AssertionFailedError  c  =  cfa.inlineVariable();	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
1039	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  NodeTraversal.traverse(compiler,  c.inlineVariable());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null);  NodeTraversal.traverse(compiler,  c.inlineVariable());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=    null);    NodeTraversal.traverse(compiler,  c.inlineVariable());	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
1040	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa.numUseWithinUseCfgNode);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.numUseWithinUseCfgNode);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1041	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  0);  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  ==  0);	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  ';'  expected	92	None	replace
1042	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  1);  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  1);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  ==  1);	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  ';'  expected	92	None	replace
1043	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  2);  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  2);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  ==  2);	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  ';'  expected	92	None	replace
1044	[BUG]  [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]          Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	                Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  ';'  expected	130	None	add
1045	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata.depends,  def);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  ';'  expected	105	None	replace
1046	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  reachingUses);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defNode,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defNode);    	non-compiled	[CE]  ';'  expected	39	None	replace
1047	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getScope().getVar(varName));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.getScope().getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.getScope().getVar(varName));	  inlinedNewDependencies.add(c.getScope().getVar(NAME));    	non-compiled	[CE]  ';'  expected	38	None	replace
1048	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getVar(varName),  c.defMetadata.getModule());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getVar(varName),  c.defMetadata.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getVar(varName),  c.defMetadata.getModule());	  inlinedNewDependencies.add(c.defMetadata.getVar(varName),    t.getModule());    	non-compiled	[CE]  ';'  expected	135	None	replace
1049	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1050	[BUG]  [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(!c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
1051	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    def);    	non-compiled	[CE]  ';'  expected	2	None	replace
1052	[BUG]  [BUGGY]  for(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  for(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	for(AssertionFailedError  t  :  c.inlineVariable())  {  candidates.add(t.getSourceName());  }	  if(c.defMetadata.depends!=    null)    {    for(AssertionFailedError    t    :    c.inlineVariable())    {    candidates.add(t.getSourceName());    }    	non-compiled	[CE]  ';'  expected	54	None	replace
1053	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  t.getModule()),  reachingUses);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName,  t.getModule()),  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName,  t.getModule()),  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(varName,    t.getModule()));    	non-compiled	[CE]  ';'  expected	103	None	replace
1054	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.vars);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.vars);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defMetadata.vars);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  ';'  expected	124	None	replace
1055	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.node);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.node);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.node);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.vars);    	non-compiled	[CE]  ';'  expected	124	None	replace
1056	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(t.getModule()));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(t.getModule()));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(n));    	non-compiled	[CE]  ';'  expected	45	None	replace
1057	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(node));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.depends.getVar(node));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.depends.getVar(node));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(n));    	non-compiled	[CE]  ';'  expected	45	None	replace
1058	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null,  c.defMetadata.depends.isEmpty());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null,  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends!=  null,  c.defMetadata.depends.isEmpty());	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  ';'  expected	58	None	replace
1059	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null,  t.getModule());  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.defMetadata.depends!=  null,  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.defMetadata.depends!=  null,  t.getModule());	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  ';'  expected	58	None	replace
1060	[BUG]  [BUGGY]  AssertionFailedError.checkState(c.depends.depends!=  null);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError.checkState(c.depends.depends!=  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError.checkState(c.depends.depends!=  null);	  AssertionFailedError.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  ';'  expected	58	None	replace
1061	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t.def);    	non-compiled	[CE]  ';'  expected	62	None	replace
1062	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null,  c.defMetadata.depends.isEmpty());  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends!=  null,  c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends!=  null,  c.defMetadata.depends.isEmpty());	  Preconditions.checkState(c.defMetadata.depends!=    null);    	non-compiled	[CE]  ';'  expected	88	None	replace
1063	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  return;  }  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  return;  }	  	non-compiled	[CE]  ';'  expected	113	None	add
1064	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.inline());  if(!c.defMetadata.inline())  {  return;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.inline());  if(!c.defMetadata.inline())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.inline());  if(!c.defMetadata.inline())  {  return;  }	  	non-compiled	[CE]  ';'  expected	113	None	add
1065	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.references.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.references.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.references.isEmpty())  {  return;  }	  	non-compiled	[CE]  ';'  expected	113	None	add
1066	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  ';'  expected	113	None	add
1067	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  break;  }  [CE]  ';'  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  break;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  break;  }	  	non-compiled	[CE]  ';'  expected	113	None	add
1068	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  1  ||  c.defMetadata.depends.length  >  0);  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  1  ||  c.defMetadata.depends.length  >  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  ==  1  ||  c.defMetadata.depends.length  >  0);	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  ';'  expected	112	None	replace
1069	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  <  1  ||  c.defMetadata.depends.length  >  0);  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  <  1  ||  c.defMetadata.depends.length  >  0);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  <  1  ||  c.defMetadata.depends.length  >  0);	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  ';'  expected	112	None	replace
1070	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  reachingDef);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.depends,  reachingDef);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  ';'  expected	106	None	replace
1071	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  c.defMetadata.depends,  def);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  def,  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  ';'  expected	106	None	replace
1072	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  def);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfgNode,  c.defMetadata.depends,  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends,    def);    	non-compiled	[CE]  ';'  expected	106	None	replace
1073	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode,  reachingUses);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.depends,  numUseWithinUseCfgNode,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  ';'  expected	9	None	replace
1074	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defNode,  reachingUses);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defNode,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defNode,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defNode);    	non-compiled	[CE]  ';'  expected	40	None	replace
1075	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  reachingUses);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  ';'  expected	64	None	replace
1076	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  reachingUses);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfgNode,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  ';'  expected	64	None	replace
1077	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  t.def);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  t.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses,  t.def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def,    reachingUses);    	non-compiled	[CE]  ';'  expected	64	None	replace
1078	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }	  	non-compiled	[CE]  ';'  expected	117	None	add
1079	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  ';'  expected	117	None	add
1080	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  break;  }  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  return;  }  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  break;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty())    {    return;    }    Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty())  {  break;  }	  	non-compiled	[CE]  ';'  expected	117	None	add
1081	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.inlineVariable());  if(!c.inlineVariable())  {  continue;  }	  	non-compiled	[CE]  ';'  expected	115	None	add
1082	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.inlineVariable());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }	  	non-compiled	[CE]  ';'  expected	115	None	add
1083	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.references.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.references.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.references.isEmpty())  {  continue;  }	  	non-compiled	[CE]  ';'  expected	115	None	add
1084	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.inlined());  if(!c.defMetadata.inlined())  {  continue;  }  [CE]  ';'  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.inlined());  if(!c.defMetadata.inlined())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.inlined());  if(!c.defMetadata.inlined())  {  continue;  }	  	non-compiled	[CE]  ';'  expected	115	None	add
1085	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.inlineParent())  {  continue;  }  [CE]  ';'  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  if(!c.defMetadata.depends.isEmpty())  {  continue;  }  Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.inlineParent())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    Preconditions.checkState(c.defMetadata.isEmpty());  if(!c.defMetadata.inlineParent())  {  continue;  }	  	non-compiled	[CE]  ';'  expected	115	None	add
1086	[BUG]  [BUGGY]  Preconditions.checkState(c.depends.length  <  2);  if(!c.depends.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.depends.length  <  2);  if(!c.depends.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.depends.length  <  2);  if(!c.depends.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1087	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.isAll());  if(!c.defMetadata.isEmpty())  {  continue;  }  [CE]  ';'  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.isAll());  if(!c.defMetadata.isEmpty())  {  continue;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.isAll());  if(!c.defMetadata.isEmpty())  {  continue;  }	  Preconditions.checkState(c.defMetadata.depends.isEmpty());    if(!c.defMetadata.depends.isEmpty())    {    continue;    }    	non-compiled	[CE]  ';'  expected	116	None	replace
1088	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c,  reachingUses);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  c,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    reachingUses);    	non-compiled	[CE]  ';'  expected	78	None	replace
1089	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.variableName),  c.defMetadata);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.variableName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.variableName),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.variableName));    	non-compiled	[CE]  ';'  expected	31	None	replace
1090	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  cfgNode);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c,    numUseWithinUseCfgNode);    	non-compiled	[CE]  ';'  expected	3	None	replace
1091	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfgNode);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  ';'  expected	76	None	replace
1092	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfg);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    reachingDef);    	non-compiled	[CE]  ';'  expected	76	None	replace
1093	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata,  reachingUses);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef,  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  ';'  expected	17	None	replace
1094	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  reachingUses,  numUseWithinUseCfgNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1095	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  reachingUses,  numUseWithinUseCfgNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  reachingUses,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  reachingUses,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1096	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  c.defMetadata);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  c.defMetadata);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.defMetadata);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1097	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlinedCfgNode,  t.getScope());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlinedCfgNode,  t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.inlinedCfgNode,  t.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
1098	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.getScope());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.getScope());	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.getScope());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
1099	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineDependencies(t.getScope());  [CE]  <identifier>  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineDependencies(t.getScope());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineDependencies(t.getScope());	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1100	[BUG]  [BUGGY]  c.inlineVariable();  c.inlinePath();  [CE]  <identifier>  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlinePath();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlinePath();	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1101	[BUG]  [BUGGY]  c.inlineVariable();  c.inlineDependencies(t.getModule());  [CE]  <identifier>  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.inlineVariable();  c.inlineDependencies(t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.inlineVariable();    c.inlineDependencies(t.getModule());	  	non-compiled	[CE]  <identifier>  expected	52	None	add
1102	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.def);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defName),  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.def);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1103	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  1  ||!c.defMetadata.depends.length);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  1  ||!c.defMetadata.depends.length);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  ==  1  ||!c.defMetadata.depends.length);	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
1104	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||!c.defMetadata.depends.length);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||!c.defMetadata.depends.length);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  ==  0  ||!c.defMetadata.depends.length);	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
1105	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  <  2  ||!c.defMetadata.depends.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.length  <  2  ||!c.defMetadata.depends.length);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.length  <  2  ||!c.defMetadata.depends.length);	  Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
1106	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.depends);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.defMetadata,  c.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
1107	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  def,  c.defMetadata.depends);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  def,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  n,  def,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
1108	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata.depends);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata.depends);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
1109	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata,  reachingUses);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c.defMetadata,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
1110	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cName),  varName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(cName),  varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(cName),  varName);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
1111	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinUseCfgNode,  reachingUses);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinUseCfgNode,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  numUseWithinUseCfgNode,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
1112	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses,  numUseWithinCfgNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses,  numUseWithinCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingUses,  numUseWithinCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
1113	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses,  def);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  reachingUses,  def);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
1114	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
1115	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  c.defMetadata);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.defPREDICATE),  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.defPREDICATE),    c.defMetadata);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
1116	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef.depends,  c.defMetadata.depends);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef.depends,  c.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  reachingDef.depends,  c.defMetadata.depends);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defMetadata.depends,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
1117	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  c);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    def);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
1118	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  def,  reachingUses);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c,  def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c,    def);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
1119	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa,  c.defMetadata);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa,  c.defMetadata);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.defMetadata);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1120	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.numUseWithinUseCfgNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.numUseWithinUseCfgNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    n);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1121	[BUG]  [BUGGY]  c.defMetadata.clear();  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.clear();	  c.defMetadata.depends.clear();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1122	[BUG]  [BUGGY]  c.defMetadata.removeAllDependencies();  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.removeAllDependencies();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.removeAllDependencies();	  c.defMetadata.depends.clear();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1123	[BUG]  [BUGGY]  c.defMetadata.inline(n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inline(n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inline(n);	  c.defMetadata.depends.clear();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1124	[BUG]  [BUGGY]  c.defMetadata.inline(n,  def);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inline(n,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inline(n,  def);	  c.defMetadata.depends.clear();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1125	[BUG]  [BUGGY]  c.defMetadata.inline();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.inline();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.inline();	  c.defMetadata.depends.clear();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1126	[BUG]  [BUGGY]  c.defMetadata.reset();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.reset();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.reset();	  c.defMetadata.depends.clear();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1127	[BUG]  [BUGGY]  InlinedNewDependencies.add(c.getScope().getVar(varName));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  InlinedNewDependencies.add(c.getScope().getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	InlinedNewDependencies.add(c.getScope().getVar(varName));	  inlinedNewDependencies.add(c.getScope().getVar(id));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
1128	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.numUseWithinUseCfgNode,  c);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.numUseWithinUseCfgNode,  c);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.numUseWithinUseCfgNode,  c);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    numUseWithinUseCfgNode,    c);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
1129	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.defMetadata.independs.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.defMetadata.independs.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.defMetadata.independs.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
1130	[BUG]  [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  +  1]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  +  1]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  c.depends.toArray(new  AssertionFailedError[c.defMetadata.depends.size()  +  1]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[c.defMetadata.depends.size()    ]);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
1131	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.def,  reachingUses);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  c.def,  reachingUses);	  inlinedNewDependencies.add(c.getScope().getVar(c.varName),    t.def);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
1132	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.inline()  ||  c.defMetadata.inline());  [CE]  <identifier>  expected  [FE]    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.inline()  ||  c.defMetadata.inline());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.inline()  ||  c.defMetadata.inline());	  	non-compiled	[CE]  <identifier>  expected	111	None	add
1133	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.inlined()  ||  c.defMetadata.inlined());  [CE]  <identifier>  expected  [FE]      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.inlined()  ||  c.defMetadata.inlined());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.inlined()  ||  c.defMetadata.inlined());	  	non-compiled	[CE]  <identifier>  expected	111	None	add
1134	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.inline()  ||  c.defMetadata.inline());  [CE]  <identifier>  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(FUNCTION  _func):  testcode:1:0  function  _func()  {var  a    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||  c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.inline()  ||  c.defMetadata.inline());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||    c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.inline()  ||  c.defMetadata.inline());	  	non-compiled	[CE]  <identifier>  expected	111	None	add
1135	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.varName,  c.getScope().getVar(v.varName));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.varName,  c.getScope().getVar(v.varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.varName,  c.getScope().getVar(v.varName));	  inlinedNewDependencies.add(c.varName.getScope().getVar(c.varName));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1136	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def,  c.def);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def,  c.def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  cfg,  def,  c.def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
1137	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.def,  reachingUses);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.def,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfa,  c.def,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
1138	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  cfa,  def);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(c.varName),  cfa,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(c.varName),  cfa,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    c.def);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
1139	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.getModule());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.getModule());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  c.getScope().getVar(varName),  t.getModule());	  inlinedNewDependencies.add(c,    c.getScope().getVar(varName));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
1140	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata,  def);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.defMetadata);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1141	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  def);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  c.def,  def);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
1142	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  n);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  n);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  def,  n);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    def,    c.def);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
1143	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.inlinedNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.inlinedNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.inlinedNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
1144	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.node);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.node);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.node);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
1145	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.typeNode);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.typeNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.depends,  c.typeNode);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    c.defMetadata.depends,    numUseWithinUseCfgNode);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
1146	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.findVar(varName));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.findVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.findVar(varName));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(id));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
1147	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa.defMetadata.depends);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa.defMetadata.depends);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  cfa.defMetadata.depends);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
1148	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.instance);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.instance);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  c.defMetadata.instance);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    c.defMetadata.depends);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
1149	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  c.defMetadata.depends));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  c.defMetadata.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  c.defMetadata.depends));	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1150	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  def));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  def));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends,  def));	  inlinedNewDependencies.add(t.getScope().getVar(c.defMetadata.depends));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1151	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfa.getVar(varName));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfa.getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfa.getVar(varName));	  inlinedNewDependencies.add(c.defMetadata.getVar(numUseWithinUseCfgNode));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
1152	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError[c.getSourceName()  ]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError[c.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError[c.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
1153	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.toArray(new  AssertionFailedError[c.defMetadata.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
1154	[BUG]  [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError[t.getSourceName()  ]);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	AssertionFailedError  t  =  t.defMetadata.toArray(new  AssertionFailedError[t.getSourceName()  ]);	  AssertionFailedError    t    =    c.defMetadata.depends.toArray(new    AssertionFailedError[t.getSourceName()    ]);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
1155	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  c.defMetadata.  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  c.defMetadata.  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  c.defMetadata.	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
1156	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  c.defMetadata.  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  c.defMetadata.  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  c.defMetadata.	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
1157	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  }	  	non-compiled	[CE]  <identifier>  expected	95	None	add
1158	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  Preconditions.checkState(c.defMetadata.depends!=  null);  c.defMetadata.depends.clear();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  Preconditions.checkState(c.defMetadata.depends!=  null);  c.defMetadata.depends.clear();  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    Preconditions.checkState(c.defMetadata.depends!=  null);  c.defMetadata.depends.clear();	  	non-compiled	[CE]  <identifier>  expected	95	None	add
1159	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(c.defMetadata.depends.isEmpty());  }	  	non-compiled	[CE]  <identifier>  expected	95	None	add
1160	[BUG]  [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  return;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  c.defMetadata.depends.clear();  if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  return;  }  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	c.defMetadata.depends.clear();    if(c.defMetadata.depends!=  null)  {  c.defMetadata.depends.clear();  }  else  {  Preconditions.checkState(!c.defMetadata.depends.isEmpty());  return;  }	  	non-compiled	[CE]  <identifier>  expected	95	None	add
1161	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.defMetadata.calls.getVar(varName));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.defMetadata.calls.getVar(varName));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.defMetadata.calls.getVar(varName));	  inlinedNewDependencies.add(c.defMetadata.depends.getVar(name));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
1162	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty()  ||!c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty()    ||!c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.isEmpty()  ||!c.defMetadata.depends.isEmpty());	  	non-compiled	[CE]  <identifier>  expected	109	None	add
1163	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defPREDICATE,  reachingUses);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defPREDICATE,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defPREDICATE,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1164	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defPREDICATE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1165	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.defPREDICATE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.defPREDICATE);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  c.defMetadata.defPREDICATE);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    c.defPREDICATE);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1166	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  cfg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  def,  cfg);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
1167	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingDef);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingDef);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(varName),  cfg,  reachingDef);	  inlinedNewDependencies.add(t.getScope().getVar(varName),    cfg,    def);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
1168	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope(),  c.varName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope(),  c.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope(),  c.varName);	  inlinedNewDependencies.add(c.getScope(),    c.varName);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
1169	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  vname);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  vname);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  vname);	  inlinedNewDependencies.add(c.getScope(),    c.varName);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
1170	[BUG]  [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfa,  reachingUses);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfa,  reachingUses);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t.getScope().getVar(c.varName),  reachingDef,  cfa,  reachingUses);	  inlinedNewDependencies.add(t.getScope().getVar(c.varName),    cfa,    reachingUses);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
1171	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  def);  [CE]  unclosed  comment  [FE]            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  def);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  unclosed  comment	101	None	replace
1172	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  numUseWithinUseCfgNode);  [CE]  unclosed  comment  [FE]              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  numUseWithinUseCfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  unclosed  comment	101	None	replace
1173	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  null);  [CE]  unclosed  comment  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  null);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope().getVar(varName),  t,  null);	  inlinedNewDependencies.add(c.getScope().getVar(varName),    t);    	non-compiled	[CE]  unclosed  comment	101	None	replace
1174	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg,  cfg.getScope().getVar(varName),  t);  [CE]  unclosed  comment  [FE]                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg,  cfg.getScope().getVar(varName),  t);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg,  cfg.getScope().getVar(varName),  t);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  unclosed  comment	128	None	replace
1175	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  c.defMetadata);  [CE]  unclosed  comment  [FE]                  AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  c.defMetadata);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg.getScope().getVar(varName),  t,  c.defMetadata);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  unclosed  comment	128	None	replace
1176	[BUG]  [BUGGY]  inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c.varName);  [CE]  unclosed  comment  [FE]                    AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c.varName);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(cfg,  t.getScope().getVar(varName),  c.varName);	  inlinedNewDependencies.add(cfg.getScope().getVar(c.varName),    t);    	non-compiled	[CE]  unclosed  comment	128	None	replace
1177	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  c.defMetadata.depends));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  c.defMetadata.depends));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.varName,  c.defMetadata.depends));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
1178	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.getModule()));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  t.getModule()));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
1179	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  t.getModule()));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  t.getModule()));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.varName,  t.getModule()));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
1180	[BUG]  [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  cfgNode));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c.getScope(),  c.varName,  cfgNode));  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c.getScope(),  c.varName,  cfgNode));	  inlinedNewDependencies.add(c.getScope(),    c.varName));    	non-compiled	[CE]  ';'  expected	14	None	replace
1181	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.isEmpty());  [CE]  unclosed  comment  [FE]    RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(!c.defMetadata.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(!c.defMetadata.isEmpty());	  	non-compiled	[CE]  unclosed  comment	91	None	add
1182	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.node.isEmpty());  [CE]  unclosed  comment  [FE]      RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.node.isEmpty());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.node.isEmpty());	  	non-compiled	[CE]  unclosed  comment	91	None	add
1183	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.length  ==  1);  [CE]  unclosed  comment  [FE]        RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.depends.length  ==  1);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.depends.length  ==  1);	  	non-compiled	[CE]  unclosed  comment	91	None	add
1184	[BUG]  [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.inlined());  [CE]  unclosed  comment  [FE]          RuntimeException    [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  Preconditions.checkState(c.defMetadata.depends.isEmpty());  Preconditions.checkState(c.defMetadata.inlined());  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	Preconditions.checkState(c.defMetadata.depends.isEmpty());    Preconditions.checkState(c.defMetadata.inlined());	  	non-compiled	[CE]  unclosed  comment	91	None	add
1185	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfa);  [CE]  unclosed  comment  [FE]                        AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfa);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  unclosed  comment	71	None	replace
1186	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfg);  [CE]  unclosed  comment  [FE]                          AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfg);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfg);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  unclosed  comment	71	None	replace
1187	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfgNode);  [CE]  unclosed  comment  [FE]                            AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfgNode);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(c.varName),  cfgNode);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  unclosed  comment	71	None	replace
1188	[BUG]  [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(varName),  cfa);  [CE]  unclosed  comment  [FE]                              AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(c,  t.getScope().getVar(varName),  cfa);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(c,  t.getScope().getVar(varName),  cfa);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  unclosed  comment	71	None	replace
1189	[BUG]  [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  def);  [CE]  unclosed  comment  [FE]                                AssertionFailedError      [CONTEXT]      c.inlineVariable();        if  (!c.defMetadata.depends.isEmpty())  {      [BUGGY]  inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  def);  [BUGGY]      }  }  }  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Candidate  c  Set  inlinedNewDependencies  NodeTraversal  t  Node  c  def  n  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  ControlFlowGraph  cfg  List  candidates  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.48038446141526137	166	166	3	replace	inlinedNewDependencies.add(t,  c.getScope().getVar(varName),  def);	  inlinedNewDependencies.add(c,    t.getScope().getVar(c.varName));    	non-compiled	[CE]  unclosed  comment	71	None	replace
