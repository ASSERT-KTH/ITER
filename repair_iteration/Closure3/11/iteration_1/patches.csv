bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
3	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidate)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidate)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  candidates)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidate)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidate)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  instance)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  instance)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
11	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  case)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  case)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  candidates.add(inlinedNewDependencies[i]);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  candidates.add(inlinedNewDependencies[i]);  }  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  candidates.add(inlinedNewDependencies[i]);  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
13	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList();  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList();  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayList();	      	non-compiled	[CE]  ';'  expected	7	None	replace
14	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange();  }  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange();  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
15	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  this);  }  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  this);  }  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  this);  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
16	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
17	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  this);  }  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  this);  }  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  this);  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
18	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]      [BUGGY]  if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
21	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
26	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
27	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  exception)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
43	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
44	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
45	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
46	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
47	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
50	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  error)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  error)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  exception)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
54	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
60	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  instance)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  instance)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  instance)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  instance)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  instance)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  instance)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  exception)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
71	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
72	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
73	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
74	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(def);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  NodeUtil.isFunctionDeclaration(def);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.isFunctionDeclaration(def);	      	non-compiled	[CE]  ';'  expected	7	None	replace
75	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  Predicates.checkNotNull(compiler);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkNotNull(compiler);	      	non-compiled	[CE]  ';'  expected	7	None	replace
76	[BUG]  [BUGGY]  Predicate.checkNotNull(compiler);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  Predicate.checkNotNull(compiler);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkNotNull(compiler);	      	non-compiled	[CE]  ';'  expected	7	None	replace
77	[BUG]  [BUGGY]  inlinedNewDependencies.add(compiler);  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  inlinedNewDependencies.add(compiler);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies.add(compiler);	      	non-compiled	[CE]  ';'  expected	7	None	replace
78	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(def);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      [BUGGY]  NodeUtil.mayHaveSideEffects(def);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(def);	      	non-compiled	[CE]  ';'  expected	7	None	replace
79	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]      [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(defMetadata);	      	non-compiled	[CE]  ';'  expected	7	None	replace
80	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList())  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineNewDependencies)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
84	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
85	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  candidates)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
87	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
88	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  exception)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
90	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
91	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
92	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  List  <  String>  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
93	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
94	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
95	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  instance)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  instance)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
96	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  instance)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  instance)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
98	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
99	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
100	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
101	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE);	      	non-compiled	[CE]  ';'  expected	7	None	replace
102	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);	      	non-compiled	[CE]  ';'  expected	7	None	replace
103	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE);  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE);	      	non-compiled	[CE]  ';'  expected	7	None	replace
104	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));	      	non-compiled	[CE]  ';'  expected	7	None	replace
105	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidates)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
107	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
108	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
109	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate  exception)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate  exception)  {  [BUGGY]    this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
