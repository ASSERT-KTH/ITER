bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  K,  V>  case)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  K,  V>  case)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  K,  V>  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    case)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <?>  case)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <?>  case)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <?>  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    case)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  Node>  case)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  Node>  case)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  Node>  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    case)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  C>  case)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  C>  case)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  C>  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    case)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  Token>  case)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  Token>  case)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  <  Token>  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    case)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
7	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
8	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(0);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(0);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayList(0);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
9	[BUG]  [BUGGY]  inlinedNewDependencies  =  Sets.newHashSet();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Sets.newHashSet();  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Sets.newHashSet();	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
10	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(1);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(1);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayList(1);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
11	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
12	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
13	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning),  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning),  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning),  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
14	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
15	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  Warning)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  Warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  Warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
16	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning),  this)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning),  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning),  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
17	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  inline)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  inline)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  inline)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
18	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  ex)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  ex)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  ex)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
19	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  instance)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    instance)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
20	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  case)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  case)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
21	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
22	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
23	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  target)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
24	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  target,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  target,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  target,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
25	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  target)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
26	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  target)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
27	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
28	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
29	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  Warning  warning)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  Warning  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  Warning  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
30	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
31	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  error)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
32	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  AssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  AssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
33	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
34	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  type)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  type)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  type)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
35	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  name)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  name)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  name)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
36	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  this.exception)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  this.exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  this.exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
37	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedFieldType  exception)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedFieldType  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedFieldType  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
38	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  rule)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  rule)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  rule)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
39	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
40	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compil  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compil  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compil	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
41	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
42	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
43	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
44	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler,  [CE]  ';'  expected  [FE]                                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler,  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler,	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
45	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  +  1))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(  [CE]  ';'  expected  [FE]                                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  +  1))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode  +  1))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
46	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedException  exception)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedException  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
47	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
48	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedException  exception)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedException  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
49	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
50	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  predicate)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
51	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
52	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  predicate)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
53	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  prdicate)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  prdicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  prdicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
54	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate,  List  candidates)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate,  List  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate,  List  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
55	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineAssertionFailedError  init)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineAssertionFailedError  init)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineAssertionFailedError  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  init,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineFailedError  init)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineFailedError  init)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineFailedError  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
62	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
63	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  String>  candidates)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Set    <    String>    candidates)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
64	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Set    <    String>    candidates)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
65	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
66	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Set    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  false)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  false)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  false)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
68	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
69	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
70	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
71	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
72	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCfgNode,  exception)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCfgNode,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCfgNode,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
73	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  exception)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
74	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  predicate,  exception)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  predicate,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  predicate,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
75	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
76	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  exception)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  exception)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
78	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  target)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  target)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
79	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
80	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  defaultCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  defaultCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicate  defaultCfgNode)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
81	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.EMPTY_LIST_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
82	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EMPTY_LIST_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EMPTY_LIST_ARRAY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EMPTY_LIST_ARRAY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.EMPTY_LIST_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
83	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EMPTY_LIST_ARRAY,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EMPTY_LIST_ARRAY,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EMPTY_LIST_ARRAY,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.EMPTY_LIST_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
84	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.EMPTY_LIST_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.EMPTY_LIST_ARRAY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.EMPTY_LIST_ARRAY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.EMPTY_LIST_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
85	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  false)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  false)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  false)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
86	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  expected)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  expected)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  expected)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
87	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
88	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
89	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Integer.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Integer.MAX_VALUE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Integer.MAX_VALUE)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
90	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.NAME)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.NAME)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.NAME)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
91	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  this.instance)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  this.instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  this.instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
92	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    instance)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
93	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  candidates)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
94	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  candidates)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
95	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  candidates)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
96	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  candidates)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
97	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collection  candidates)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collection  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collection  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
98	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  AssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  AssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
99	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
100	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
101	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  errorCode,  AssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  errorCode,  AssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  errorCode,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
102	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  ';'  expected	67	None	replace
103	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  errorName,  AssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  errorName,  AssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  errorName,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
104	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedWarning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
105	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedWarning  warning)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedWarning  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedWarning  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedWarning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
106	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  warning)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedWarning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
107	[BUG]  [BUGGY]  Predicate.checkState(compiler!=  null);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Predicate.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkState(compiler!=  null);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
108	[BUG]  [BUGGY]  Predicate.checkNotNull(compiler,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  Predicate.checkNotNull(compiler,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkNotNull(compiler,  numUseWithinUseCfgNode);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
109	[BUG]  [BUGGY]  Predicate.checkNotNull(compiler,  inlinedNewDependencies);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  Predicate.checkNotNull(compiler,  inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkNotNull(compiler,  inlinedNewDependencies);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
110	[BUG]  [BUGGY]  Predicate.checkNotNull(compiler,  this.inlinedNewDependencies);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  Predicate.checkNotNull(compiler,  this.inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkNotNull(compiler,  this.inlinedNewDependencies);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
111	[BUG]  [BUGGY]  Predicate.checkState(compiler  ==  null);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  Predicate.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkState(compiler  ==  null);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
112	[BUG]  [BUGGY]  AssertionFailedError.checkNotNull(compiler);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkNotNull(compiler);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkNotNull(compiler);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
113	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  SIDE_EFFECT_PREDICATE,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  SIDE_EFFECT_PREDICATE,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  SIDE_EFFECT_PREDICATE,  numUseWithinUseCfgNode);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    MISSING_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	102	None	replace
114	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  MISSING_EFFECT_PREDICATE,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  MISSING_EFFECT_PREDICATE,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  MISSING_EFFECT_PREDICATE,  numUseWithinUseCfgNode);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    MISSING_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	102	None	replace
115	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  DEF_METADATA,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  DEF_METADATA,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  DEF_METADATA,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    MISSING_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	102	None	replace
116	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  MISSING_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  MISSING_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  MISSING_EFFECT_PREDICATE);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    MISSING_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	102	None	replace
117	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    MISSING_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	102	None	replace
118	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingDef);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingDef);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    MISSING_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	102	None	replace
119	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  UnsupportedOperationException)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  UnsupportedOperationException)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  UnsupportedOperationException)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
120	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
121	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  IllegalArgumentException)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  IllegalArgumentException)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  IllegalArgumentException)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
122	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
123	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_EXPECTED)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_EXPECTED)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
124	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  MISSING_EFFECT_EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
125	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    null)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
126	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.emptySet())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    null)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
127	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.inlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    null)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
128	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
129	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
130	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  String>  candidates)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
131	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collection  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collection  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collection  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
132	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
133	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  List  <  String>  candidates)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  ';'  expected	92	None	replace
134	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
135	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
136	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
137	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  warning,  candidates)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  warning,  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  warning,  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
138	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	85	None	replace
139	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
140	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
141	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  InlinedCfgNode>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  InlinedCfgNode>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  InlinedCfgNode>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
142	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedParents)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedParents)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedParents)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
143	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedUndefinedDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedUndefinedDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedUndefinedDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
144	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	68	None	replace
145	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
146	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
147	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.newArrayList())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.newArrayList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.newArrayList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
148	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.newHashSet())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.newHashSet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.newHashSet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
149	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
150	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  instance)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    instance)    {    	non-compiled	[CE]  ';'  expected	64	None	replace
151	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  element)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  element)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  element)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
152	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionElement  instance)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionElement  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionElement  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
153	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  example)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  example)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  example)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
154	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  ex)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  ex)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  ex)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedErrorException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
155	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  this.exception)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  this.exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  this.exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedErrorException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
156	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedErrorException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
157	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
158	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedCharacter)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedCharacter)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedCharacter)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
159	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter.class)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
160	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  inline)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  inline)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  inline)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
161	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter),  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter),  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter),  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
162	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
163	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  candidates)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
164	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <?>  candidates)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <?>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <?>  candidates)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
165	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptyList())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptyList())  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
166	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Node>  candidates)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Node>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Node>  candidates)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
167	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
168	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  compiler,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  compiler,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  compiler,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
169	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement.class)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
170	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedElement)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedElement)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedElement)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
171	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  SIDE_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  SIDE_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  SIDE_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
172	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
173	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
174	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.numUseWithinUseCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.numUseWithinUseCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
175	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.DEFAULT_NAME,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.DEFAULT_NAME,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.DEFAULT_NAME,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
176	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.cfgNode)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.cfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.cfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
177	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
178	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  exception,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  exception,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  exception,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
179	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
180	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  String  sourceName,  exception)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  String  sourceName,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  String  sourceName,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
181	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  sourceName,  AssertionFailedError  exception)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  sourceName,  AssertionFailedError  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  sourceName,  AssertionFailedError  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
182	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  String  varName)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  String  varName)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  String  varName)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
183	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Lists.  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
184	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
185	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  type)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  type)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  type)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
186	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  length)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  length)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
187	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  count)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  count)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  count)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
188	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
189	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
190	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
191	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
192	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
193	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    instance)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
194	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  init)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  init)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
195	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
196	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  error)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
197	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  error,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  error,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  error,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
198	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.error)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
199	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  error)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
200	[BUG]  [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
201	[BUG]  [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange();  }	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
202	[BUG]  [BUGGY]  AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.re  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.re  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.re	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
203	[BUG]  [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.re  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.re  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.re	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
204	[BUG]  [BUGGY]  AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  Compiler.reportCodeChange	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
205	[BUG]  [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
206	[BUG]  [BUGGY]  AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  compiler.reportCodeChange	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
207	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(useCfgNode);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(useCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(useCfgNode);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  ';'  expected	78	None	replace
208	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(numUseWithinUseCfgNode);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  ';'  expected	78	None	replace
209	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(metadata);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(metadata);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(metadata);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  ';'  expected	78	None	replace
210	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(def,  reachingUses);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(def,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(def,  reachingUses);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  ';'  expected	78	None	replace
211	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(useCfgNode,  def);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(useCfgNode,  def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(useCfgNode,  def);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  ';'  expected	78	None	replace
212	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(dese);  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(dese);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(dese);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  ';'  expected	78	None	replace
213	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(final  Compiler  compiler,  AbstractCompiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(final  Compiler  compiler,  AbstractCompiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(final  Compiler  compiler,  AbstractCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    final    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
214	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  final  Compiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  final  Compiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  final  Compiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    final    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
215	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    final    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
216	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    final    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
217	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
218	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
219	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
220	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  Token.EXPR_RESULT,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  Token.EXPR_RESULT,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  Token.EXPR_RESULT,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
221	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
222	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
223	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.class)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
224	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.class,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
225	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.class)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
226	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject.class)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
227	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  instance)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedParameter    instance)    {    	non-compiled	[CE]  ';'  expected	95	None	replace
228	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  example)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  example)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  example)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedParameter    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
229	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  exception)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedParameter    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
230	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  init)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  init)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedParameter    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
231	[BUG]  [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
232	[BUG]  [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
233	[BUG]  [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
234	[BUG]  [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
235	[BUG]  [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
236	[BUG]  [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
237	[BUG]  [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler,  this);  }  [CE]  ';'  expected  [FE]                                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler,  this);  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(compiler,  numUseWithinUseCfgNode  >  0)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compiler,  this);  }	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
238	[BUG]  [BUGGY]  NodeUtil.setFunctionDeclaration(def);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.setFunctionDeclaration(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.setFunctionDeclaration(def);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
239	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(defMetadata);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.isFunctionDeclaration(defMetadata);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.isFunctionDeclaration(defMetadata);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
240	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(def,  reachingUses);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.isFunctionDeclaration(def,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.isFunctionDeclaration(def,  reachingUses);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
241	[BUG]  [BUGGY]  NodeUtil.isImmutableDeclaration(def);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.isImmutableDeclaration(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.isImmutableDeclaration(def);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
242	[BUG]  [BUGGY]  NodeUtil.removeChild(def);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.removeChild(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.removeChild(def);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
243	[BUG]  [BUGGY]  inlinedNewDependencies.add(compiler,  reachingUses);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies.add(compiler,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies.add(compiler,  reachingUses);	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
244	[BUG]  [BUGGY]  inlinedNewDependencies.add(compiler,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies.add(compiler,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies.add(compiler,  numUseWithinUseCfgNode);	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
245	[BUG]  [BUGGY]  inlinedNewDependencies.add(compiler,  cfgNode);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies.add(compiler,  cfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies.add(compiler,  cfgNode);	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
246	[BUG]  [BUGGY]  inlinedNewDependencies.add(compiler,  startingDef);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies.add(compiler,  startingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies.add(compiler,  startingDef);	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
247	[BUG]  [BUGGY]  this.inlinedNewDependencies.add(compiler);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  this.inlinedNewDependencies.add(compiler);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	this.inlinedNewDependencies.add(compiler);	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
248	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
249	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  instance,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  instance,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  instance,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
250	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject.class)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject.class)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
251	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.EXPR_RESULT)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.EXPR_RESULT)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
252	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.EXTENDS)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.EXTENDS)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.EXTENDS)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
253	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.instance)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.instance)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
254	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
255	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
256	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
257	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
258	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  IASTNodeTraversal.traverse(compiler))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  IASTNodeTraversal.traverse(compiler))  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  IASTNodeTraversal.traverse(compiler))  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
259	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  Compiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  Compiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  Compiler  compiler)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
260	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
261	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  IASTNodeTraversal.traverse(compiler,  this))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  IASTNodeTraversal.traverse(compiler,  this))  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  IASTNodeTraversal.traverse(compiler,  this))  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
262	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  exception)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    exception)    {    	non-compiled	[CE]  ';'  expected	89	None	replace
263	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedElement  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedElement  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedElement  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
264	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionElement  exception)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionElement  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionElement  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
265	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  expression)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  expression)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  expression)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
266	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException.class)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
267	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineException.class)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineException.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineException.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException.class)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
268	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedException.class)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedException.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedException.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException.class)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
269	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
270	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlineNewDependencies)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlineNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlineNewDependencies)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
271	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  InlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  InlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
272	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
273	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
274	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptyList())    {    	non-compiled	[CE]  ';'  expected	35	None	replace
275	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  collection.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  collection.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  collection.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
276	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList(),  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList(),  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList(),  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
277	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
278	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
279	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
280	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedCfgNode)    {    	non-compiled	[CE]  ';'  expected	28	None	replace
281	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  this.cfgNode)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  this.cfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  this.cfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
282	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidates)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    <    Candidate>    candidates)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
283	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  Candidate>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  Candidate>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Set  <  Candidate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    <    Candidate>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
284	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  <  Candidate>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  <  Candidate>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  <  Candidate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    <    Candidate>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
285	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  List  <  Candidate>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  List  <  Candidate>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  List  <  Candidate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    <    Candidate>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
286	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  Candidate>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  Candidate>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  Candidate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    <    Candidate>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
287	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  List  <  Candidate>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  List  <  Candidate>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  List  <  Candidate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    <    Candidate>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
288	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Warning)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
289	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlineFailedError  warning)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlineFailedError  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlineFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
290	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Warning.EXTENDS)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Warning.EXTENDS)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Warning.EXTENDS)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
291	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
292	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  warning,  AssertionFailedError.EXTENDS)  {  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  warning,  AssertionFailedError.EXTENDS)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  warning,  AssertionFailedError.EXTENDS)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
293	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
294	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  expected)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  expected)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  expected)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
295	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  false)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  false)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  false)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
296	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
297	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  true)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  true)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  true)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
298	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  isEnabled)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  isEnabled)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  isEnabled)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
299	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
300	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
301	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  expected)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  expected)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  expected)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
302	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
303	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
304	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
305	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  InlinedDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  InlinedDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  InlinedDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
306	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
307	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
308	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  numUseWithinUseCfgNode);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    NUMBER_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	103	None	replace
309	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  NUMBER_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  NUMBER_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  NUMBER_EFFECT_PREDICATE);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    NUMBER_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	103	None	replace
310	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  varName);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  varName);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  varName);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    NUMBER_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	103	None	replace
311	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlines)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
312	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlines)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlines)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlines)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlines)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
313	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.numUseWithinUseCfgNode)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.numUseWithinUseCfgNode)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlines)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
314	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inline)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inline)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inline)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlines)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
315	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    SummaryCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	49	None	replace
316	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    SummaryCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
317	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  SummaryCompiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  SummaryCompiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  SummaryCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    SummaryCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
318	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses,  SIDE_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses,  SIDE_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses,  SIDE_EFFECT_PREDICATE);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	101	None	replace
319	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingUses);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingUses);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	101	None	replace
320	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingDef);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingDef);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	101	None	replace
321	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  predicate,  SIDE_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  predicate,  SIDE_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  predicate,  SIDE_EFFECT_PREDICATE);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	101	None	replace
322	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkNotNull(compiler,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkNotNull(compiler,  numUseWithinUseCfgNode);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
323	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkState(compiler!=  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
324	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  inlinedNewDependencies);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkNotNull(compiler,  inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkNotNull(compiler,  inlinedNewDependencies);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
325	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  this.inlinedNewDependencies);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkNotNull(compiler,  this.inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkNotNull(compiler,  this.inlinedNewDependencies);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
326	[BUG]  [BUGGY]  Predicates.checkState(compiler  ==  null);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkState(compiler  ==  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
327	[BUG]  [BUGGY]  Predicates.checkState(this.inlinedNewDependencies!=  null);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkState(this.inlinedNewDependencies!=  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkState(this.inlinedNewDependencies!=  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
328	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  expected)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  expected)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  expected)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
329	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
330	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
331	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedCfgNode)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedCfgNode)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
332	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  expected)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  expected)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  expected)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
333	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  true)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  true)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  true)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
334	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  null)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  null)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
335	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  true)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  true)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  true)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlineNewDependencies)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
336	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
337	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
338	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
339	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
340	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  true)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  true)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  true)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
341	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  false)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  false)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  false)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
342	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  expected)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  expected)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  expected)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
343	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
344	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
345	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.FOR)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.FOR)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.FOR)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
346	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  long  serialVersion)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  long  serialVersion)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  long  serialVersion)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
347	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXTENDS)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXTENDS)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXTENDS)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
348	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
349	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
350	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  candidates,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  candidates,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collection  candidates,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
351	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
352	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  expected)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  expected)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  expected)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
353	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.exception)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.exception)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
354	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
355	[BUG]  [BUGGY]  AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  inlinedNewDependencies);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  inlinedNewDependencies);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
356	[BUG]  [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(compiler,  numUseWithinUseCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
357	[BUG]  [BUGGY]  AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  reachingUses);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  reachingUses);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
358	[BUG]  [BUGGY]  AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  varName,  inlinedNewDependencies);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  varName,  inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  varName,  inlinedNewDependencies);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
359	[BUG]  [BUGGY]  AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  candidates);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  candidates);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(cfg,  numUseWithinUseCfgNode,  candidates);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
360	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  varName,  inlinedNewDependencies);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  varName,  inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  varName,  inlinedNewDependencies);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
361	[BUG]  [BUGGY]  AssertionFailedToInline(cfg,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(cfg,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(cfg,  numUseWithinUseCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
362	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  ';'  expected	60	None	replace
363	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  SIDE_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  SIDE_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  SIDE_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
364	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  MISSING_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  MISSING_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  MISSING_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
365	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
366	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
367	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
368	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  this.numUseWithinUseCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
369	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    WarningFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
370	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    WarningFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	66	None	replace
371	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedException  warning)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedException  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedException  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    WarningFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
372	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  error)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    WarningFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
373	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AssertionFailedError  warning,  AbstractCompiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AssertionFailedError  warning,  AbstractCompiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AssertionFailedError  warning,  AbstractCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    WarningFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
374	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  ';'  expected	98	None	replace
375	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
376	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  target)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  ';'  expected	98	None	replace
377	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
378	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
379	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  List  candidates)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  List  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  List  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
380	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
381	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies)    {    	non-compiled	[CE]  ';'  expected	69	None	replace
382	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
383	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  exception)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
384	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.exception)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
385	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  exception)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
386	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidate)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidate)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
387	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  candidate)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
388	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  candidate)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
389	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  exception)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    exception)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
390	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  this.exception)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  this.exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  this.exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
391	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedObject  exception)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedObject  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  AssertionFailedObject  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
392	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  conn)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  conn)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  conn)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
393	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  exception)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
394	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  instance)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
395	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  this.instance)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  this.instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  this.instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
396	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  field)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  field)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  field)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
397	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  <?>)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  <?>)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  <?>)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
398	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
399	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
400	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
401	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
402	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
403	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
404	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
405	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  this.inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  this.inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
406	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  warning)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  warning)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
407	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  exception)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
408	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
409	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Predicate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
410	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  Predicate>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  Predicate>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  List  <  Predicate>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
411	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates,  Predicate  exception)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates,  Predicate  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates,  Predicate  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
412	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
413	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
414	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
415	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
416	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata,  reachingUses);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(defMetadata,  reachingUses);	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  ';'  expected	79	None	replace
417	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(useCfgNode,  defMetadata);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(useCfgNode,  defMetadata);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(useCfgNode,  defMetadata);	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  ';'  expected	79	None	replace
418	[BUG]  [BUGGY]  NodeUtil.removeChild(defMetadata);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.removeChild(defMetadata);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.removeChild(defMetadata);	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  ';'  expected	79	None	replace
419	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(devMetadata,  reachingUses);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(devMetadata,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(devMetadata,  reachingUses);	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  ';'  expected	79	None	replace
420	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(goingDependencies);  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(goingDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(goingDependencies);	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  ';'  expected	79	None	replace
421	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
422	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  this.cfgNode)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  this.cfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  this.cfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
423	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  isMetadata)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  isMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  isMetadata)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
424	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
425	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
426	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
427	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ';'  expected	88	None	replace
428	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  Integer.MAX_VALUE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  Integer.MAX_VALUE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
429	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EXPR_RESULT,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EXPR_RESULT,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler.EXPR_RESULT,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
430	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
431	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collection  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collection  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collection  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
432	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
433	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
434	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
435	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
436	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  SIDE_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
437	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  MISSING_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  MISSING_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  MISSING_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
438	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
439	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  isEnabled)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  isEnabled)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  isEnabled)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
440	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  Annotate.DEFAULT)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  Annotate.DEFAULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  Annotate.DEFAULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
441	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidates)    {    	non-compiled	[CE]  ';'  expected	82	None	replace
442	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  AbstractCompiler>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  AbstractCompiler>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  AbstractCompiler>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
443	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  candidates,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
444	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
445	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
446	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
447	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.compiler,  this.warning)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.compiler,  this.warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.compiler,  this.warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
448	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  this.warning)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  this.warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  this.warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
449	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningException  warning)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningException  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningException  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
450	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
451	[BUG]  [BUGGY]  InlinedNewDependencies  if(numUseWithinUseCfgNode  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  InlinedNewDependencies  if(numUseWithinUseCfgNode  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	InlinedNewDependencies  if(numUseWithinUseCfgNode  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  not  a  statement	16	None	replace
452	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  ==  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(numUseWithinUseCfgNode  ==  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  ==  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
453	[BUG]  [BUGGY]  InlinedNewDependencies  inlinedNewDependencies  =  Lists.newArrayList();  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  InlinedNewDependencies  inlinedNewDependencies  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	InlinedNewDependencies  inlinedNewDependencies  =  Lists.newArrayList();	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
454	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  >=  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  if(numUseWithinUseCfgNode  >=  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  >=  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
455	[BUG]  [BUGGY]  InlinedNewDependencies  if(numUseWithinUseCfgNode  <  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  InlinedNewDependencies  if(numUseWithinUseCfgNode  <  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	InlinedNewDependencies  if(numUseWithinUseCfgNode  <  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  not  a  statement	16	None	replace
456	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
457	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
458	[BUG]  [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(compiler,  numUseWithinUseCfgNode)  {	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
459	[BUG]  [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode,  reachingUses);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToInline(compiler,  numUseWithinUseCfgNode,  reachingUses);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToInline(compiler,  numUseWithinUseCfgNode,  reachingUses);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
460	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
461	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  this);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeTraversal.traverse(compiler,  this);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
462	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Sets.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Sets.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Sets.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
463	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Lists.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Lists.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Lists.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
464	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  ';'  expected	109	None	replace
465	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
466	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  SIDE_EFFECT_PREDICATE,  numUseWithinUseCfgNode));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  SIDE_EFFECT_PREDICATE,  numUseWithinUseCfgNode));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  SIDE_EFFECT_PREDICATE,  numUseWithinUseCfgNode));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
467	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses,  SIDE_EFFECT_PREDICATE));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses,  SIDE_EFFECT_PREDICATE));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses,  SIDE_EFFECT_PREDICATE));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
468	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingDef));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingDef));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingDef));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
469	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses));  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  reachingUses));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
470	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingDef));  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingDef));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE,  reachingDef));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
471	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  predicate,  SIDE_EFFECT_PREDICATE));  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  predicate,  SIDE_EFFECT_PREDICATE));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  predicate,  SIDE_EFFECT_PREDICATE));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
472	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  predicate));  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  predicate));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  predicate));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
473	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidate)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidate)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
474	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  List  candidate)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  List  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  List  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
475	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
476	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
477	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this.cfgNode)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this.cfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this.cfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
478	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
479	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
480	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
481	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  this.instance)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  this.instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  this.instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
482	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  case)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  case)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
483	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  inline)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  inline)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  inline)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
484	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
485	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
486	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  ';'  expected	32	None	replace
487	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
488	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  collection.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  collection.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  collection.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
489	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
490	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
491	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  0);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  0);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  0);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
492	[BUG]  [BUGGY]  AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
493	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  SIDE_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  SIDE_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  SIDE_EFFECT_PREDICATE);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
494	[BUG]  [BUGGY]  AssertionFailedError.checkNotNull(inlinedNewDependencies);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkNotNull(inlinedNewDependencies);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkNotNull(inlinedNewDependencies);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
495	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode!=  0);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode!=  0);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinUseCfgNode!=  0);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
496	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  1);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  1);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinUseCfgNode  ==  1);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
497	[BUG]  [BUGGY]  AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfg,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
498	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(def,  reachingDef);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(def,  reachingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(def,  reachingDef);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  ';'  expected	78	None	replace
499	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(def)&&!NodeUtil.mayHaveSideEffects(def);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(def)&&!NodeUtil.mayHaveSideEffects(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(def)&&!NodeUtil.mayHaveSideEffects(def);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  not  a  statement	78	None	replace
500	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(def)&&  NodeUtil.mayHaveSideEffects(def);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(def)&&  NodeUtil.mayHaveSideEffects(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(def)&&  NodeUtil.mayHaveSideEffects(def);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  not  a  statement	78	None	replace
501	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(def)&&  numUseWithinUseCfgNode  >=  def.numUseWithinUseCfgNode;  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(def)&&  numUseWithinUseCfgNode  >=  def.numUseWithinUseCfgNode;  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(def)&&  numUseWithinUseCfgNode  >=  def.numUseWithinUseCfgNode;	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  not  a  statement	78	None	replace
502	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode!=  SIDE_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode!=  SIDE_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinUseCfgNode!=  SIDE_EFFECT_PREDICATE);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
503	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinCfgNode  ==  0);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinCfgNode  ==  0);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinCfgNode  ==  0);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
504	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
505	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlineNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlineNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  inlineNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
506	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
507	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Compiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
508	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
509	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlineAssertionFailedError  warning)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlineAssertionFailedError  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlineAssertionFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
510	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  AssertionFailedError  warning)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  AssertionFailedError  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  AssertionFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
511	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  warning)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedCfgNode,  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
512	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
513	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
514	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  missingDependencies)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  missingDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  inlinedNewDependencies,  missingDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
515	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField.class)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
516	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  target)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
517	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField.this.instance)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField.this.instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField.this.instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
518	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  example)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  example)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedField  example)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
519	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineCfgNode)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineCfgNode)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlineNewDependencies)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
520	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineDependencies,  reachingUses)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlineDependencies,  reachingUses)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlineNewDependencies)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
521	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinUseCfgNode);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
522	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(defMetadata);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(defMetadata);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayList(defMetadata);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
523	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(compiler))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(compiler))  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(compiler))  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
524	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(compiler),  this)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(compiler),  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(compiler),  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
525	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  predicate,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  predicate,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  predicate,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
526	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  predicate,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  predicate,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  predicate,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
527	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
528	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    predicate)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
529	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.cfgNode)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.cfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  this.cfgNode)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlines)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
530	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Candidate  candidate)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Candidate  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Candidate  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
531	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  exception)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
532	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  sourceName,  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  sourceName,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  sourceName,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
533	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  DEF_METADATA,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  DEF_METADATA,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  DEF_METADATA,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
534	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  numUseWithinUseCfgNode));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  numUseWithinUseCfgNode));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  NUMBER_EFFECT_PREDICATE,  numUseWithinUseCfgNode));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
535	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  DEF_METADATA,  SIDE_EFFECT_PREDICATE));  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  DEF_METADATA,  SIDE_EFFECT_PREDICATE));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  DEF_METADATA,  SIDE_EFFECT_PREDICATE));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
536	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  reachingUses)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  reachingUses)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
537	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.NAME)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.NAME)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.NAME)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
538	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  WarningFailedError  warning)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  WarningFailedError  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  WarningFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
539	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
540	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptySet())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
541	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  DEF_METADATA,  NUMBER_EFFECT_PREDICATE);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  DEF_METADATA,  NUMBER_EFFECT_PREDICATE);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  DEF_METADATA,  NUMBER_EFFECT_PREDICATE);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    NUMBER_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	103	None	replace
542	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE,  reachingDef);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE,  reachingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE,  reachingDef);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    NUMBER_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	103	None	replace
543	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedElement  warning)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedElement  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedElement  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    WarningFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
544	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.EMPTY_LIST_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
545	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(candidates))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(candidates))  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  IASTNodeTraversal.traverse(candidates))  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
546	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedToBeReachingVariables  candidates)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedToBeReachingVariables  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedToBeReachingVariables  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
547	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrors.this)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrors.this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrors.this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
548	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
549	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  startingDef)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  startingDef)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  startingDef)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
550	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  scope)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  scope)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  scope)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
551	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  missingDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  missingDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  missingDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
552	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  this)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
553	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  Enum.class)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  Enum.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT,  Enum.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
554	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
555	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
556	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterException  exception)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterException  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
557	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineException  instance)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineException  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineException  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
558	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterType  exception)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterType  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterType  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
559	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.EMPTY_LIST)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.EMPTY_LIST)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.EMPTY_LIST)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
560	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.EMPTY_LIST)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.EMPTY_LIST)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.EMPTY_LIST)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
561	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  this.warning)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  this.warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  this.warning)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
562	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.ERROR,  warning)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.ERROR,  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError.ERROR,  warning)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
563	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
564	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
565	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  CandidateFactory  candidateFactory)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  CandidateFactory  candidateFactory)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  CandidateFactory  candidateFactory)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
566	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  CandidatePair.this)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  CandidatePair.this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  CandidatePair.this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
567	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  threshold)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  threshold)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  threshold)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
568	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Node>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Node>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  Node>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
569	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicates.  <  P>this)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicates.  <  P>this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicates.  <  P>this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
570	[BUG]  [BUGGY]  Predicate.checkNotNull(compiler,  reachingDef);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Predicate.checkNotNull(compiler,  reachingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkNotNull(compiler,  reachingDef);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
571	[BUG]  [BUGGY]  Predicate.checkState(this.inlinedNewDependencies  ==  null);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  Predicate.checkState(this.inlinedNewDependencies  ==  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkState(this.inlinedNewDependencies  ==  null);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
572	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlineNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlineNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlineNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
573	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
574	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  defMetadata)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  defMetadata)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
575	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  def)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  def)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  def)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
576	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies),  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies),  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies),  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
577	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
578	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  comp)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  comp)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  comp)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
579	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
580	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  predicate,  target)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  predicate,  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  predicate,  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
581	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  int  numUseWithinUseCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  int  numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  target,  int  numUseWithinUseCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
582	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedLineError.class)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedLineError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedLineError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException.class)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
583	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedException.class)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedException.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedException.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException.class)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
584	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  instance)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
585	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterType  instance)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterType  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterType  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
586	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  int  numUseWithinUseCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  int  numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  int  numUseWithinUseCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    final    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
587	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  int  numUseWithinCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  int  numUseWithinCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  int  numUseWithinCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    final    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
588	[BUG]  [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
589	[BUG]  [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates.add(compiler);  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates.add(compiler);  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates.add(compiler);  }	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
590	[BUG]  [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates.addAll(inlinedNewDependencies);  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates.addAll(inlinedNewDependencies);  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates.addAll(inlinedNewDependencies);  }	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
591	[BUG]  [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates  =  Lists.newArrayList();  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  candidates  =  Lists.newArrayList();  }	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
592	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Predicate  inlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Predicate  inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Predicate  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
593	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinerCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinerCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinerCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
594	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicates.  <  Node>  inlinedCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicates.  <  Node>  inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicates.  <  Node>  inlinedCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
595	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
596	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter.class)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
597	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  defMetadata)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  defMetadata)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
598	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
599	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingUses)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingUses)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
600	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.target)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
601	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  error,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  error,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  error,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
602	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  error)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
603	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  error)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
604	[BUG]  [BUGGY]  AssertionFailedError.checkNotNull(def);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkNotNull(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkNotNull(def);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
605	[BUG]  [BUGGY]  NodeUtil.removeDependency(def);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.removeDependency(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.removeDependency(def);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
606	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode  >=  0);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinUseCfgNode  >=  0);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinUseCfgNode  >=  0);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
607	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  List  candidates)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  List  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  List  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
608	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
609	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
610	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedCfgNode,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedCfgNode,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedCfgNode,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
611	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
612	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  param)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  param)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  param)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedParameter    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
613	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Lists.  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Lists.  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Lists.  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
614	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.cfgNode,  this.warning)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.cfgNode,  this.warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.cfgNode,  this.warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
615	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
616	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  as)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  as)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  as)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
617	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter.DEFAULT_EXTENDS)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter.DEFAULT_EXTENDS)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter.DEFAULT_EXTENDS)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
618	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
619	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
620	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  NodeUtil.mayHaveSideEffects(candidates))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  NodeUtil.mayHaveSideEffects(candidates))  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  NodeUtil.mayHaveSideEffects(candidates))  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
621	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Collections.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Collections.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
622	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
623	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
624	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  predicate,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  predicate,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  predicate,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
625	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.DEFAULT_PREDICATE,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.DEFAULT_PREDICATE,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Predicate.DEFAULT_PREDICATE,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
626	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  defMetadata)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  defMetadata)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
627	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
628	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  null)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  null)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
629	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  this.cfgNode)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
630	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicates.  <  Token>  this)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicates.  <  Token>  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicates.  <  Token>  this)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
631	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicates.  <  Integer>  this)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicates.  <  Integer>  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Predicates.  <  Integer>  this)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
632	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
633	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
634	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.NAME)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Token.NAME)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
635	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
636	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  instance)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedType  instance)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
637	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  exception)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
638	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  reachingUses)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  reachingUses)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
639	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  defMetadata)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  defMetadata)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
640	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
641	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlineException)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlineException)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlineException)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
642	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Token.FAIL)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Token.FAIL)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Token.FAIL)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
643	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  numUseWithinUseCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  numUseWithinUseCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
644	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptySet())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Set    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
645	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  AbstractCompiler  compiler)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  AbstractCompiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  AbstractCompiler  compiler)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
646	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE,  reachingDef);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE,  reachingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE,  reachingDef);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    MISSING_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	102	None	replace
647	[BUG]  [BUGGY]  InlinedNewDependencies  if(numUseWithinUseCfgNode  ==  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  InlinedNewDependencies  if(numUseWithinUseCfgNode  ==  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	InlinedNewDependencies  if(numUseWithinUseCfgNode  ==  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  not  a  statement	16	None	replace
648	[BUG]  [BUGGY]  if(numUseWithinUseCfgNode  >  1)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(numUseWithinUseCfgNode  >  1)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(numUseWithinUseCfgNode  >  1)  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
649	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  Collections.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
650	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Collections.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Collections.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Collections.    <    String>emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
651	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedUseCfgNode,  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedUseCfgNode,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedUseCfgNode,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
652	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  init)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  init)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
653	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  init)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  init)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
654	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EMPTY_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EMPTY_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EMPTY_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
655	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.FUNCTION)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.FUNCTION)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
656	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  comp)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  comp)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  comp)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    SummaryCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
657	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinCfgNode!=  0);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinCfgNode!=  0);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinCfgNode!=  0);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
658	[BUG]  [BUGGY]  AssertionFailedError.checkState(numUseWithinCfgNode  ==  1);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(numUseWithinCfgNode  ==  1);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(numUseWithinCfgNode  ==  1);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
659	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  target)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
660	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  inferDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  inferDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  inferDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
661	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.newArrayList())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.newArrayList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.newArrayList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
662	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
663	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
664	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
665	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
666	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
667	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  Token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedCfgNode,  Token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
668	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Byte.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Byte.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Byte.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
669	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  Integer.MAX_VALUE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  Integer.MAX_VALUE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
670	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  declaration,  AssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  declaration,  AssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  declaration,  AssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
671	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedException.class)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedException.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedException.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
672	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  InlineAssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  InlineAssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  InlineAssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
673	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  this.inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  this.inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
674	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  NodeTraversal.traverse(candidates))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  NodeTraversal.traverse(candidates))  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  NodeTraversal.traverse(candidates))  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    <    Candidate>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
675	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
676	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
677	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlineCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlineCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlineCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
678	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
679	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
680	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
681	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  warning,  AssertionFailedError)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  warning,  AssertionFailedError)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  warning,  AssertionFailedError)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
682	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AxisFailedError  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AxisFailedError  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AxisFailedError  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
683	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  null)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
684	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  NodeTraversal.traverse(compiler,  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeTraversal.traverse(compiler,	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
685	[BUG]  [BUGGY]  AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
686	[BUG]  [BUGGY]  AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
687	[BUG]  [BUGGY]  AssertionFailedError.make(numUseWithinUseCfgNode,  startingDef))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(numUseWithinUseCfgNode,  startingDef))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(numUseWithinUseCfgNode,  startingDef))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
688	[BUG]  [BUGGY]  AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compil  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compil  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(numUseWithinUseCfgNode,  0))  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  compiler.traverse(compil	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
689	[BUG]  [BUGGY]  AssertionFailedToTraverse.traverse(compiler,  [CE]  illegal  start  of  expression  [FE]                                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse.traverse(compiler,  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse.traverse(compiler,	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
690	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList())  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList())  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
691	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Integer>  candidates)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Integer>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Integer>  candidates)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
692	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
693	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
694	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  missingDependencies)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  missingDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  missingDependencies)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
695	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.exception)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
696	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  inlineNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  inlineNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  inlineNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
697	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.sourceName,  exception)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.sourceName,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  this.sourceName,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
698	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineAssertionFailedWarning  warning)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineAssertionFailedWarning  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlineAssertionFailedWarning  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedWarning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
699	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
700	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.newArrayList  <  String>(candidates))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.newArrayList  <  String>(candidates))  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.newArrayList  <  String>(candidates))  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
701	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.newArrayList  <  String>())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.newArrayList  <  String>())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Lists.newArrayList  <  String>())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
702	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  varName)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  varName)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  varName)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
703	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  toBeReachingVariable)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  toBeReachingVariable)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  toBeReachingVariable)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
704	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  toBeReachingVariables)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  toBeReachingVariables)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  toBeReachingVariables)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
705	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  target)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
706	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata)&&!NodeUtil.mayHaveSideEffects(def);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata)&&!NodeUtil.mayHaveSideEffects(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(defMetadata)&&!NodeUtil.mayHaveSideEffects(def);	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  not  a  statement	79	None	replace
707	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata)||  numUseWithinUseCfgNode  ==  1;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata)||  numUseWithinUseCfgNode  ==  1;  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(defMetadata)||  numUseWithinUseCfgNode  ==  1;	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  not  a  statement	79	None	replace
708	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata)&&  numUseWithinUseCfgNode  >  0;  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata)&&  numUseWithinUseCfgNode  >  0;  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(defMetadata)&&  numUseWithinUseCfgNode  >  0;	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  not  a  statement	79	None	replace
709	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata)&&  numUseWithinUseCfgNode  ==  1;  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayHaveSideEffects(defMetadata)&&  numUseWithinUseCfgNode  ==  1;  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayHaveSideEffects(defMetadata)&&  numUseWithinUseCfgNode  ==  1;	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  not  a  statement	79	None	replace
710	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  reachingDef);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkNotNull(compiler,  reachingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkNotNull(compiler,  reachingDef);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
711	[BUG]  [BUGGY]  AssertionFailedError.checkState(compiler!=  null);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.checkState(compiler!=  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
712	[BUG]  [BUGGY]  Predicates.checkArgument(compiler!=  null);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkArgument(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkArgument(compiler!=  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
713	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
714	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  numUseWithinUseCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  numUseWithinUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  numUseWithinUseCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
715	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  inlines)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  inlines)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  inlines)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
716	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
717	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedUseCfgNode)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedUseCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedUseCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
718	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedTreeDependencies)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedTreeDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedTreeDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
719	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedFunctionDependencies)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedFunctionDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedFunctionDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
720	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedReachingDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedReachingDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedReachingDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
721	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  exception)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  exception)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
722	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
723	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  defMetadata)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  defMetadata)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    null)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
724	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  null,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    null)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
725	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  mapping)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  mapping)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  mapping)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    null)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
726	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedCharacters)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedCharacters)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedCharacters)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
727	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlineCfgNode)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlineCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlineCfgNode)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
728	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedMetadata)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.inlinedNewDependencies,  inlinedMetadata)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
729	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Collections.  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
730	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedDependencies,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
731	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  Set  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  Set  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
732	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates,  boolean  useCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates,  boolean  useCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates,  boolean  useCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
733	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception),  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception),  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception),  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
734	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception,  int  numUseWithinCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception,  int  numUseWithinCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  exception,  int  numUseWithinCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
735	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler),  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler),  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler),  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    SummaryCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
736	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler),  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler),  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler),  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    SummaryCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
737	[BUG]  [BUGGY]  private  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  private  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	private  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  SummaryCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    SummaryCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
738	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  fork)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  fork)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  fork)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
739	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
740	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Node>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Node>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Node>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Set    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
741	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  inferred)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  inferred)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameter  inferred)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedParameter    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
742	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedParameter  instance)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedParameter  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotatedParameter  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedParameter    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
743	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
744	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Annotation.DEFAULT)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Annotation.DEFAULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  Annotation.DEFAULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
745	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedDependencyException)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedDependencyException)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning,  InlinedDependencyException)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
746	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
747	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  NUM_EFFECT_PREDICATE,  numUseWithinUseCfgNode));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  NUM_EFFECT_PREDICATE,  numUseWithinUseCfgNode));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  NUM_EFFECT_PREDICATE,  numUseWithinUseCfgNode));	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE));    	non-compiled	[CE]  ';'  expected	104	None	replace
748	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedParameter  warning)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedParameter  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  WarningFailedParameter  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    WarningFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
749	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Predicate  exception)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Predicate  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Predicate  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
750	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.FOR)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.FOR)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidates,  inlinedNewDependencies,  Token.FOR)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
751	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  startingDef)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  startingDef)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedCfgNode,  startingDef)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
752	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  int  numUseWithinCfgNode)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  int  numUseWithinCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  int  numUseWithinCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
753	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  sourceName,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    sourceName,    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
754	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  token.EMPTY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  token.EMPTY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
755	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  this)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
756	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  Annotate.DEFAULT)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  Annotate.DEFAULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Token.EMPTY,  Annotate.DEFAULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Token.EMPTY)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
757	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  case)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  case)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  case)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    case)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
758	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  InlinedDependencies  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  InlinedDependencies  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  InlinedDependencies  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
759	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  InlinedDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  InlinedDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  InlinedDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
760	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AnnotationFailedError  warning,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
761	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies,  Predicate  predicate)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies,  Predicate  predicate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  inlinedNewDependencies,  Predicate  predicate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
762	[BUG]  [BUGGY]  if(inlinedNewDependencies  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  if(inlinedNewDependencies  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(inlinedNewDependencies  >  0)  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
763	[BUG]  [BUGGY]  InlinedNewDependencies  =  Lists.newArrayList();  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  InlinedNewDependencies  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	InlinedNewDependencies  =  Lists.newArrayList();	  if(numUseWithinUseCfgNode    >    0)    {    inlinedNewDependencies    =    Lists.newArrayList();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
764	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterImpl)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterImpl)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterImpl)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
765	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter);	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
766	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter),  this)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter),  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter),  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedCharacter)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
767	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  error)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
768	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  error)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  error)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacter  error)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    error)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
769	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
770	[BUG]  [BUGGY]  AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
771	[BUG]  [BUGGY]  AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
772	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
773	[BUG]  [BUGGY]  AssertionFailedError.show(inlinedNewDependencies,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.show(inlinedNewDependencies,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.show(inlinedNewDependencies,  numUseWithinUseCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
774	[BUG]  [BUGGY]  AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode)  {  for(int  i  =  1;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
775	[BUG]  [BUGGY]  AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToUse(inlinedNewDependencies,  numUseWithinUseCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    1;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	17	None	replace
776	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
777	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  exception,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
778	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this.exception)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this.exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this.exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
779	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  astNode,  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  astNode,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  astNode,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
780	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  in)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  in)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  in)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
781	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  in,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  in,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  in,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
782	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    candidate)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
783	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  3);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  3);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  3);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	101	None	replace
784	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  DEF_METADATA);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  DEF_METADATA);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  DEF_METADATA);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    SIDE_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	101	None	replace
785	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  candidates)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	86	None	replace
786	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  Node>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  Node>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Set  <  Node>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    List    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
787	[BUG]  [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
788	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
789	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compil	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
790	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses.size())  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses.size())  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses.size())  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(comp	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
791	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses.size())  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses.size())  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode,  reachingUses.size())  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
792	[BUG]  [BUGGY]  AssertionFailedError.show(inlinedNewDependencies,  numUseWithinCfgNode);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.show(inlinedNewDependencies,  numUseWithinCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.show(inlinedNewDependencies,  numUseWithinCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    this);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
793	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate.class)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate.class)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
794	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate  execution)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate  execution)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Predicate  execution)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
795	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies,  AssertionFailedError  warning)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies,  AssertionFailedError  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies,  AssertionFailedError  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
796	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedException  warning)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedException  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedException  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
797	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    AssertionFailedError    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
798	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  warning,  AssertionFailedError.class,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    AssertionFailedError.class)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
799	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidateList)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidateList)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  candidateList)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collection    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
800	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance,  int  numUseWithinCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance,  int  numUseWithinCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  instance,  int  numUseWithinCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
801	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  example)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  example)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedFieldType  example)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedFieldType    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
802	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate  exception)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
803	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate  execution)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate  execution)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedDependencies  inlinedNewDependencies,  Predicate  execution)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedDependencies    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
804	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    exception)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
805	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterException  exception)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterException  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
806	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception),  this)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception),  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  exception),  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
807	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCharacters)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCharacters)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  inlinedCharacters)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
808	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies,  exception)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies,  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies,  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
809	[BUG]  [BUGGY]  private  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	private  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  final  Compiler  compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    final    Compiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
810	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    exception)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
811	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.defMetadata)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  this.defMetadata)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
812	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  DEF_METADATA)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  DEF_METADATA)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME,  DEF_METADATA)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate.DEFAULT_NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
813	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  reachingUses)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  reachingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  reachingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
814	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  missingDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  missingDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  missingDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
815	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  closingDependencies)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  closingDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  closingDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
816	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  checkingDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  checkingDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  checkingDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    warning,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
817	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.newHashSet())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.newHashSet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Sets.newHashSet())  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
818	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_INLINE_PREDICATE)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_INLINE_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_INLINE_PREDICATE)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
819	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE,  startingDef);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE,  startingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  NUMBER_EFFECT_PREDICATE,  startingDef);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    NUMBER_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	103	None	replace
820	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  assertionFailedError,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  assertionFailedError,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  assertionFailedError,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
821	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedDependencies,  inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedDependencies,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  InlinedDependencies,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
822	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
823	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  this)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler,  AssertionFailedError,  inlinedNewDependencies,  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler,    AssertionFailedError,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
824	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException.class,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException.class)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
825	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
826	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Set  <  String>  candidates)  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
827	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.  <  String>emptyList())  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
828	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.emptySet())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  Collections.emptySet())  {	  Public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	43	None	replace
829	[BUG]  [BUGGY]  Predicate.checkState(this.inlinedNewDependencies!=  null);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Predicate.checkState(this.inlinedNewDependencies!=  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicate.checkState(this.inlinedNewDependencies!=  null);	  Predicate.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	76	None	replace
830	[BUG]  [BUGGY]  Context.report(JSError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Context.report(JSError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Context.report(JSError.make(cfgNode,  numUseWithinUseCfgNode,  SIDE_EFFECT_PREDICATE));	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
831	[BUG]  [BUGGY]  AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(inlinedNewDependencies,  numUseWithinUseCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
832	[BUG]  [BUGGY]  AssertionFailedError.make(inlinedNewDependencies.size(),  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(inlinedNewDependencies.size(),  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(inlinedNewDependencies.size(),  numUseWithinUseCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
833	[BUG]  [BUGGY]  AssertionFailedError.show(compiler,  numUseWithinUseCfgNode);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.show(compiler,  numUseWithinUseCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.show(compiler,  numUseWithinUseCfgNode);	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    Compiler.reportCodeChange();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
834	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  defMetadata)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies,  inlinedNewDependencies,  defMetadata)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
835	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this.goingUses)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this.goingUses)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this.goingUses)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
836	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  inlinedCfgNode,  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    inlinedCfgNode)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
837	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(def);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.redeclareVarsInsideBranch(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.redeclareVarsInsideBranch(def);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
838	[BUG]  [BUGGY]  NodeUtil.redeclareVars(def,  cfgNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.redeclareVars(def,  cfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.redeclareVars(def,  cfgNode);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
839	[BUG]  [BUGGY]  NodeUtil.redeclareVars(def);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.redeclareVars(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.redeclareVars(def);	  NodeUtil.isFunctionDeclaration(def);    	non-compiled	[CE]  ';'  expected	74	None	replace
840	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
841	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  SIDE_EFFECT_PREDICATE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  SIDE_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.emptyList(),  SIDE_EFFECT_PREDICATE)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.emptyList())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
842	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionField  instance)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionField  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionField  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
843	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionPailedField  instance)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionPailedField  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionPailedField  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedField    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
844	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
845	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  param)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  param)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  param)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
846	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedElement  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedElement)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
847	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  null)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  null)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
848	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  scope)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  scope)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  scope)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
849	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  this)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Token.EXPR_RESULT,  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
850	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  numUseWithinCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  numUseWithinCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  numUseWithinCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
851	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  final  int  numUseWithinCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  final  int  numUseWithinCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  final  int  numUseWithinCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
852	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.  <  String>  candidates,  int  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
853	[BUG]  [BUGGY]  Predicates.checkState(this.inlinedNewDependencies  ==  null);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkState(this.inlinedNewDependencies  ==  null);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkState(this.inlinedNewDependencies  ==  null);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
854	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  varName);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Predicates.checkNotNull(compiler,  varName);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Predicates.checkNotNull(compiler,  varName);	  Predicates.checkNotNull(compiler);    	non-compiled	[CE]  ';'  expected	75	None	replace
855	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  invocation)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  invocation)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  invocation)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
856	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  instance)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedObject    instance)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
857	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  InlinedNewDependencies  inlinedNewDependencies,  Collections.  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    InlinedNewDependencies    inlinedNewDependencies,    Set    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
858	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
859	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  InlineAssertionFailedError.class)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  InlineAssertionFailedError.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Warning  warning,  InlineAssertionFailedError.class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Warning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
860	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  List  candidates)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  List  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  inlinedNewDependencies,  List  candidates)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
861	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  foreground)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  foreground)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  foreground)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    null)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
862	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  defMetadata)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  defMetadata)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
863	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  candidates)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  candidates)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
864	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  missingDependencies)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  missingDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  missingDependencies)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
865	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  startingDef)  {	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
866	[BUG]  [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDe  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDe  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDe	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
867	[BUG]  [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNew  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNew  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNew	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
868	[BUG]  [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinCfgNode;  ++i)  {  candidates.add(inlinedNewDe  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinCfgNode;  ++i)  {  candidates.add(inlinedNewDe  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinCfgNode;  ++i)  {  candidates.add(inlinedNewDe	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
869	[BUG]  [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDep  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDep  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDep	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
870	[BUG]  [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDependencies[i]);  }  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDependencies[i]);  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	int  numUseWithinUseCfgNode  =  inlinedNewDependencies.size();  for(int  i  =  0;  i  <  numUseWithinUseCfgNode;  ++i)  {  candidates.add(inlinedNewDependencies[i]);  }	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    ++i)    {    candidates.add(inlinedNewDependencies[i]);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
871	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedToBeReachingVariables.class)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedToBeReachingVariables.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedToBeReachingVariables.class)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
872	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler),  this.inlinedNewDependencies)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler),  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AbstractCompiler  compiler),  this.inlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
873	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.servning,  this.warning)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.servning,  this.warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.servning,  this.warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
874	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.callback)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.callback)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.callback)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
875	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  this.warning,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    this.warning)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
876	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  reachingUses,  Predicate  target)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  reachingUses,  Predicate  target)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate  reachingUses,  Predicate  target)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    Predicate    target)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
877	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  instance)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    instance)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
878	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Class  <?>  class)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Class  <?>  class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Class  <?>  class)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AbstractCompiler    instance)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
879	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    warning)    {    	non-compiled	[CE]  ';'  expected	91	None	replace
880	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  Predicate  exception)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  Predicate  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  Predicate  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
881	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
882	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedException  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedException    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
883	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  defMetadata)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  defMetadata)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  defMetadata)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
884	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.inlinedCfgNode)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.inlinedCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  this.inlinedCfgNode)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
885	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  Predicate.DEFAULT_NAME)  {	  Public    FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
886	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
887	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Collections.  <  String>emptySet())  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Collections.  <  String>emptySet())  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
888	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Token.BLOCK)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  InlinedCfgNode  inlinedNewDependencies,  Token.BLOCK)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlinedNewDependencies,    InlinedCfgNode    inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
889	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Class  <?>  candidates)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Class  <?>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Class  <?>  candidates)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidates)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
890	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(Compiler  compiler,  AbstractCompiler  compiler)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  ';'  expected	50	None	replace
891	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  IOContext  context)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(Compiler  compiler,  IOContext  context)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(Compiler  compiler,  IOContext  context)  {	  public    FlowSensitiveInlineVariables(Compiler    compiler,    AbstractCompiler    compiler)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
892	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.USE_EFFECT_PREDICATE)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.USE_EFFECT_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.USE_EFFECT_PREDICATE)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlineNewDependencies)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
893	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_FACTOR)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_FACTOR)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_FACTOR)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlineNewDependencies)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
894	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_MASK)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_MASK)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlinedNewDependencies,  Predicate.DEFAULT_MASK)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlineNewDependencies)    {    	non-compiled	[CE]  ';'  expected	83	None	replace
895	[BUG]  [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  inlinedNewDependencies.add(compiler);  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  inlinedNewDependencies.add(compiler);  }  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  inlinedNewDependencies.add(compiler);  }	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
896	[BUG]  [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  ++i)  {	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
897	[BUG]  [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  List  candidates  =  new  ArrayList  <  AbstractCompiler>();  for(int  i  =  0;  i  <  candidates.size();  ++i)  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  List  candidates  =  new  ArrayList  <  AbstractCompiler>();  for(int  i  =  0;  i  <  candidates.size();  ++i)  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	if(!inlinedNewDependencies.contains(compiler))  {  inlinedNewDependencies.add(compiler);  }  else  {  List  candidates  =  new  ArrayList  <  AbstractCompiler>();  for(int  i  =  0;  i  <  candidates.size();  ++i)	  inlinedNewDependencies.add(compiler);    	non-compiled	[CE]  ';'  expected	77	None	replace
898	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinCfgNode);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinCfgNode);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
899	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(numUseWithinCfgNode);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(numUseWithinCfgNode);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	inlinedNewDependencies  =  Lists.newArrayList(numUseWithinCfgNode);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
900	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  instance)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  instance)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedExpr  instance)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    instance)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
901	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.EMPTY_LIST_ARRAY)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
902	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  inlines)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  inlines)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  inlines)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.EMPTY_LIST_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
903	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  InlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Collections.EMPTY_LIST_ARRAY,  InlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Collections.EMPTY_LIST_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
904	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  NodeTraversal.traverse(compiler,  candidates))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  NodeTraversal.traverse(compiler,  candidates))  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  NodeTraversal.traverse(compiler,  candidates))  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    <    Candidate>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
905	[BUG]  [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE,  startingDef);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE,  startingDef);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedError.make(cfgNode,  numUseWithinUseCfgNode,  MISSING_EFFECT_PREDICATE,  startingDef);	  AssertionFailedError.make(cfgNode,    numUseWithinUseCfgNode,    MISSING_EFFECT_PREDICATE);    	non-compiled	[CE]  ';'  expected	102	None	replace
906	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObjectException)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObjectException)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObjectException)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
907	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterException  exception)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterException  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedCharacterException  exception)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
908	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException.class)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException.class)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException.class)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    exception)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
909	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
910	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
911	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  init)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    init)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
912	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedWarning    warning)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
913	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedWarning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
914	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedWarning  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedWarning    warning)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
915	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(compiler,	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
916	[BUG]  [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	AssertionFailedToTraverse(compiler,  numUseWithinUseCfgNode)  {  for(int  i  =  0;  i  <  inlinedNewDependencies.size();  i++)  {  NodeTraversal.traverse(	  if(numUseWithinUseCfgNode    >    0)    {    for(int    i    =    0;    i    <    inlinedNewDependencies.size();    i++)    {    NodeTraversal.traverse(compiler,    	non-compiled	[CE]  ';'  expected	18	None	replace
917	[BUG]  [BUGGY]  NodeUtil.mayEffectMutableState(def);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayEffectMutableState(def);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayEffectMutableState(def);	  NodeUtil.mayHaveSideEffects(def);    	non-compiled	[CE]  ';'  expected	78	None	replace
918	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidate)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidate)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  List  <  Candidate>  candidate)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    List    candidate)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
919	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(defMetadata);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.redeclareVarsInsideBranch(defMetadata);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.redeclareVarsInsideBranch(defMetadata);	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  ';'  expected	79	None	replace
920	[BUG]  [BUGGY]  NodeUtil.mayEffectMutableState(defMetadata);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  NodeUtil.mayEffectMutableState(defMetadata);  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	NodeUtil.mayEffectMutableState(defMetadata);	  NodeUtil.mayHaveSideEffects(defMetadata);    	non-compiled	[CE]  ';'  expected	79	None	replace
921	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedErrorException    exception)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
922	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception),  this)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception),  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedErrorException  exception),  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedErrorException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
923	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObjectException  exception)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObjectException  exception)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObjectException  exception)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedErrorException    exception)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
924	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  this.inlinedNewDependencies)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  this.inlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  this.inlinedNewDependencies)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
925	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ';'  expected	93	None	replace
926	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  this)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  this)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  Token.EXPR_RESULT,  this)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
927	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  int  numUseWithinCfgNode)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  int  numUseWithinCfgNode)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  int  numUseWithinCfgNode)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
928	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  Token.EXPR_RESULT)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  target,  Token.EXPR_RESULT)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    target)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
929	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  warning)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  warning)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject  warning)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
930	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  List  <  String>  candidates)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  ';'  expected	92	None	replace
931	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  assertionFailedError  warning,  List  <  String>  candidates)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  assertionFailedError  warning,  List  <  String>  candidates)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  assertionFailedError  warning,  List  <  String>  candidates)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError    warning,    List    <    String>    candidates)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
932	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  this.compiler)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  this.compiler)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  this.compiler)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
933	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlines)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlines)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  Token.EXPR_RESULT,  inlines)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    Token.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
934	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterTypes)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterTypes)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedParameterTypes)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
935	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedObject)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
936	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  InlinedNewDependencies)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  InlinedNewDependencies)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  InlinedNewDependencies)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlines)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
937	[BUG]  [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  Predicate.DEFAULT_INLINE_PREDICATE)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  Predicate.DEFAULT_INLINE_PREDICATE)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	Public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  inlines,  Predicate.DEFAULT_INLINE_PREDICATE)  {	  Public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    inlines)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
938	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedCharacters)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedCharacters)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlinedCharacters)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
939	[BUG]  [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlines)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlines)  {  [BUGGY]      this.compiler  =  compiler;  }  [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	120	120	3	replace	public  FlowSensitiveInlineVariables(AbstractCompiler  compiler,  AssertionFailedError,  this.inlinedNewDependencies,  inlines)  {	  public    FlowSensitiveInlineVariables(AbstractCompiler    compiler,    AssertionFailedError,    this.inlinedNewDependencies)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
