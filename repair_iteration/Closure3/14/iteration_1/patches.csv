bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(inlinedNewDependencies);	  this.inlinedNewDependencies    =    new    ArrayList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  LinkedHashSet  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  LinkedHashSet  <  AbstractCompiler>();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  LinkedHashSet  <  AbstractCompiler>();	  this.inlinedNewDependencies    =    new    ArrayList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(1);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(1);	  this.inlinedNewDependencies    =    new    ArrayList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(2);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(2);	  this.inlinedNewDependencies    =    new    ArrayList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  candidates);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  candidates);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  candidates);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(this.inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(this.inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(this.inlinedNewDependencies);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  numUseWithinUseCfgNode);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  numUseWithinUseCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  numUseWithinUseCfgNode);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  cfgNode);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  cfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  cfgNode);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  fillCfgNode());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  fillCfgNode());  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  fillCfgNode());	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies  +  1);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies  +  1);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  defMetadata);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  compiler);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  mapping);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  mapping);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  mapping);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlineCfgNode);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlineCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlineCfgNode);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(inlinedNewDependencies);	  this.inlinedNewDependencies    =    new    LinkedList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  java.util.ArrayList  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  java.util.ArrayList  <  AbstractCompiler>();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  java.util.ArrayList  <  AbstractCompiler>();	  this.inlinedNewDependencies    =    new    LinkedList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  TreeSet  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  TreeSet  <  AbstractCompiler>();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  TreeSet  <  AbstractCompiler>();	  this.inlinedNewDependencies    =    new    LinkedList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(1);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(1);	  this.inlinedNewDependencies    =    new    LinkedList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
22	[BUG]  [BUGGY]  inlinedNewDependencies  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Sets.newHashSet();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Sets.newHashSet();	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newLinkedList();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newLinkedList();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newLinkedList();	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
24	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
25	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  inlinedNewDependencies  =  Sets.newHashSet();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  inlinedNewDependencies  =  Sets.newHashSet();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  inlinedNewDependencies  =  Sets.newHashSet();  }	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  System.arraycopy(inlinedNewDependencies,  0,  inlinedNewDe  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  System.arraycopy(inlinedNewDependencies,  0,  inlinedNewDe  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  System.arraycopy(inlinedNewDependencies,  0,  inlinedNewDe	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }	  this.inlinedNewDependencies    =    Lists.newArrayList();    inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  this.inlinedNewDependencies    =    Lists.newArrayList();    inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }	  this.inlinedNewDependencies    =    Lists.newArrayList();    inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  this.inlinedNewDependencies    =    Lists.newArrayList();    inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(inlinedNewDependencies,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(inlinedNewDependencies,  inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(inlinedNewDependencies,  inlinedNewDependencies);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(inlinedNewDependencies);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinUseCfgNode);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinUseCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinUseCfgNode);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(false);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(false);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(false);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(defMetadata);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(defMetadata);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(defMetadata);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinUseCfgNode());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinUseCfgNode());  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinUseCfgNode());	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.emptySet();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.emptySet();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.emptySet();	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST;  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.EMPTY_LIST;	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_SET;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_SET;  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.EMPTY_SET;	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(inlinedNewDependencies);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newLinkedList();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newLinkedList();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newLinkedList();	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(numUseWithinUseCfgNode);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.newArrayList();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.newArrayList();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.newArrayList();	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  reachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  spreadingCandiates);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedDependencies,  reachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  approachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  approachingUses);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  approachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  this.inlinedNewDependencies);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  inlinedNewDependencies,  mapping);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(inlinedNewDependencies,  compiler);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(inlinedNewDependencies,  compiler);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(inlinedNewDependencies,  compiler);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newLinkedHashSet();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newLinkedHashSet();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newLinkedHashSet();	  this.inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newArrayList();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newArrayList();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newArrayList();	  this.inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.newHashSet();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.newHashSet();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.newHashSet();	  this.inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST_LIST;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST_LIST;  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.EMPTY_LIST_LIST;	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
56	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST_ARRAY;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.EMPTY_LIST_ARRAY;  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.EMPTY_LIST_ARRAY;	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  if(this.inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(this.inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(this.inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  inlinedNewDependencies  =  Sets.newHashSet();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  inlinedNewDependencies  =  Sets.newHashSet();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  inlinedNewDependencies  =  Sets.newHashSet();  }	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  for(int  i  =  0;  i  <  inline  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  for(int  i  =  0;  i  <  inline  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  for(int  i  =  0;  i  <  inline	  this.inlinedNewDependencies    =    Lists.newArrayList();    inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  Predicates.checkNotNull(inlinedNewDependencies);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  Predicates.checkNotNull(inlinedNewDependencies);  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  Predicates.checkNotNull(inlinedNewDependencies);  }	  this.inlinedNewDependencies    =    Lists.newArrayList();    inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  reachingUses);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  reachingUses);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  reachingUses);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  startingDef);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  startingDef);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  startingDef);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(1);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(1);	  this.inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSetWithoutCfgNodes();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSetWithoutCfgNodes();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSetWithoutCfgNodes();	  this.inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(0);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newArrayList(0);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(1);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newArrayList(1);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  defMetadata,  inlinedNewDependencies);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlineNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlineNewDependencies,  reachingUses);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  inlineNewDependencies,  reachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
71	[BUG]  [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlineDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables(compiler,  inlineDependencies,  reachingUses);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables(compiler,  inlineDependencies,  reachingUses);	  FlowSensitiveInlineVariables(compiler,    inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(0);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(0);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
73	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(context);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(context);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(context);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
74	[BUG]  [BUGGY]  FlowSensitiveInlineVariables  candidates  =  new  FlowSensitiveInlineVariables();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables  candidates  =  new  FlowSensitiveInlineVariables();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables  candidates  =  new  FlowSensitiveInlineVariables();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
75	[BUG]  [BUGGY]  FlowSensitiveInlineVariables  candidates  =  new  FlowSensitiveInlineVariables(compiler);  candidates.addAll(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  FlowSensitiveInlineVariables  candidates  =  new  FlowSensitiveInlineVariables(compiler);  candidates.addAll(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	FlowSensitiveInlineVariables  candidates  =  new  FlowSensitiveInlineVariables(compiler);  candidates.addAll(inlinedNewDependencies);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  AbstractCompiler>();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  HashSet  <  AbstractCompiler>();  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  HashSet  <  AbstractCompiler>();	  this.inlinedNewDependencies    =    new    LinkedList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
77	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(8);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(8);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(8);	  this.inlinedNewDependencies    =    new    LinkedList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
78	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  numUseWithinCfgNode);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  numUseWithinCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  numUseWithinCfgNode);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  reachingUses);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  reachingUses);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  reachingUses);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  defMetadata);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  defMetadata);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  defMetadata);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(0);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(0);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
82	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(1);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(1);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
83	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(6);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayList(6);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newArrayList(6);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
84	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(8);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(8);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(8);	  this.inlinedNewDependencies    =    new    ArrayList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
85	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(4);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(4);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  ArrayList  <  AbstractCompiler>(4);	  this.inlinedNewDependencies    =    new    ArrayList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinCfgNode);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newArrayListWithCapacity(numUseWithinCfgNode);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newArrayListWithCapacity(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newArrayListWithCapacity(inlinedNewDependencies);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(defMetadata);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  inlinedNewDependencies  =  Lists.newArrayList(defMetadata);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	inlinedNewDependencies  =  Lists.newArrayList(defMetadata);	  inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  inlinedCfgNode);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  inlinedCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(inlinedNewDependencies,  inlinedCfgNode);	  this.inlinedNewDependencies    =    Sets.newHashSet(inlinedNewDependencies);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
90	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(5);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Sets.newHashSet(5);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Sets.newHashSet(5);	  this.inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(inlinedNewDependencies);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
92	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(2);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(1);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Lists.newArrayListWithCapacity(1);	  this.inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(4);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(4);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  LinkedList  <  AbstractCompiler>(4);	  this.inlinedNewDependencies    =    new    LinkedList    <    AbstractCompiler>();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
95	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinCfgNode);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinCfgNode);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(numUseWithinCfgNode);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
96	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlines);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlines);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  new  FlowSensitiveInlineVariables(compiler,  inlines);	  this.inlinedNewDependencies    =    new    FlowSensitiveInlineVariables(compiler);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
97	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.synchronizedSet(this.inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.synchronizedSet(this.inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.synchronizedSet(this.inlinedNewDependencies);	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
98	[BUG]  [BUGGY]  this.inlinedNewDependencies  =  Collections.unmodifiableSet(inlinedNewDependencies);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  this.inlinedNewDependencies  =  Collections.unmodifiableSet(inlinedNewDependencies);  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	this.inlinedNewDependencies  =  Collections.unmodifiableSet(inlinedNewDependencies);	  this.inlinedNewDependencies    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  }	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
100	[BUG]  [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  for(int  i  =  0;  i  <  inline  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  for(int  i  =  0;  i  <  inline  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies!=  null)  {  this.inlinedNewDependencies  =  Sets.newHashSet();  inlinedNewDependencies  =  Sets.newHashSet();  }  else  {  for(int  i  =  0;  i  <  inline	  this.inlinedNewDependencies    =    Sets.newHashSet();    inlinedNewDependencies    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
101	[BUG]  [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  inlinedNewDependencies  =  Lists.newArrayList();  }	  this.inlinedNewDependencies    =    Lists.newArrayList();    inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  FlowSensitiveInlineVariables(AbstractCompiler  compiler)  {  this.compiler  =  compiler;    [BUGGY]  if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }  [BUGGY]      [CLASS]  FlowSensitiveInlineVariables  1  GatherCandiates  1  Candidate  1  2  3  4  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  inlinedNewDependencies  boolean  ControlFlowGraph  cfg  Node  def  use  useCfgNode  Definition  defMetadata  MaybeReachingVariableUse  reachingUses  List  candidates  MustBeReachingVariableDef  reachingDef  String  varName  int  numUseWithinUseCfgNode  Predicate  SIDE_EFFECT_PREDICATE  	projects/Closure3/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	0.2013468165642073	122	122	3	replace	if(inlinedNewDependencies  ==  null)  {  this.inlinedNewDependencies  =  Lists.newArrayList();  }  else  {  inlinedNewDependencies  =  Lists.newArrayList();  }	  this.inlinedNewDependencies    =    Lists.newArrayList();    inlinedNewDependencies    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
