projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780finalintnRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780intnRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780out[0]=v[0].doubleValue();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780intnRows=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780finaldouble[]out=newdouble[v.length];
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780for(introw=0;row<nRows;row++){
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780for(introw=0;row<nRows+1;row++){
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780for(introw=0;row<nRows.length;row++){
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780out[0]=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780out[0]=Math.max(out[0],v[1]);
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780for(introw=0;row<nCols;row++){
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780intnCols=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780for(inti=0;i<nRows;i++){v[i]*v[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780for(inti=0;i<nRows;i++){v[i]+=data[i]*v[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java780for(inti=0;i<nRows;i++){v[i]+=data[i].length;}
