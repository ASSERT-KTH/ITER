bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[][]  v  =(double[][])this.getEntryDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =(double[][])this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =(double[][])this.getEntryDimension();	  double[][]    v    =(double[][])this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	84	None	replace
2	[BUG]  [BUGGY]  Double[][]  v  =(double[][])this.getEntryDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[][]  v  =(double[][])this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[][]  v  =(double[][])this.getEntryDimension();	  double[][]    v    =(double[][])this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	84	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	87	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  v[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	87	None	replace
5	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows.length  *  v.length];  [CE]  int  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows.length  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows.length  *  v.length];	  final    double[]    out    =    new    double[v.length    *    nCols];    final    double[]    out    =    new    double[v.length    *    nCols];    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
6	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols.length  *  v.length];  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols.length  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols.length  *  v.length];	  final    double[]    out    =    new    double[v.length    *    nCols];    final    double[]    out    =    new    double[v.length    *    nCols];    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
7	[BUG]  [BUGGY]  double[]  v  =  this.getDoubleDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[]  v  =  this.getDoubleDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[]  v  =  this.getDoubleDimension();	  Double[]    v    =    this.getDoubleDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	72	None	replace
8	[BUG]  [BUGGY]  Double[]  v  =  this.getDoubleDimension(nRows);  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[]  v  =  this.getDoubleDimension(nRows);  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[]  v  =  this.getDoubleDimension(nRows);	  Double[]    v    =    this.getDoubleDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	72	None	replace
9	[BUG]  [BUGGY]  final  Double[]  v  =  this.getDoubleDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  Double[]  v  =  this.getDoubleDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  Double[]  v  =  this.getDoubleDimension();	  Double[]    v    =    this.getDoubleDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	72	None	replace
10	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  nCOLs];  [CE]  cannot  find  symbol  nCOLs  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  nCOLs];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  *  nCOLs];	  final    double[]    out    =    new    double[v.length    *    nCols];    final    double[]    out    =    new    double[v.length    *    nCOLs];    	non-compiled	[CE]  cannot  find  symbol  nCOLs	25	None	replace
11	[BUG]  [BUGGY]  final  int  nRows  =  getRowDimension().length  +  1;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  getRowDimension().length  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  getRowDimension().length  +  1;	  final    int    nRows    =    getRowDimension()    +    1;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	2	None	replace
12	[BUG]  [BUGGY]  final  int  nRows  =  getColumnDimension()  +  1;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  getColumnDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  getColumnDimension()  +  1;	  final    int    nRows    =    getRowDimension()    +    1;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	2	None	replace
13	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  final  double[]  out  =  new  double[v.length  *  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  final  double[]  out  =  new  double[v.length  *  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    1];    final  double[]  out  =  new  double[v.length  *  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	85	None	add
14	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  final  double[]  out  =  new  double[v.length  *  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  final  double[]  out  =  new  double[v.length  *  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    1];    final  double[]  out  =  new  double[v.length  *  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	85	None	add
15	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  Final  double[]  out  =  new  double[v.length  *  1];  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  Final  double[]  out  =  new  double[v.length  *  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    1];    Final  double[]  out  =  new  double[v.length  *  1];	  	non-compiled	[CE]  not  a  statement	85	None	add
16	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  final  double[]  out  =  new  double[v.length  *  1);  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  final  double[]  out  =  new  double[v.length  *  1);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    1];    final  double[]  out  =  new  double[v.length  *  1);	  	non-compiled	[CE]  ']'  expected	85	None	add
17	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  final  double[]  out  =  new  double[v.length  +  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  final  double[]  out  =  new  double[v.length  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    2];    final  double[]  out  =  new  double[v.length  +  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	20	None	add
18	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  Final  double[]  out  =  new  double[v.length  +  2];  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  Final  double[]  out  =  new  double[v.length  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    2];    Final  double[]  out  =  new  double[v.length  +  2];	  	non-compiled	[CE]  not  a  statement	20	None	add
19	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  final  Double[]  out  =  new  double[v.length  +  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  final  Double[]  out  =  new  double[v.length  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    2];    final  Double[]  out  =  new  double[v.length  +  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	20	None	add
20	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols];  final  double[]  out  =  new  double[nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  final  double[]  out  =  new  double[nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nCols];    final  double[]  out  =  new  double[nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	add
21	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols];  Final  double[]  out  =  new  double[nCols];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  Final  double[]  out  =  new  double[nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nCols];    Final  double[]  out  =  new  double[nCols];	  	non-compiled	[CE]  not  a  statement	16	None	add
22	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols];  final  double[]  out  =  new  double[nCOLs];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  final  double[]  out  =  new  double[nCOLs];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nCols];    final  double[]  out  =  new  double[nCOLs];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	add
23	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  final  double[]  out  =  new  double[v.length  *  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  final  double[]  out  =  new  double[v.length  *  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    2];    final  double[]  out  =  new  double[v.length  *  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	6	None	add
24	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  Final  double[]  out  =  new  double[v.length  *  2];  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  Final  double[]  out  =  new  double[v.length  *  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    2];    Final  double[]  out  =  new  double[v.length  *  2];	  	non-compiled	[CE]  not  a  statement	6	None	add
25	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  final  double[]  out  =  new  double[v.length  *  3];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  final  double[]  out  =  new  double[v.length  *  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    2];    final  double[]  out  =  new  double[v.length  *  3];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	6	None	add
26	[BUG]  [BUGGY]  Double[]  out  =  new  double[v.length  -  1];  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[]  out  =  new  double[v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[]  out  =  new  double[v.length  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    Double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  incompatible  types	78	None	replace
27	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[]  out  =  new  double[v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	double[]  out  =  new  double[v.length  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    Double[]    out    =    new    double[v.length    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	4	replace
28	[BUG]  [BUGGY]  double[]  out  =  new  double[v.length  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[]  out  =  new  double[v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[]  out  =  new  double[v.length  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    Double[]    out    =    new    double[v.length    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	4	replace
29	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  Double[]  out  =  new  double[v.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  Double[]  out  =  new  double[v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  -  1];  Double[]  out  =  new  double[v.length  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    Double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	78	None	replace
30	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  4];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[v.length  -  4];	  final    double[]    out    =    new    double[v.length    -    3];    	compilable	  [FE]  NegativeArraySizeException  	38	4	replace
31	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  4];  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  4];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  -  4];	  final    double[]    out    =    new    double[v.length    -    3];    	compilable	  [FE]  NegativeArraySizeException  	38	4	replace
32	[BUG]  [BUGGY]  final  int  vRows  =  this.getColumnDimension();  [CE]  cannot  find  symbol  out  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  vRows  =  this.getColumnDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  vRows  =  this.getColumnDimension();	  final    int    vRows    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  out	83	None	replace
33	[BUG]  [BUGGY]  final  int  vRows  =  this.getRowDimension()  +  1;  [CE]  cannot  find  symbol  out  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  vRows  =  this.getRowDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  vRows  =  this.getRowDimension()  +  1;	  final    int    vRows    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  out	83	None	replace
34	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  *  1];	  final    double[]    out    =    new    double[v.length    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	1	replace
35	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  *  1];	  final    double[]    out    =    new    double[v.length    *    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	1	replace
36	[BUG]  [BUGGY]  double[][]  data  =(double[][])v.getDataDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  data  =(double[][])v.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  data  =(double[][])v.getDataDimension();	  double[][]    data    =(double[][])this.getDataDimension();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
37	[BUG]  [BUGGY]  double[][]  data  =(double[][])data.getDataDimension();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  data  =(double[][])data.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  data  =(double[][])data.getDataDimension();	  double[][]    data    =(double[][])this.getDataDimension();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
38	[BUG]  [BUGGY]  double[][]  data  =(double[][])this.dataDimension;  [CE]  cannot  find  symbol  dataDimension  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  data  =(double[][])this.dataDimension;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  data  =(double[][])this.dataDimension;	  double[][]    data    =(double[][])this.getDataDimension();    	non-compiled	[CE]  cannot  find  symbol  dataDimension	90	None	replace
39	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	33	None	replace
40	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[v.length  /  2];	  final    double[]    out    =    new    double[v.length    -    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	4	replace
41	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  /  2];	  final    double[]    out    =    new    double[v.length    -    2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	4	replace
42	[BUG]  [BUGGY]  static  final  double[]  out  =  new  double[v.length  +  1];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  static  final  double[]  out  =  new  double[v.length  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	static  final  double[]  out  =  new  double[v.length  +  1];	  final    double[]    out    =    new    double[v.length    +    1];    static    final    double[]    out    =    new    double[v.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
43	[BUG]  [BUGGY]  static  final  double[]  out  =  new  double[nRows  +  1];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  static  final  double[]  out  =  new  double[nRows  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	static  final  double[]  out  =  new  double[nRows  +  1];	  final    double[]    out    =    new    double[v.length    +    1];    static    final    double[]    out    =    new    double[v.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	32	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	32	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i].length;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i].length;  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i].length;  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	32	None	replace
47	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension().length;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  this.getRowDimension().length;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  this.getRowDimension().length;	  final    int    nRows    =    getRowDimension().length;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	1	None	replace
48	[BUG]  [BUGGY]  final  double[]  out  =  new  double[V.length  *  nRows];  [CE]  cannot  find  symbol  V  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[V.length  *  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[V.length  *  nRows];	  final    double[]    out    =    new    double[v.length    *    nRows];    final    double[]    out    =    new    double[V.length    *    nRows];    	non-compiled	[CE]  cannot  find  symbol  V	75	None	replace
49	[BUG]  [BUGGY]  final  double[]  out  =  new  double[V.length  *  nCols];  [CE]  cannot  find  symbol  V  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[V.length  *  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[V.length  *  nCols];	  final    double[]    out    =    new    double[v.length    *    nRows];    final    double[]    out    =    new    double[V.length    *    nRows];    	non-compiled	[CE]  cannot  find  symbol  V	75	None	replace
50	[BUG]  [BUGGY]  final  double[][]  v  =  this.getColumnDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =  this.getColumnDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =  this.getColumnDimension();	  final    double[][]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	43	None	replace
51	[BUG]  [BUGGY]  final  double[][]  v  =  this.getDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =  this.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =  this.getDataDimension();	  final    double[][]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	43	None	replace
52	[BUG]  [BUGGY]  final  double[][]  v  =  this.getUpperDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =  this.getUpperDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =  this.getUpperDimension();	  final    double[][]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	43	None	replace
53	[BUG]  [BUGGY]  final  double[]  v  =  getEntryDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  v  =  getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  v  =  getEntryDimension();	  final    double[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	95	None	replace
54	[BUG]  [BUGGY]  final  int  v  =  this.getEntryDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  v  =  this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  v  =  this.getEntryDimension();	  final    double[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	95	None	replace
55	[BUG]  [BUGGY]  final  Double[]  v  =  this.getColumnDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  Double[]  v  =  this.getColumnDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  Double[]  v  =  this.getColumnDimension();	  Double[]    v    =    this.getColumnDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	70	None	replace
56	[BUG]  [BUGGY]  final  double[]  v  =  this.getSelectedRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  v  =  this.getSelectedRowDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  v  =  this.getSelectedRowDimension();	  final    double[]    v    =    this.getValueDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	40	None	replace
57	[BUG]  [BUGGY]  final  double[]  v  =  this.getValueDimension(nRows);  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  v  =  this.getValueDimension(nRows);  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  v  =  this.getValueDimension(nRows);	  final    double[]    v    =    this.getValueDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	40	None	replace
58	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  1];  final  double[]  out  =  new  double[v.length  /  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  1];  final  double[]  out  =  new  double[v.length  /  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    1];    final  double[]  out  =  new  double[v.length  /  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	99	None	add
59	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  1];  final  double[]  out  =  new  double[v.length  /  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  1];  final  double[]  out  =  new  double[v.length  /  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    1];    final  double[]  out  =  new  double[v.length  /  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	99	None	add
60	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  1];  Final  double[]  out  =  new  double[v.length  /  1];  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  1];  Final  double[]  out  =  new  double[v.length  /  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    1];    Final  double[]  out  =  new  double[v.length  /  1];	  	non-compiled	[CE]  not  a  statement	99	None	add
61	[BUG]  [BUGGY]  for(int  i  =  0;  nRows  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  cannot  find  symbol  out  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  nRows  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  nRows  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int    i    =    0;    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  out	102	None	replace
62	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[nRows];  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[nRows];	  final    double[]    out    =    new    double[nRows];    int    nRows    =    this.getRowDimension();    final    double[]    out    =    new    double[nRows];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	67	None	replace
63	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[v.length  -  1];  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[v.length  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    final    double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	77	None	replace
64	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  /  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  /  v.length];	  final    double[]    out    =    new    double[v.length    /    nRows];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	4	replace
65	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  /  v.length];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  /  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  /  v.length];	  final    double[]    out    =    new    double[v.length    /    nRows];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	4	replace
66	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows.length  /  v.length];  [CE]  int  cannot  be  dereferenced  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows.length  /  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows.length  /  v.length];	  final    double[]    out    =    new    double[v.length    /    nRows];    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
67	[BUG]  [BUGGY]  Double[][]  v  =  this.getColumnDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[][]  v  =  this.getColumnDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[][]  v  =  this.getColumnDimension();	  Double[][]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	44	None	replace
68	[BUG]  [BUGGY]  final  Double[][]  v  =  this.getRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  Double[][]  v  =  this.getRowDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  Double[][]  v  =  this.getRowDimension();	  Double[][]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	44	None	replace
69	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[v.length  +  1];  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[v.length  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[v.length  +  1];	  final    double[]    out    =    new    double[v.length    +    1];    final    double[]    out    =    new    double[v.length    +    2];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	97	None	replace
70	[BUG]  [BUGGY]  final  int  nRows  =  v.length  *  nRows;  final  double[]  out  =  new  double[v.length  *  nCols];  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  v.length  *  nRows;  final  double[]  out  =  new  double[v.length  *  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  v.length  *  nRows;  final  double[]  out  =  new  double[v.length  *  nCols];	  final    double[]    out    =    new    double[v.length    *    nRows];    final    double[]    out    =    new    double[v.length    *    nCols];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	76	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  2  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[v.length  *  2  +  1];	  final    double[]    out    =    new    double[v.length    *    2];    	compilable	  [FE]  AssertionFailedError  	7	4	replace
72	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  2  +  1];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  2  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  *  2  +  1];	  final    double[]    out    =    new    double[v.length    *    2];    	compilable	  [FE]  AssertionFailedError  	7	4	replace
73	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nCols];  final  double[]  out  =  new  double[v.length  -  nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nCols];  final  double[]  out  =  new  double[v.length  -  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nCols];    final  double[]  out  =  new  double[v.length  -  nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	30	None	add
74	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nCols];  final  double[]  out  =  new  double[v.length  -  nCOLs];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nCols];  final  double[]  out  =  new  double[v.length  -  nCOLs];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nCols];    final  double[]  out  =  new  double[v.length  -  nCOLs];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	30	None	add
75	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nCols];  final  double[]  out  =  new  double[v.length  -  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nCols];  final  double[]  out  =  new  double[v.length  -  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nCols];    final  double[]  out  =  new  double[v.length  -  nRows];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	30	None	add
76	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nCols];  Final  double[]  out  =  new  double[v.length  -  nCols];  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nCols];  Final  double[]  out  =  new  double[v.length  -  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nCols];    Final  double[]  out  =  new  double[v.length  -  nCols];	  	non-compiled	[CE]  not  a  statement	30	None	add
77	[BUG]  [BUGGY]  Double[][]  v  =(double[][])this.getRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[][]  v  =(double[][])this.getRowDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[][]  v  =(double[][])this.getRowDimension();	  double[][]    v    =(double[][])this.getColumnDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	58	None	replace
78	[BUG]  [BUGGY]  final  double[][]  v  =(double[][])this.getColumnDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =(double[][])this.getColumnDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =(double[][])this.getColumnDimension();	  double[][]    v    =(double[][])this.getColumnDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	58	None	replace
79	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nCols  -  1];	  final    double[]    out    =    new    double[nRows    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
80	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols  -  1];	  final    double[]    out    =    new    double[nRows    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
81	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  -  2];	  final    double[]    out    =    new    double[nRows    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
82	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  -  2];	  final    double[]    out    =    new    double[nRows    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
83	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  /  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nCols  /  v.length];	  final    double[]    out    =    new    double[v.length    /    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	4	replace
84	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols  /  v.length];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  /  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols  /  v.length];	  final    double[]    out    =    new    double[v.length    /    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	4	replace
85	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  final  double[]  out  =  new  double[v.length  -  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  final  double[]  out  =  new  double[v.length  -  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nRows];    final  double[]  out  =  new  double[v.length  -  nRows];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	10	None	add
86	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  Final  double[]  out  =  new  double[v.length  -  nRows];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  Final  double[]  out  =  new  double[v.length  -  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nRows];    Final  double[]  out  =  new  double[v.length  -  nRows];	  	non-compiled	[CE]  not  a  statement	10	None	add
87	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  final  int[]  out  =  new  double[v.length  -  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  final  int[]  out  =  new  double[v.length  -  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nRows];    final  int[]  out  =  new  double[v.length  -  nRows];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	10	None	add
88	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  final  double[]  out  =  new  double[v.length  -  nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  final  double[]  out  =  new  double[v.length  -  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nRows];    final  double[]  out  =  new  double[v.length  -  nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	10	None	add
89	[BUG]  [BUGGY]  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nRows    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	55	None	replace
90	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  v.length);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  v.length);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    v.length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
91	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  v.length);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  v.length);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  v.length);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    v.length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	1	replace
92	[BUG]  [BUGGY]  System.arraycopy(v,  0,  out,  0,  v.length);  [CE]  cannot  find  symbol  out  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  System.arraycopy(v,  0,  out,  0,  v.length);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	System.arraycopy(v,  0,  out,  0,  v.length);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    v.length);    	non-compiled	[CE]  cannot  find  symbol  out	101	None	replace
93	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  v.length);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  v.length);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    v.length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	2	replace
94	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  v.length);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  v.length);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  v.length);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    v.length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	2	replace
95	[BUG]  [BUGGY]  final  int  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nCols  =  this.getRowDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nCols  =  this.getRowDimension();	  int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	63	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  data[i];  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  data[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  data[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    data[i];    }    	non-compiled	[CE]  not  a  statement	89	None	replace
97	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nCols  =  this.getColumnDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nCols  =  this.getColumnDimension()  +  1;	  final    int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	64	None	replace
98	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  nRows);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  nRows);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    nRows);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	replace
99	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  nRows);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  nRows);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows];  System.arraycopy(v,  0,  out,  0,  nRows);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    nRows);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	replace
100	[BUG]  [BUGGY]  System.arraycopy(v,  0,  out,  0,  nRows);  [CE]  cannot  find  symbol  out  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  System.arraycopy(v,  0,  out,  0,  nRows);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	System.arraycopy(v,  0,  out,  0,  nRows);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    nRows);    	non-compiled	[CE]  cannot  find  symbol  out	88	None	replace
101	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  nRows);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  nRows);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    nRows);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	replace
102	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  nRows);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  nRows);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols];  System.arraycopy(v,  0,  out,  0,  nRows);	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    System.arraycopy(v,    0,    out,    0,    nRows);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	88	2	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  cannot  find  symbol  out  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  out	57	None	replace
104	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	57	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  *  v.length  +  1];	  final    double[]    out    =    new    double[nRows    *    v.length];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
106	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  +  1];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  *  v.length  +  1];	  final    double[]    out    =    new    double[nRows    *    v.length];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  *  v.length  +  2];	  final    double[]    out    =    new    double[nRows    *    v.length];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
108	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  +  2];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  *  v.length  +  2];	  final    double[]    out    =    new    double[nRows    *    v.length];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  *  v.length  -  1];	  final    double[]    out    =    new    double[nRows    *    v.length];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
110	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  -  1];  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  *  v.length  -  1];	  final    double[]    out    =    new    double[nRows    *    v.length];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
111	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  2];  final  double[]  out  =  new  double[v.length  -  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  2];  final  double[]  out  =  new  double[v.length  -  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    2];    final  double[]  out  =  new  double[v.length  -  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	35	None	add
112	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  2];  Final  double[]  out  =  new  double[v.length  -  2];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  2];  Final  double[]  out  =  new  double[v.length  -  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    2];    Final  double[]  out  =  new  double[v.length  -  2];	  	non-compiled	[CE]  not  a  statement	35	None	add
113	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  2];  Double[]  out  =  new  double[v.length  -  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  2];  Double[]  out  =  new  double[v.length  -  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    2];    Double[]  out  =  new  double[v.length  -  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	35	None	add
114	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  2];  double[]  out  =  new  double[v.length  -  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  2];  double[]  out  =  new  double[v.length  -  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    2];    double[]  out  =  new  double[v.length  -  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	35	None	add
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  data[i]  *  v[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    final    double[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	34	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  final  double[i]  *  v[i];  }  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  final  double[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  final  double[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    final    double[i]    *    v[i];    }    	non-compiled	[CE]  ']'  expected	34	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  v[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    final    double[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	34	None	replace
118	[BUG]  [BUGGY]  final  int  v  =  this.getColumnDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  v  =  this.getColumnDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  v  =  this.getColumnDimension();	  final    int    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	103	None	replace
119	[BUG]  [BUGGY]  final  double  v  =  this.getRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double  v  =  this.getRowDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double  v  =  this.getRowDimension();	  final    int    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	103	None	replace
120	[BUG]  [BUGGY]  final  int  v  =  this.getRowDimension()  +  1;  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  v  =  this.getRowDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  v  =  this.getRowDimension()  +  1;	  final    int    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	103	None	replace
121	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  3];  final  double[]  out  =  new  double[v.length  -  3];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  3];  final  double[]  out  =  new  double[v.length  -  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    3];    final  double[]  out  =  new  double[v.length  -  3];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	37	None	add
122	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  3];  Final  double[]  out  =  new  double[v.length  -  3];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  3];  Final  double[]  out  =  new  double[v.length  -  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    3];    Final  double[]  out  =  new  double[v.length  -  3];	  	non-compiled	[CE]  not  a  statement	37	None	add
123	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  3];  Double[]  out  =  new  double[v.length  -  3];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  3];  Double[]  out  =  new  double[v.length  -  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    3];    Double[]  out  =  new  double[v.length  -  3];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	37	None	add
124	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  3];  double[]  out  =  new  double[v.length  -  3];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  3];  double[]  out  =  new  double[v.length  -  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    3];    double[]  out  =  new  double[v.length  -  3];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	37	None	add
125	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  final  double[]  out  =  new  double[nRows  *  v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  final  double[]  out  =  new  double[nRows  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    v.length];    final  double[]  out  =  new  double[nRows  *  v.length];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	4	None	add
126	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  final  double[]  out  =  new  double[NRows  *  v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  final  double[]  out  =  new  double[NRows  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    v.length];    final  double[]  out  =  new  double[NRows  *  v.length];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	4	None	add
127	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  Final  double[]  out  =  new  double[nRows  *  v.length];  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  Final  double[]  out  =  new  double[nRows  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    v.length];    Final  double[]  out  =  new  double[nRows  *  v.length];	  	non-compiled	[CE]  not  a  statement	4	None	add
128	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  final  double[]  out  =  new  double[nRows  *  v1.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  final  double[]  out  =  new  double[nRows  *  v1.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    v.length];    final  double[]  out  =  new  double[nRows  *  v1.length];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	4	None	add
129	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  final  double[]  out  =  new  double[v.length  /  nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  final  double[]  out  =  new  double[v.length  /  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nCols];    final  double[]  out  =  new  double[v.length  /  nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	28	None	add
130	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  final  double[]  out  =  new  double[v.length  /  nCOLs];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  final  double[]  out  =  new  double[v.length  /  nCOLs];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nCols];    final  double[]  out  =  new  double[v.length  /  nCOLs];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	28	None	add
131	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  final  double[]  out  =  new  double[v.length  /  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  final  double[]  out  =  new  double[v.length  /  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nCols];    final  double[]  out  =  new  double[v.length  /  nRows];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	28	None	add
132	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  final  double[]  out  =  new  double[v.length  /  ncols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  final  double[]  out  =  new  double[v.length  /  ncols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nCols];    final  double[]  out  =  new  double[v.length  /  ncols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	28	None	add
133	[BUG]  [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  nCols  =  this.getRowDimension()  +  1;	  int    nCols    =    this.getColumnDimension()    +    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	65	None	replace
134	[BUG]  [BUGGY]  final  int[]  out  =  new  int[nCols];  [CE]  possible  loss  of  precision  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int[]  out  =  new  int[nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int[]  out  =  new  int[nCols];	  final    double[]    out    =    new    double[nCols];    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
135	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nRows];  final  double[]  out  =  new  double[v.length  /  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nRows];  final  double[]  out  =  new  double[v.length  /  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nRows];    final  double[]  out  =  new  double[v.length  /  nRows];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	8	None	add
136	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nRows];  Final  double[]  out  =  new  double[v.length  /  nRows];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nRows];  Final  double[]  out  =  new  double[v.length  /  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nRows];    Final  double[]  out  =  new  double[v.length  /  nRows];	  	non-compiled	[CE]  not  a  statement	8	None	add
137	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nRows];  final  double[]  out  =  new  double[v.length  /  nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nRows];  final  double[]  out  =  new  double[v.length  /  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nRows];    final  double[]  out  =  new  double[v.length  /  nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	8	None	add
138	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nRows];  final  int[]  out  =  new  double[v.length  /  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nRows];  final  int[]  out  =  new  double[v.length  /  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nRows];    final  int[]  out  =  new  double[v.length  /  nRows];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	8	None	add
139	[BUG]  [BUGGY]  final  double[][]  v  =  this.getEntryDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =  this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =  this.getEntryDimension();	  double[][]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	93	None	replace
140	[BUG]  [BUGGY]  Double[][]  v  =  this.getEntryDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[][]  v  =  this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[][]  v  =  this.getEntryDimension();	  double[][]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	93	None	replace
141	[BUG]  [BUGGY]  [][]  v  =  this.getEntryDimension();  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  [][]  v  =  this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	[][]  v  =  this.getEntryDimension();	  double[][]    v    =    this.getEntryDimension();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
142	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  /  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  /  1];	  final    double[]    out    =    new    double[v.length    /    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	100	1	replace
143	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  /  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  /  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  /  1];	  final    double[]    out    =    new    double[v.length    /    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	100	1	replace
144	[BUG]  [BUGGY]  final  double[][]  v  =(double[][])this.getValueDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =(double[][])this.getValueDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =(double[][])this.getValueDimension();	  final    double[][]    v    =(double[][])this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	59	None	replace
145	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension()  +  1;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  this.getColumnDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  this.getColumnDimension()  +  1;	  final    int    nRows    =    this.getRowDimension()    +    1;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	51	None	replace
146	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  -  v.length];	  final    double[]    out    =    new    double[v.length    -    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	4	replace
147	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  v.length];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  -  v.length];	  final    double[]    out    =    new    double[v.length    -    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	4	replace
148	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  -  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nCols  -  v.length];	  final    double[]    out    =    new    double[v.length    -    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	4	replace
149	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols  -  v.length];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  -  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols  -  v.length];	  final    double[]    out    =    new    double[v.length    -    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	31	4	replace
150	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  final  double[]  out  =  new  double[v.length  +  3];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  final  double[]  out  =  new  double[v.length  +  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    3];    final  double[]  out  =  new  double[v.length  +  3];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	22	None	add
151	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  Final  double[]  out  =  new  double[v.length  +  3];  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  Final  double[]  out  =  new  double[v.length  +  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    3];    Final  double[]  out  =  new  double[v.length  +  3];	  	non-compiled	[CE]  not  a  statement	22	None	add
152	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  final  Double[]  out  =  new  double[v.length  +  3];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  final  Double[]  out  =  new  double[v.length  +  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    3];    final  Double[]  out  =  new  double[v.length  +  3];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	22	None	add
153	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[v.length  -  nRows  +  1];	  final    double[]    out    =    new    double[v.length    -    nRows];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	4	replace
154	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  -  nRows  +  1];	  final    double[]    out    =    new    double[v.length    -    nRows];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	4	replace
155	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  1)];  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  1)];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  +  1)];	  final    double[]    out    =    new    double[v.length    +    1];    final    double[]    out    =    new    double[v.length    +    1)];    	non-compiled	[CE]  ']'  expected	98	None	replace
156	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getRowDimension();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getRowDimension();	  final    double[]    out    =    new    double[nRows];    int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	1	replace
157	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getRowDimension();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getRowDimension();	  final    double[]    out    =    new    double[nRows];    int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	1	replace
158	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows];  int  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  int  nCols  =  this.getRowDimension();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows];  int  nCols  =  this.getRowDimension();	  final    double[]    out    =    new    double[nRows];    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	68	None	replace
159	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  final  double[]  out  =  new  double[nRows  *  nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  final  double[]  out  =  new  double[nRows  *  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    nCols];    final  double[]  out  =  new  double[nRows  *  nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	18	None	add
160	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  final  double[]  out  =  new  double[nRows  *  nCOLs];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  final  double[]  out  =  new  double[nRows  *  nCOLs];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    nCols];    final  double[]  out  =  new  double[nRows  *  nCOLs];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	18	None	add
161	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  final  double[]  out  =  new  double[NRows  *  nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  final  double[]  out  =  new  double[NRows  *  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    nCols];    final  double[]  out  =  new  double[NRows  *  nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	18	None	add
162	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  Final  double[]  out  =  new  double[nRows  *  nCols];  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  Final  double[]  out  =  new  double[nRows  *  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    nCols];    Final  double[]  out  =  new  double[nRows  *  nCols];	  	non-compiled	[CE]  not  a  statement	18	None	add
163	[BUG]  [BUGGY]  double[]  v  =  this.getEntryDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[]  v  =  this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[]  v  =  this.getEntryDimension();	  Double[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	92	None	replace
164	[BUG]  [BUGGY]  final  Double[]  v  =  this.getEntryDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  Double[]  v  =  this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  Double[]  v  =  this.getEntryDimension();	  Double[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	92	None	replace
165	[BUG]  [BUGGY]  Double[]  v  =  this.getEntryDimension(nRows);  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[]  v  =  this.getEntryDimension(nRows);  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[]  v  =  this.getEntryDimension(nRows);	  Double[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	92	None	replace
166	[BUG]  [BUGGY]  final  int  nRows  =  v.length  *  nRows;  final  double[]  out  =  new  double[nRows.length  *  v.length];  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  v.length  *  nRows;  final  double[]  out  =  new  double[nRows.length  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  v.length  *  nRows;  final  double[]  out  =  new  double[nRows.length  *  v.length];	  final    double[]    out    =    new    double[v.length    *    nRows];    final    double[]    out    =    new    double[v.length    *    nRows];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	73	None	replace
167	[BUG]  [BUGGY]  final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  0;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  0;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  0;	  final    int    nRows    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	52	None	replace
168	[BUG]  [BUGGY]  int  nRows  =(v.length  <  1)?  this.getColumnDimension()  :  0;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  nRows  =(v.length  <  1)?  this.getColumnDimension()  :  0;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  nRows  =(v.length  <  1)?  this.getColumnDimension()  :  0;	  int    nRows    =(v.length    <    1)?    this.getRowDimension()    :    0;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	62	None	replace
169	[BUG]  [BUGGY]  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  1;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  1;	  int    nRows    =(v.length    <    1)?    this.getRowDimension()    :    0;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	62	None	replace
170	[BUG]  [BUGGY]  int  nRows  =(v.length  <  2)?  this.getRowDimension()  :  0;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  nRows  =(v.length  <  2)?  this.getRowDimension()  :  0;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  nRows  =(v.length  <  2)?  this.getRowDimension()  :  0;	  int    nRows    =(v.length    <    1)?    this.getRowDimension()    :    0;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	62	None	replace
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  +  2];	  final    double[]    out    =    new    double[nRows    +    1];    	compilable	  [FE]  AssertionFailedError  	13	4	replace
172	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  +  2];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  +  2];	  final    double[]    out    =    new    double[nRows    +    1];    	compilable	  [FE]  AssertionFailedError  	13	4	replace
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nCols  +  1];	  final    double[]    out    =    new    double[nRows    +    1];    	compilable	  [FE]  AssertionFailedError  	13	3	replace
174	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols  +  1];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols  +  1];	  final    double[]    out    =    new    double[nRows    +    1];    	compilable	  [FE]  AssertionFailedError  	13	3	replace
175	[BUG]  [BUGGY]  final  double[][]  data  =(double[][])this.getDataDimension();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  data  =(double[][])this.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  data  =(double[][])this.getDataDimension();	  final    double[][]    v    =(double[][])this.getDataDimension();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
176	[BUG]  [BUGGY]  final  double[][]  v  =(double[][])this.getSelectedDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =(double[][])this.getSelectedDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =(double[][])this.getSelectedDataDimension();	  final    double[][]    v    =(double[][])this.getDataDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	61	None	replace
177	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  final  double[]  out  =  new  double[nRows  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  final  double[]  out  =  new  double[nRows  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    +    1];    final  double[]  out  =  new  double[nRows  +  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	12	None	add
178	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  final  double[]  out  =  new  double[NRows  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  final  double[]  out  =  new  double[NRows  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    +    1];    final  double[]  out  =  new  double[NRows  +  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	12	None	add
179	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  Final  double[]  out  =  new  double[nRows  +  1];  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  Final  double[]  out  =  new  double[nRows  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    +    1];    Final  double[]  out  =  new  double[nRows  +  1];	  	non-compiled	[CE]  not  a  statement	12	None	add
180	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  final  double[]  out  =  new  double[nRows  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  final  double[]  out  =  new  double[nRows  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    -    1];    final  double[]  out  =  new  double[nRows  -  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	add
181	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  double[]  out  =  new  double[nRows  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  double[]  out  =  new  double[nRows  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    -    1];    double[]  out  =  new  double[nRows  -  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	add
182	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  Double[]  out  =  new  double[nRows  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  Double[]  out  =  new  double[nRows  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    -    1];    Double[]  out  =  new  double[nRows  -  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	add
183	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  int  nRows  =  this.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  int  nRows  =  this.getRowDimension();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    -    1];    int  nRows  =  this.getRowDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	14	None	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  *  nCols  +  1];	  final    double[]    out    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	19	4	replace
185	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols  +  1];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  *  nCols  +  1];	  final    double[]    out    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	19	4	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  *  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nCols  *  nRows];	  final    double[]    out    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	19	4	replace
187	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols  *  nRows];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  *  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols  *  nRows];	  final    double[]    out    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	19	4	replace
188	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  nSum];  [CE]  cannot  find  symbol  nSum  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  nSum];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  *  nSum];	  final    double[]    out    =    new    double[nRows    *    nCols];    	non-compiled	[CE]  cannot  find  symbol  nSum	19	None	replace
189	[BUG]  [BUGGY]  int  nRows  =  this.getColumnDimension()  +  1;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  nRows  =  this.getColumnDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  nRows  =  this.getColumnDimension()  +  1;	  int    nRows    =    this.getRowDimension()    +    1;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	3	None	replace
190	[BUG]  [BUGGY]  double[][]  v  =  this.getLowerDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  v  =  this.getLowerDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  v  =  this.getLowerDimension();	  double[][]    v    =    this.getUpperDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	94	None	replace
191	[BUG]  [BUGGY]  Double[][]  v  =  this.getUpperDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[][]  v  =  this.getUpperDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[][]  v  =  this.getUpperDimension();	  double[][]    v    =    this.getUpperDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	94	None	replace
192	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
193	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	53	None	add
194	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	53	3	add
196	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	53	3	add
197	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i	  	non-compiled	[CE]  ']'  expected	53	None	add
198	[BUG]  [BUGGY]  double[][]  v  =(double[][])this.data.getDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  v  =(double[][])this.data.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  v  =(double[][])this.data.getDataDimension();	  double[][]    v    =(double[][])data.getDataDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	104	None	replace
199	[BUG]  [BUGGY]  double[]  v  =  this.getColumnDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[]  v  =  this.getColumnDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[]  v  =  this.getColumnDimension();	  double[]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	71	None	replace
200	[BUG]  [BUGGY]  final  double[]  v  =  this.getLowerDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  v  =  this.getLowerDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  v  =  this.getLowerDimension();	  final    double[]    v    =    this.getUpperDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	41	None	replace
201	[BUG]  [BUGGY]  final  double[]  v  =  this.getUpperDimension(nRows);  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  v  =  this.getUpperDimension(nRows);  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  v  =  this.getUpperDimension(nRows);	  final    double[]    v    =    this.getUpperDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	41	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  this.getColumnDimension();  }  [CE]  cannot  find  symbol  out  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  this.getColumnDimension();  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  this.getColumnDimension();  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nRows    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  out	55	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nCols  *  v.length];	  final    double[]    out    =    new    double[nRows    *    v.length];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
204	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols  *  v.length];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols  *  v.length];	  final    double[]    out    =    new    double[nRows    *    v.length];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
205	[BUG]  [BUGGY]  Double[]  v  =  this.getUpperDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[]  v  =  this.getUpperDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[]  v  =  this.getUpperDimension();	  Double[]    v    =    this.getColumnDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	70	None	replace
206	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	32	None	replace
207	[BUG]  [BUGGY]  double[][]  v  =  this.getEntryDimension()  +  1;  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  v  =  this.getEntryDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  v  =  this.getEntryDimension()  +  1;	  double[][]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	93	None	replace
208	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  nRows  =  this.getRowDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	53	None	add
209	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	53	None	add
210	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  data[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  data[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  data[i];  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	53	None	add
211	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  final  int  nRows  =  this.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  final  int  nRows  =  this.getRowDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    final  int  nRows  =  this.getRowDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	53	None	add
212	[BUG]  [BUGGY]  final  int  vRows  =  this.getRowDimension();  final  double[]  out  =  new  double[vRows.length  -  1];  [CE]  int  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  vRows  =  this.getRowDimension();  final  double[]  out  =  new  double[vRows.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  vRows  =  this.getRowDimension();  final  double[]  out  =  new  double[vRows.length  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    final    double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
213	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  vRows  =  this.getRowDimension();  final  double[]  out  =  new  double[vRows  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  int  vRows  =  this.getRowDimension();  final  double[]  out  =  new  double[vRows  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    final    double[]    out    =    new    double[v.length    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	4	replace
214	[BUG]  [BUGGY]  final  int  vRows  =  this.getRowDimension();  final  double[]  out  =  new  double[vRows  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  vRows  =  this.getRowDimension();  final  double[]  out  =  new  double[vRows  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  vRows  =  this.getRowDimension();  final  double[]  out  =  new  double[vRows  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    final    double[]    out    =    new    double[v.length    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	4	replace
215	[BUG]  [BUGGY]  final  double[]  v  =  this.getEntryDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  v  =  this.getEntryDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  v  =  this.getEntryDataDimension();	  final    double[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	95	None	replace
216	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  /  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  /  nCols];	  final    double[]    out    =    new    double[nRows    *    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	4	replace
217	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  /  nCols];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  /  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  /  nCols];	  final    double[]    out    =    new    double[nRows    *    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	4	replace
218	[BUG]  [BUGGY]  final  double[]  v  =  this.getLeadingDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  v  =  this.getLeadingDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  v  =  this.getLeadingDimension();	  final    double[]    v    =    this.getUpperDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	41	None	replace
219	[BUG]  [BUGGY]  final  double[][]  v  =(double[][])data.getDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =(double[][])data.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =(double[][])data.getDataDimension();	  final    double[][]    v    =(double[][])this.getDataDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	61	None	replace
220	[BUG]  [BUGGY]  Final  double[]  out  =  new  double[v.length  *  nRows];  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Final  double[]  out  =  new  double[v.length  *  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Final  double[]  out  =  new  double[v.length  *  nRows];	  final    double[]    out    =    new    double[v.length    *    nRows];    Final    double[]    out    =    new    double[v.length    *    nRows];    	non-compiled	[CE]  not  a  statement	74	None	replace
221	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  final  int[]  out  =  new  double[nRows  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  final  int[]  out  =  new  double[nRows  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    +    1];    final  int[]  out  =  new  double[nRows  +  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	12	None	add
222	[BUG]  [BUGGY]  Double[]  out  =  new  Double[v.length  -  1];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[]  out  =  new  Double[v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[]  out  =  new  Double[v.length  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  incompatible  types	80	None	replace
223	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	33	None	replace
224	[BUG]  [BUGGY]  double[][]  data  =(double[][])getDataDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  data  =(double[][])getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  data  =(double[][])getDataDimension();	  double[][]    data    =(double[][])this.getDataDimension();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
225	[BUG]  [BUGGY]  final  int  nRows  =  getColumnDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  getColumnDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  getColumnDimension();	  final    int    nRows    =    getRowDimension()    +    1;    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	2	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  4];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[v.length  *  4];	  final    double[]    out    =    new    double[v.length    *    2];    	compilable	  [FE]  AssertionFailedError  	7	4	replace
227	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  4];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  4];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  *  4];	  final    double[]    out    =    new    double[v.length    *    2];    	compilable	  [FE]  AssertionFailedError  	7	4	replace
228	[BUG]  [BUGGY]  Final  double[]  out  =  new  double[v.length  -  1];  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Final  double[]  out  =  new  double[v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Final  double[]  out  =  new  double[v.length  -  1];	  final    double[]    out    =    new    double[v.length    -    1];    Final    double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  not  a  statement	79	None	replace
229	[BUG]  [BUGGY]  Double[][]  v  =(double[][])data.getDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[][]  v  =(double[][])data.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[][]  v  =(double[][])data.getDataDimension();	  Double[][]    v    =(double[][])this.getDataDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	60	None	replace
230	[BUG]  [BUGGY]  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[nRows];  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  nRows  =  this.getRowDimension();  final  double[]  out  =  new  double[nRows];	  final    double[]    out    =    new    double[nRows];    int    nRows    =    this.getRowDimension();    final    double[]    out    =    new    double[nRows];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	67	None	replace
231	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i].length  *  v[i];  }  [CE]  cannot  find  symbol  out  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i].length  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i].length  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  out	57	None	replace
232	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  static  final  double[]  out  =  new  double[v.length  +  2];  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  static  final  double[]  out  =  new  double[v.length  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    2];    static  final  double[]  out  =  new  double[v.length  +  2];	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
233	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  Final  double[]  out  =  new  double[nRows  -  1];  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  Final  double[]  out  =  new  double[nRows  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    -    1];    Final  double[]  out  =  new  double[nRows  -  1];	  	non-compiled	[CE]  not  a  statement	14	None	add
234	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  int  nRows  -  1  =  this.getRowDimension();  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  int  nRows  -  1  =  this.getRowDimension();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    -    1];    int  nRows  -  1  =  this.getRowDimension();	  	non-compiled	[CE]  ';'  expected	14	None	add
235	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols];  Double[]  out  =  new  double[nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  Double[]  out  =  new  double[nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nCols];    Double[]  out  =  new  double[nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	add
236	[BUG]  [BUGGY]  Double[][]  v  =  this.getDoubleDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[][]  v  =  this.getDoubleDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[][]  v  =  this.getDoubleDimension();	  Double[][]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	44	None	replace
237	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  final  double[i]  *  v[i];  }  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  final  double[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  final  double[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    final    double[i]    *    v[i];    }    	non-compiled	[CE]  ']'  expected	34	None	replace
238	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  data[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  data[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[]  v  =  data[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    final    double[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	34	None	replace
239	[BUG]  [BUGGY]  double[][]  v  =  this.getDoubleDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  v  =  this.getDoubleDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  v  =  this.getDoubleDimension();	  double[][]    v    =    this.getColumnDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	42	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[v.length  *  3];	  final    double[]    out    =    new    double[v.length    +    3];    	compilable	  [FE]  AssertionFailedError  	23	4	replace
241	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  3];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  *  3];	  final    double[]    out    =    new    double[v.length    +    3];    	compilable	  [FE]  AssertionFailedError  	23	4	replace
242	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i].length;  }  [CE]  double  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i].length;  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i].length;  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  double  cannot  be  dereferenced	48	None	replace
243	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	87	None	replace
244	[BUG]  [BUGGY]  double[]  v  =  this.getUpperDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[]  v  =  this.getUpperDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[]  v  =  this.getUpperDimension();	  double[]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	71	None	replace
245	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  final  double[]  out  =  new  double[v.length  *  2);  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  final  double[]  out  =  new  double[v.length  *  2);  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    2];    final  double[]  out  =  new  double[v.length  *  2);	  	non-compiled	[CE]  ']'  expected	6	None	add
246	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols];  int  nRows  =  this.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  int  nRows  =  this.getRowDimension();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nCols];  int  nRows  =  this.getRowDimension();	  final    double[]    out    =    new    double[nRows];    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	68	None	replace
247	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  static  final  double[]  out  =  new  double[v.length  +  3];  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  static  final  double[]  out  =  new  double[v.length  +  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    3];    static  final  double[]  out  =  new  double[v.length  +  3];	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
248	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  Final  double[]  out  =  new  double[v.length  /  nCols];  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  nCols];  Final  double[]  out  =  new  double[v.length  /  nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    nCols];    Final  double[]  out  =  new  double[v.length  /  nCols];	  	non-compiled	[CE]  not  a  statement	28	None	add
249	[BUG]  [BUGGY]  double[][]  v  =(double[][])this.getEntryDimension()  +  1;  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  v  =(double[][])this.getEntryDimension()  +  1;  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  v  =(double[][])this.getEntryDimension()  +  1;	  double[][]    v    =(double[][])this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	84	None	replace
250	[BUG]  [BUGGY]  Double[]  v  =  this.getEntryDimension(v.length);  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[]  v  =  this.getEntryDimension(v.length);  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[]  v  =  this.getEntryDimension(v.length);	  Double[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	92	None	replace
251	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  final  double[]  out  =  new  double[nRows  *  nCOLS];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  nCols];  final  double[]  out  =  new  double[nRows  *  nCOLS];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    nCols];    final  double[]  out  =  new  double[nRows  *  nCOLS];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	18	None	add
252	[BUG]  [BUGGY]  final  int  nRows  =  getRowDimension();  final  double[]  out  =  new  double[nRows];  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  nRows  =  getRowDimension();  final  double[]  out  =  new  double[nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  nRows  =  getRowDimension();  final  double[]  out  =  new  double[nRows];	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	66	None	replace
253	[BUG]  [BUGGY]  final  int  v  =  this.getValueDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  v  =  this.getValueDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  v  =  this.getValueDimension();	  final    double[]    v    =    this.getValueDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	40	None	replace
254	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  static  final  double[]  out  =  new  double[nRows  *  v.length];  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  v.length];  static  final  double[]  out  =  new  double[nRows  *  v.length];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    *    v.length];    static  final  double[]  out  =  new  double[nRows  *  v.length];	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
255	[BUG]  [BUGGY]  for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	57	None	replace
256	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  final  double[]  out  =  new  double[v.length  *  2)];  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  2];  final  double[]  out  =  new  double[v.length  *  2)];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    2];    final  double[]  out  =  new  double[v.length  *  2)];	  	non-compiled	[CE]  ']'  expected	6	None	add
257	[BUG]  [BUGGY]  final  int  vDimension  =  this.getEntryDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  vDimension  =  this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  vDimension  =  this.getEntryDimension();	  final    double[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
258	[BUG]  [BUGGY]  double[][]  data  =(double[][])this.data.getDataDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  data  =(double[][])this.data.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  data  =(double[][])this.data.getDataDimension();	  double[][]    data    =(double[][])this.getDataDimension();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
259	[BUG]  [BUGGY]  final  double[][]  v  =(double[][])getDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[][]  v  =(double[][])getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[][]  v  =(double[][])getDataDimension();	  final    double[][]    v    =(double[][])this.getDataDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	61	None	replace
260	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  final  double[]  out  =  new  double[nRows  -  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  -  1];  final  double[]  out  =  new  double[nRows  -  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    -    1];    final  double[]  out  =  new  double[nRows  -  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	add
261	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  final  double[]  out  =  new  double[nRows];  final  double[]  out  =  new  double[nRows];  }  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  if(v.length  ==  nCols)  {  final  double[]  out  =  new  double[nRows];  final  double[]  out  =  new  double[nRows];  }  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	if(v.length  ==  nCols)  {  final  double[]  out  =  new  double[nRows];  final  double[]  out  =  new  double[nRows];  }	  final    double[]    out    =    new    double[nRows];    Final    double[]    out    =    new    double[nRows];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	69	None	replace
262	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  final  double[]  out  =  new  double[nRows];  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  if(v.length  ==  nCols)  {  final  double[]  out  =  new  double[nRows];  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v[i];  }  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	if(v.length  ==  nCols)  {  final  double[]  out  =  new  double[nRows];  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v[i];  }	  final    double[]    out    =    new    double[nRows];    Final    double[]    out    =    new    double[nRows];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
263	[BUG]  [BUGGY]  final  int  vRows  =  this.getEntryDimension();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  vRows  =  this.getEntryDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  vRows  =  this.getEntryDimension();	  final    int    vRows    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
264	[BUG]  [BUGGY]  double[][]  v  =  this.getDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  v  =  this.getDataDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  v  =  this.getDataDimension();	  double[][]    v    =    this.getColumnDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	42	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows  *  2];	  final    double[]    out    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	19	4	replace
266	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  *  2];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  *  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows  *  2];	  final    double[]    out    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	19	4	replace
267	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	32	None	replace
268	[BUG]  [BUGGY]  double[]  v  =  this.getValueDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[]  v  =  this.getValueDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[]  v  =  this.getValueDimension();	  double[]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	71	None	replace
269	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  final  double[]  out  =  new  double[v.length  +  4];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  3];  final  double[]  out  =  new  double[v.length  +  4];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    3];    final  double[]  out  =  new  double[v.length  +  4];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	22	None	add
270	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[i]  *  v[i].length;  }  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[i]  *  v[i].length;  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  double[i]  *  v[i].length;  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    final    double[i]    *    v[i];    }    	non-compiled	[CE]  ']'  expected	34	None	replace
271	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[1];	  final    double[]    out    =    new    double[nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	4	replace
272	[BUG]  [BUGGY]  final  double[]  out  =  new  double[1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[1];	  final    double[]    out    =    new    double[nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	17	4	replace
273	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  final  double[]  out  =  new  double[nRows  +  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows  +  1];  final  double[]  out  =  new  double[nRows  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nRows    +    1];    final  double[]  out  =  new  double[nRows  +  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	12	None	add
274	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  1];  final  double[]  out  =  new  double[v.length  *  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  1];  final  double[]  out  =  new  double[v.length  *  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    /    1];    final  double[]  out  =  new  double[v.length  *  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	99	None	add
275	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows].doubleValue();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows].doubleValue();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows].doubleValue();	  final    double[]    out    =    new    double[nRows];    final    double[]    out    =    new    double[nRows];    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  nCols  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[v.length  *  nCols  +  1];	  final    double[]    out    =    new    double[v.length    +    1];    final    double[]    out    =    new    double[v.length    +    1];    	compilable	  [FE]  AssertionFailedError  	45	4	replace
277	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  nCols  +  1];  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  nCols  +  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  *  nCols  +  1];	  final    double[]    out    =    new    double[v.length    +    1];    final    double[]    out    =    new    double[v.length    +    1];    	compilable	  [FE]  AssertionFailedError  	45	4	replace
278	[BUG]  [BUGGY]  final  int  v  =  this.getUpperDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  int  v  =  this.getUpperDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  int  v  =  this.getUpperDimension();	  final    double[]    v    =    this.getUpperDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	41	None	replace
279	[BUG]  [BUGGY]  final  double[]  v  =  this.getOperatorDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  v  =  this.getOperatorDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  v  =  this.getOperatorDimension();	  final    double[]    v    =    this.getUpperDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	41	None	replace
280	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  final  double[]  out  =  new  double[v.length  *  1)];  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  *  1];  final  double[]  out  =  new  double[v.length  *  1)];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    *    1];    final  double[]  out  =  new  double[v.length  *  1)];	  	non-compiled	[CE]  ']'  expected	85	None	add
281	[BUG]  [BUGGY]  Double[]  v  =  this.getDoubleDimension(v.length);  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[]  v  =  this.getDoubleDimension(v.length);  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[]  v  =  this.getDoubleDimension(v.length);	  Double[]    v    =    this.getDoubleDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	72	None	replace
282	[BUG]  [BUGGY]  Double[]  v  =  this.getDoubleDimension(nCols);  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  Double[]  v  =  this.getDoubleDimension(nCols);  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	Double[]  v  =  this.getDoubleDimension(nCols);	  Double[]    v    =    this.getDoubleDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	72	None	replace
283	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  final  double[]  out  =  new  double[V.length  -  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  -  nRows];  final  double[]  out  =  new  double[V.length  -  nRows];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    -    nRows];    final  double[]  out  =  new  double[V.length  -  nRows];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	10	None	add
284	[BUG]  [BUGGY]  for(int  v  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  v  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  v  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	54	None	replace
285	[BUG]  [BUGGY]  if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  double[]  out  =  new  double[v.length  -  1];  }  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  double[]  out  =  new  double[v.length  -  1];  }  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  double[]  out  =  new  double[v.length  -  1];  }	  final    double[]    out    =    new    double[v.length    -    1];    double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	80	None	replace
286	[BUG]  [BUGGY]  if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  new  double[v.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  new  double[v.length  -  1];  }  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  new  double[v.length  -  1];  }	  final    double[]    out    =    new    double[v.length    -    1];    double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
287	[BUG]  [BUGGY]  if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  Double[]  out  =  new  double[v.length  -  1];  }  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  Double[]  out  =  new  double[v.length  -  1];  }  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	if(v.length  >  0)  {  final  double[]  out  =  new  double[v.length  -  1];  Double[]  out  =  new  double[v.length  -  1];  }	  final    double[]    out    =    new    double[v.length    -    1];    Double[]    out    =    new    double[v.length    -    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	78	None	replace
288	[BUG]  [BUGGY]  double[][]  v  =  this.getOperatorDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  double[][]  v  =  this.getOperatorDimension();  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	double[][]  v  =  this.getOperatorDimension();	  double[][]    v    =    this.getUpperDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	94	None	replace
289	[BUG]  [BUGGY]  int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nRows    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	81	None	replace
290	[BUG]  [BUGGY]  for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nRows    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	81	None	replace
291	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSums;  i++)  {  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  for(int  i  =  0;  i  <  nSums;  i++)  {  v[i]  *  v[i];  }  [BUGGY]      final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	for(int  i  =  0;  i  <  nSums;  i++)  {  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	96	None	replace
292	[BUG]  [BUGGY]  static  final  double[]  out  =  new  double[v.length  +  2];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  static  final  double[]  out  =  new  double[v.length  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	static  final  double[]  out  =  new  double[v.length  +  2];	  final    double[]    out    =    new    double[v.length    +    1];    static    final    double[]    out    =    new    double[v.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
293	[BUG]  [BUGGY]  static  final  double[]  out  =  new  double[v.length  -  1];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  static  final  double[]  out  =  new  double[v.length  -  1];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	static  final  double[]  out  =  new  double[v.length  -  1];	  final    double[]    out    =    new    double[v.length    +    1];    static    final    double[]    out    =    new    double[v.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
294	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[v.length  /  3];	  final    double[]    out    =    new    double[v.length    -    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
295	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  /  3];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  /  3];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[v.length  /  3];	  final    double[]    out    =    new    double[v.length    -    3];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
296	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getColumnDimension();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	add	final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getColumnDimension();	  final    double[]    out    =    new    double[nRows];    int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	1	replace
297	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getColumnDimension();  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final  double[]  out  =  new  double[nRows];  int  nSum  =  this.getColumnDimension();	  final    double[]    out    =    new    double[nRows];    int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	1	replace
298	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  final  double[]  out  =  new  double[V.length  +  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[v.length  +  2];  final  double[]  out  =  new  double[V.length  +  2];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[v.length    +    2];    final  double[]  out  =  new  double[V.length  +  2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	20	None	add
299	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nCols];  double[]  out  =  new  double[nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }      [BUGGY]  final  double[]  out  =  new  double[nCols];  double[]  out  =  new  double[nCols];  [BUGGY]      for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	779	779	2	replace	final    double[]    out    =    new    double[nCols];    double[]  out  =  new  double[nCols];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	add
