bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
2	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  1)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
4	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  1)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
6	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	20	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  sum  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  sum	20	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	22	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	22	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	22	None	replace
12	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  this.data[row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.data[row];	      final    double[]    dataRow    =    data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	5	None	replace
13	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  v[row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v[row];	      final    double[]    dataRow    =    data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	5	None	replace
14	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.length;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  v.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v.length;	      final    double[]    dataRow    =    data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	5	None	replace
15	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	10	None	add
16	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	10	None	add
17	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(ncols  <  dataRow.length)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(ncols  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    double  sum  =(ncols  <  dataRow.length)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	10	None	add
18	[BUG]  [BUGGY]  int  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  nCols  =  this.getRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getRowDimension();	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	1	None	replace
19	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  nCols  =  this.getColumnDimension()  +  1;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension()  +  1;	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	1	None	replace
20	[BUG]  [BUGGY]  out[row]  =  v.doubleValue();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  out[row]  =  v.doubleValue();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  v.doubleValue();	      out[row]    =    dataRow.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
21	[BUG]  [BUGGY]  out[row]  =  this.dataRow.doubleValue();  [CE]  cannot  find  symbol  dataRow  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  out[row]  =  this.dataRow.doubleValue();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  this.dataRow.doubleValue();	      out[row]    =    dataRow.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  dataRow	12	None	replace
22	[BUG]  [BUGGY]  out[row]  =  data.doubleValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  out[row]  =  data.doubleValue();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  data.doubleValue();	      out[row]    =    dataRow.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
23	[BUG]  [BUGGY]  double  sum  =  1;  double  sum  =  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  double  sum  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    double  sum  =  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	6	None	add
24	[BUG]  [BUGGY]  double  sum  =  1;  Double  sum  =  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  Double  sum  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    Double  sum  =  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	6	None	add
25	[BUG]  [BUGGY]  double  sum  =  1;  int  sum  =  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  int  sum  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    int  sum  =  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	6	None	add
26	[BUG]  [BUGGY]  double  sum  =  1;  final  double  sum  =  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  final  double  sum  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    final  double  sum  =  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	6	None	add
27	[BUG]  [BUGGY]  double  sum  =  1;  long  sum  =  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  long  sum  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    long  sum  =  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	6	None	add
28	[BUG]  [BUGGY]  Double[]  dataRow  =  this.getDataRowDimension();  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  Double[]  dataRow  =  this.getDataRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double[]  dataRow  =  this.getDataRowDimension();	      double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	3	None	replace
29	[BUG]  [BUGGY]  []  dataRow  =  this.getDataRowDimension();  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  []  dataRow  =  this.getDataRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	[]  dataRow  =  this.getDataRowDimension();	      double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length][row];	      double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	replace
31	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  out  =  new  double[dataRow.length][row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length][row];	      double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	replace
32	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][0];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[][]  out  =  new  double[dataRow.length][0];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][0];	      double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	replace
33	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][row  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[][]  out  =  new  double[dataRow.length][row  +  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][row  +  1];	      double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  0)?  dataRow.length  :  1;	  double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	7	4	replace
35	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  0)?  dataRow.length  :  1;	  double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	7	4	replace
36	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;	  double    sum    =    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
37	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;	  double    sum    =    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;	  double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	7	4	replace
39	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;	  double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	7	4	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	19	3	add
41	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	19	3	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	19	3	add
43	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	19	3	add
44	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    For(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  '.class'  expected	19	None	add
45	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	19	None	add
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  sum  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  sum	18	None	replace
47	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
48	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	9	4	replace
50	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	9	4	replace
51	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    0;    double  sum  =(nCols  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	8	None	add
52	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  Double  sum  =(nCols  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  Double  sum  =(nCols  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    0;    Double  sum  =(nCols  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	8	None	add
53	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  double  sum  =(ncols  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  double  sum  =(ncols  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    0;    double  sum  =(ncols  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	8	None	add
54	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  double  sum  =(nCOLs  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  double  sum  =(nCOLs  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    0;    double  sum  =(nCOLs  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	8	None	add
55	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  int  nCols  >  0)?  dataRow.length  :  0;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  int  nCols  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    0;    int  nCols  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  ';'  expected	8	None	add
56	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.getDataRowDimension();  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  v.getDataRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v.getDataRowDimension();	      final    double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	2	None	replace
57	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row);  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(row);	      final    double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	2	None	replace
58	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v);  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(v);	      final    double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	2	None	replace
59	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[][]  out  =  new  double[dataRow.length];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length];	      double[][]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	13	None	replace
60	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  out  =  new  double[dataRow.length];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length];	      double[][]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	13	None	replace
61	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[][]  out  =  new  double[dataRow.length  +  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length  +  1];	      double[][]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	13	None	replace
62	[BUG]  [BUGGY]  double[]  out  =  new  double[dataRow.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[]  out  =  new  double[dataRow.length  +  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  out  =  new  double[dataRow.length  +  1];	      double[][]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	13	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
64	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
66	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
68	[BUG]  [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
69	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    0    :    dataRow.length;    double  sum  =(nCols  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	15	None	add
70	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  Double  sum  =(nCols  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  Double  sum  =(nCols  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    0    :    dataRow.length;    Double  sum  =(nCols  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	15	None	add
71	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  int  nCols  =(nCols  <  0)?  0  :  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  int  nCols  =(nCols  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    0    :    dataRow.length;    int  nCols  =(nCols  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	15	None	add
72	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  double  sum  =(nCOLs  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  double  sum  =(nCOLs  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    0    :    dataRow.length;    double  sum  =(nCOLs  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	15	None	add
73	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  double  sum  =(ncols  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow.length;  double  sum  =(ncols  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    0    :    dataRow.length;    double  sum  =(ncols  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	15	None	add
74	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  -  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  nCols  =  dataRow.length  -  1;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  -  1;	      int    nCols    =    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	4	None	replace
75	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  nCols  =  dataRow.length  +  1;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  +  1;	      int    nCols    =    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	4	None	replace
76	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  -  2;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  nCols  =  dataRow.length  -  2;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  -  2;	      int    nCols    =    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	4	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	17	3	add
78	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	17	3	add
79	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  '.class'  expected	17	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	17	3	add
81	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	17	3	add
82	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	17	None	add
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    dataRow[i];    }    	non-compiled	[CE]  not  a  statement	21	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  dataRow[i];  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  dataRow[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  dataRow[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    dataRow[i];    }    	non-compiled	[CE]  not  a  statement	21	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
86	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
87	[BUG]  [BUGGY]  double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row];  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	11	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	9	4	replace
89	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	9	4	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	9	4	replace
91	[BUG]  [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	9	4	replace
92	[BUG]  [BUGGY]  out[row]  =  this.getDataRow().doubleValue();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  out[row]  =  this.getDataRow().doubleValue();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  this.getDataRow().doubleValue();	      out[row]    =    dataRow.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
93	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[][]  out  =  new  double[dataRow.length  -  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length  -  1];	      double[][]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	13	None	replace
94	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  double  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  double  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    double  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	17	None	add
95	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    (int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  ')'  expected	17	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	17	4	add
97	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	17	4	add
98	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	22	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	18	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  0)?  dataRow[0]  :  0;	  double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	7	4	replace
101	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  0)?  dataRow[0]  :  0;	  double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	7	4	replace
102	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	10	None	add
103	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  nCols  =  this.getColumnDimension()  +  dataRow.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension()  +  dataRow.length;	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	1	None	replace
104	[BUG]  [BUGGY]  double  sum  =(dataRow  <  0)?  0  :  dataRow.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(dataRow  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	16	None	replace
105	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	20	None	replace
106	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  data[row][0];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  data[row][0];	      final    double[]    dataRow    =    data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	5	None	replace
107	[BUG]  [BUGGY]  double[]  outRow  =  this.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[]  outRow  =  this.getDataRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  outRow  =  this.getDataRowDimension();	      double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
108	[BUG]  [BUGGY]  double[]  vRow  =  this.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[]  vRow  =  this.getDataRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  vRow  =  this.getDataRowDimension();	      double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
109	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[][]  out  =  new  double[dataRow.length][v.length];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][v.length];	      double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	replace
110	[BUG]  [BUGGY]  final  double[]  outRow  =  this.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  outRow  =  this.getDataRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  outRow  =  this.getDataRowDimension();	      final    double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
111	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension()  +  1;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension()  +  1;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension()  +  1;	      final    double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	2	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	19	4	add
113	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	19	4	add
114	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  double  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  double  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    double  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	19	None	add
115	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    (int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  ')'  expected	19	None	add
116	[BUG]  [BUGGY]  double  sum  =  1;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	6	None	add
117	[BUG]  [BUGGY]  double  sum  =  1;  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
118	[BUG]  [BUGGY]  double  sum  =  1;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
119	[BUG]  [BUGGY]  double  sum  =  1;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =  1;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =    1;    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	6	None	add
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	22	None	replace
121	[BUG]  [BUGGY]  double  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  nCols  =  this.getColumnDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  nCols  =  this.getColumnDimension();	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	1	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
123	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	11	4	replace
124	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[][]  out  =  new  double[v.length][row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[v.length][row];	      double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	replace
125	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][columnDimension];	      double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	14	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
127	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	16	4	replace
128	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	17	None	add
129	[BUG]  [BUGGY]  double[]  dataRows  =  this.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[]  dataRows  =  this.getDataRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  dataRows  =  this.getDataRowDimension();	      double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
130	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCOLs;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  nCOLs  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCOLs;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCOLs;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  cannot  find  symbol  nCOLs	19	None	add
131	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i].  *  v[i];  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]      for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i].  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i].  *  v[i];  }	  	non-compiled	[CE]  <identifier>  expected	19	None	add
132	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  0)?  1  :  0;	  double    sum    =    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
133	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  [BUGGY]    for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  0)?  1  :  0;	  double    sum    =    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	replace
134	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  nSum  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  nSum	18	None	replace
135	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  *  v.length;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  data[row]  *  v.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  data[row]  *  v.length;	      final    double[]    dataRow    =    data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	5	None	replace
136	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  [columnDimension];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRow  =  data[row]  [columnDimension];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  data[row]  [columnDimension];	      final    double[]    dataRow    =    data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	5	None	replace
137	[BUG]  [BUGGY]  int  nCols  =  data.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  int  nCols  =  data.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  data.length;	      int    nCols    =    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	4	None	replace
138	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  double[][]  out  =  new  double[v.length];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[v.length];	      double[][]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	13	None	replace
139	[BUG]  [BUGGY]  final  double[]  dataRows  =  this.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  final  double[]  dataRows  =  this.getDataRowDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRows  =  this.getDataRowDimension();	      final    double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
140	[BUG]  [BUGGY]  out[row]  =  row.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];    [BUGGY]  out[row]  =  row.doubleValue();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  row.doubleValue();	      out[row]    =    dataRow.doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	12	None	replace
