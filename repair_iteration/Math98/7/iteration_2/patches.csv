bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    Double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	16	4	replace
2	[BUG]  [BUGGY]  Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    Double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	16	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  <  dataRow.length)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    Double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	16	4	replace
4	[BUG]  [BUGGY]  double  sum  =(nRows  <  dataRow.length)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  <  dataRow.length)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    Double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	16	4	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	Double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    Double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	16	4	replace
6	[BUG]  [BUGGY]  Double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    Double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	16	4	replace
7	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	122	None	add
8	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  Double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  Double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    Double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	122	None	add
9	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  double  sum  =(nCOLs  <  dataRow.length)?  1  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  double  sum  =(nCOLs  <  dataRow.length)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    double  sum  =(nCOLs  <  dataRow.length)?  1  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	122	None	add
10	[BUG]  [BUGGY]  final  double[]  outRow  =  dataRow.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  outRow  =  dataRow.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  outRow  =  dataRow.getDataRowDimension();	  final    double[]    outRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
11	[BUG]  [BUGGY]  final  double[]  outRow  =  v.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  outRow  =  v.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  outRow  =  v.getDataRowDimension();	  final    double[]    outRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
12	[BUG]  [BUGGY]  final  double[]  outRow  =  dataRows.getDataRowDimension();  [CE]  cannot  find  symbol  dataRows  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  outRow  =  dataRows.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  outRow  =  dataRows.getDataRowDimension();	  final    double[]    outRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataRows	110	None	replace
13	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[v.length];	  double[][]    out    =    new    double[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	138	None	replace
14	[BUG]  [BUGGY]  double[]  out  =  new  double[dataRow.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  out  =  new  double[dataRow.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  out  =  new  double[dataRow.length];	  double[][]    out    =    new    double[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	138	None	replace
15	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[v.length];	  double[][]    out    =    new    double[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	138	None	replace
16	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  1)?  dataRow.length  :  0;	  double    sum    =(nCols    <    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	2	replace
17	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  1)?  dataRow.length  :  0;	  double    sum    =(nCols    <    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	2	replace
18	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  0)?  dataRow.length  :  0;	  double    sum    =(nCols    <    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	2	replace
19	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  0)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  0)?  dataRow.length  :  0;	  double    sum    =(nCols    <    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	2	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  0)?  dataRow.length  :  1;	  double    sum    =(nCols    <    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	48	4	replace
21	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  0)?  dataRow.length  :  1;	  double    sum    =(nCols    <    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	48	4	replace
22	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	85	None	add
23	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    Double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	85	None	add
24	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[1];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[1];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	85	None	add
25	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  double  sum  =(ncols  <  dataRow.length)?  0  :  dataRow[0];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  double  sum  =(ncols  <  dataRow.length)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    double  sum  =(ncols  <  dataRow.length)?  0  :  dataRow[0];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	85	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  nCols)?  0  :  dataRow[row];	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	64	4	replace
27	[BUG]  [BUGGY]  double  sum  =(v.length  <  nCols)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  nCols)?  0  :  dataRow[row];	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	64	4	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[0];	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	64	4	replace
29	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[0];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[0];	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	64	4	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[row];	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	64	4	replace
31	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[row];  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[row];	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	64	4	replace
32	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  <  0)?  dataRow.length  :  0;	  double    sum    =(nRows    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	50	2	replace
33	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  <  0)?  dataRow.length  :  0;	  double    sum    =(nRows    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	50	2	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  >  0)?  dataRow.length  :  1;	  double    sum    =(nRows    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	50	4	replace
35	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  >  0)?  dataRow.length  :  1;	  double    sum    =(nRows    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	50	4	replace
36	[BUG]  [BUGGY]  Double  sum  =(nCols  <  0)?  0  :  dataRow.length;  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =(nCols  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double  sum  =(nCols  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    Double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  incompatible  types	70	None	replace
37	[BUG]  [BUGGY]  Double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double  sum  =(nRows  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    Double    sum    =(nCols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  incompatible  types	70	None	replace
38	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension().doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  out[row]  =  this.getRowDimension().doubleValue();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  this.getRowDimension().doubleValue();	  out[row]    =    row.doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	140	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRows  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  dataRows.length;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRows	46	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  nSum  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  nSum	46	None	replace
41	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    <    0)?    0    :    dataRow.length;    double  sum  =(nRows  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	5	None	add
42	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  Double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  Double  sum  =(nRows  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    <    0)?    0    :    dataRow.length;    Double  sum  =(nRows  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	5	None	add
43	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  int  sum  =(nRows  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  int  sum  =(nRows  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    <    0)?    0    :    dataRow.length;    int  sum  =(nRows  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	5	None	add
44	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  long  sum  =(nRows  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  long  sum  =(nRows  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    <    0)?    0    :    dataRow.length;    long  sum  =(nRows  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	5	None	add
45	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  double  sum  =(nRows  <  0)?  0  :  dataRow.length);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  double  sum  =(nRows  <  0)?  0  :  dataRow.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    <    0)?    0    :    dataRow.length;    double  sum  =(nRows  <  0)?  0  :  dataRow.length);	  	non-compiled	[CE]  ';'  expected	5	None	add
46	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  /  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  dataRow.length  /  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  /  1;	  int    nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	75	None	replace
47	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  +  2;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  dataRow.length  +  2;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  +  2;	  int    nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	75	None	replace
48	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  *  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  dataRow.length  *  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  *  1;	  int    nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	75	None	replace
49	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][row  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][row  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length][row  +  1];	  double[][]    out    =    new    double[dataRow.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	33	None	replace
50	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][row  +  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][row  +  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][row  +  2];	  double[][]    out    =    new    double[dataRow.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	33	None	replace
51	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][v.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][v.length  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][v.length  +  1];	  double[][]    out    =    new    double[dataRow.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	33	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  nCols)?  1  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	123	4	replace
53	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  1  :  dataRow[row];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  nCols)?  1  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	123	4	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  dataRow.length)?  1  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	123	4	replace
55	[BUG]  [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  1  :  dataRow[row];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  dataRow.length)?  1  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	123	4	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	123	4	replace
57	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[0];  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	123	4	replace
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	10	None	replace
59	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	For(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	10	None	replace
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  1)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
61	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  1  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  1)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
62	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  <  0)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
63	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  1  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  <  0)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
64	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  0)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
65	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  0)?  1  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  0)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
66	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  For(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	For(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    For(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	79	None	replace
67	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    For(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	79	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  1)?  0  :  dataRow.length;	  double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	2	4	replace
69	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  1)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  1)?  0  :  dataRow.length;	  double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	2	4	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  2)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  2)?  0  :  dataRow.length;	  double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	2	4	replace
71	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  2)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  2)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  2)?  0  :  dataRow.length;	  double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	2	4	replace
72	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  >  0)?  0  :  dataRow.length;	  double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
73	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  0  :  dataRow.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  >  0)?  0  :  dataRow.length;	  double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
74	[BUG]  [BUGGY]  []  dataRow  =  this.getDataRowDimension(v.length);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  []  dataRow  =  this.getDataRowDimension(v.length);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	[]  dataRow  =  this.getDataRowDimension(v.length);	  []    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
75	[BUG]  [BUGGY]  []  dataRow  =  this.getDataRowDimension(row);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  []  dataRow  =  this.getDataRowDimension(row);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	[]  dataRow  =  this.getDataRowDimension(row);	  []    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
76	[BUG]  [BUGGY]  []  dataRow  =  this.getDataRowDimension(v[row]);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  []  dataRow  =  this.getDataRowDimension(v[row]);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	[]  dataRow  =  this.getDataRowDimension(v[row]);	  []    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =  2;	  double    sum    =    1;    double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	23	4	replace
78	[BUG]  [BUGGY]  double  sum  =  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  2;	  double    sum    =    1;    double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	23	4	replace
79	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =  0.0;	  double    sum    =    1;    double    sum    =    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
80	[BUG]  [BUGGY]  double  sum  =  0.0;  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0.0;	  double    sum    =    1;    double    sum    =    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	replace
81	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    j    =    0;    j    <    nCols;    ++)    {    sum    +=    dataRow[j]    *    v[j];    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
82	[BUG]  [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    j    =    0;    j    <    nCols;    ++)    {    sum    +=    dataRow[j]    *    v[j];    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
83	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nRows;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  j  =  0;  j  <  nRows;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  j  =  0;  j  <  nRows;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    j    =    0;    j    <    nCols;    ++)    {    sum    +=    dataRow[j]    *    v[j];    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
84	[BUG]  [BUGGY]  Double  sum  =(nCols  >  0)?  dataRow.length  :  0;  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =(nCols  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double  sum  =(nCols  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    Double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  incompatible  types	52	None	replace
85	[BUG]  [BUGGY]  Double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double  sum  =(nRows  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    Double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  incompatible  types	52	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  >  0)?  dataRow.length  :  1;	  double    sum    =(dataRow.length    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	89	4	replace
87	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  >  0)?  dataRow.length  :  1;	  double    sum    =(dataRow.length    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  AssertionFailedError  	89	4	replace
88	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  [columnDimension];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.data[row]  [columnDimension];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.data[row]  [columnDimension];	  final    double[]    dataRow    =    data[row]    [columnDimension];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	136	None	replace
89	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  [columnDimension];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  v[row]  [columnDimension];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v[row]  [columnDimension];	  final    double[]    dataRow    =    data[row]    [columnDimension];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	136	None	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  v.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  v.length)?  0  :  dataRow[row];	  double    sum    =(v.length    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	68	4	replace
91	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  v.length)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  v.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  v.length)?  0  :  dataRow[row];	  double    sum    =(v.length    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	68	4	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  nRows)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  nRows)?  0  :  dataRow[row];	  double    sum    =(v.length    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	68	4	replace
93	[BUG]  [BUGGY]  double  sum  =(v.length  <  nRows)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  nRows)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  nRows)?  0  :  dataRow[row];	  double    sum    =(v.length    <    dataRow.length)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	68	4	replace
94	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[v.length][row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[v.length][row];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	124	None	replace
95	[BUG]  [BUGGY]  double[]  out  =  new  double[dataRow.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  out  =  new  double[dataRow.length][row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  out  =  new  double[dataRow.length][row];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	124	None	replace
96	[BUG]  [BUGGY]  final  double[]  out  =  new  double[v.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[v.length][row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[v.length][row];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	124	None	replace
97	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][0];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][0];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length][0];	  double[][]    out    =    new    double[dataRow.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	32	None	replace
98	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][1];	  double[][]    out    =    new    double[dataRow.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	32	None	replace
99	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length][0];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[dataRow.length][0];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length][0];	  double[][]    out    =    new    double[dataRow.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	32	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	int  sum  =  1;	  double    sum    =    1;    long    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	27	4	replace
101	[BUG]  [BUGGY]  int  sum  =  1;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  sum  =  1;	  double    sum    =    1;    long    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	27	4	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  sum  [FE]                  AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    long    sum    =    1;    	non-compiled	[CE]  cannot  find  symbol  sum	27	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  sum  [FE]                    AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    long    sum    =    1;    	non-compiled	[CE]  cannot  find  symbol  sum	27	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  1)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  1)?  dataRow.length  :  1;	  double    sum    =(nCols    >    0)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	35	4	replace
105	[BUG]  [BUGGY]  double  sum  =(nCols  >  1)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  1)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  1)?  dataRow.length  :  1;	  double    sum    =(nCols    >    0)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	35	4	replace
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  >  0)?  dataRow.length  :  1;	  double    sum    =(nCols    >    0)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	35	4	replace
107	[BUG]  [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  >  0)?  dataRow.length  :  1;	  double    sum    =(nCols    >    0)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	35	4	replace
108	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[  [CE]  '.class'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[	  	non-compiled	[CE]  '.class'  expected	112	None	add
109	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
110	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[	  	non-compiled	[CE]  '.class'  expected	112	None	add
111	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]	  	non-compiled	[CE]  not  a  statement	112	None	add
112	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
113	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    ++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
114	[BUG]  [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    ++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
115	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    ++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
116	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    double  sum  =(nCols  >  0)?  dataRow[0]  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	100	None	add
117	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  Double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  Double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    Double  sum  =(nCols  >  0)?  dataRow[0]  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	100	None	add
118	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  double  sum  =(ncols  >  0)?  dataRow[0]  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  double  sum  =(ncols  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    double  sum  =(ncols  >  0)?  dataRow[0]  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	100	None	add
119	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  double  sum  =(nCOLs  >  0)?  dataRow[0]  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  double  sum  =(nCOLs  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    double  sum  =(nCOLs  >  0)?  dataRow[0]  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	100	None	add
120	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  int  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  int  sum  =(nCols  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    int  sum  =(nCols  >  0)?  dataRow[0]  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	100	None	add
121	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length][v.length];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	109	None	replace
122	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][dataRow.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[v.length][dataRow.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[v.length][dataRow.length];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	109	None	replace
123	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[dataRow.length][v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length][v.length];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	109	None	replace
124	[BUG]  [BUGGY]  Double  sum  =  1;  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double  sum  =  1;	  double    sum    =    1;    Double    sum    =    1;    	non-compiled	[CE]  incompatible  types	24	None	replace
125	[BUG]  [BUGGY]  Double  sum  =  0;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double  sum  =  0;	  double    sum    =    1;    Double    sum    =    1;    	non-compiled	[CE]  incompatible  types	24	None	replace
126	[BUG]  [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getRowDimension()  +  1;	  int    nCols    =    this.getColumnDimension()    +    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	19	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRows  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  dataRows.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    data[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRows	99	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nCols.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    data[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	99	None	replace
129	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[  [CE]  '.class'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[	  	non-compiled	[CE]  '.class'  expected	96	None	add
130	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
132	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
133	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[	  	non-compiled	[CE]  '.class'  expected	96	None	add
134	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
135	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    >    0)?    dataRow.length    :    0;    double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	88	None	add
136	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  Double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  Double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    >    0)?    dataRow.length    :    0;    Double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	88	None	add
137	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  int  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  int  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    >    0)?    dataRow.length    :    0;    int  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	88	None	add
138	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  double  sum  =(dataRow.length  >  0)?  DataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  double  sum  =(dataRow.length  >  0)?  DataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    >    0)?    dataRow.length    :    0;    double  sum  =(dataRow.length  >  0)?  DataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	88	None	add
139	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  long  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  long  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    >    0)?    dataRow.length    :    0;    long  sum  =(dataRow.length  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	88	None	add
140	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    0)?    0    :    dataRow.length;    double  sum  =(v.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	126	None	add
141	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  Double  sum  =(v.length  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  Double  sum  =(v.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    0)?    0    :    dataRow.length;    Double  sum  =(v.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	126	None	add
142	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  int  sum  =(v.length  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  int  sum  =(v.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    0)?    0    :    dataRow.length;    int  sum  =(v.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	126	None	add
143	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  double  sum  =(v.length  >=  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  double  sum  =(v.length  >=  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    0)?    0    :    dataRow.length;    double  sum  =(v.length  >=  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	126	None	add
144	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  long  sum  =(v.length  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  long  sum  =(v.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    0)?    0    :    dataRow.length;    long  sum  =(v.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	126	None	add
145	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [CE]  '.class'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[	  	non-compiled	[CE]  '.class'  expected	80	None	add
146	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	80	None	add
147	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	80	3	add
149	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	80	3	add
150	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +  [CE]  '.class'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +	  	non-compiled	[CE]  '.class'  expected	80	None	add
151	[BUG]  [BUGGY]  final  int  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  int  nCols  =  this.getRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  int  nCols  =  this.getRowDimension();	  int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	18	None	replace
152	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][columnDimension];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][columnDimension];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length][columnDimension];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	125	None	replace
153	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length][columnDimension];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[dataRow.length][columnDimension];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length][columnDimension];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	125	None	replace
154	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][columnDimension  +  1];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	125	None	replace
155	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	38	None	add
156	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  Double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  Double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    Double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	38	None	add
157	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  2;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  2;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	38	None	add
158	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  double  sum  =(ncols  >  dataRow.length)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  double  sum  =(ncols  >  dataRow.length)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    double  sum  =(ncols  >  dataRow.length)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	38	None	add
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSums;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nSums;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nSums;  i++)  {  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	11	None	replace
160	[BUG]  [BUGGY]  int  nCols  =(nCols  <  0)?  0  :  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =(nCols  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =(nCols  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    int    nCols    =(nCols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	71	None	replace
161	[BUG]  [BUGGY]  int  nCols  =(dataRow  <  0)?  0  :  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =(dataRow  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =(dataRow  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    int    nCols    =(nCols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	71	None	replace
162	[BUG]  [BUGGY]  int  nCols  =(dataRow.length  <  0)?  0  :  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =(dataRow.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =(dataRow.length  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    int    nCols    =(nCols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	71	None	replace
163	[BUG]  [BUGGY]  int  nCols  =(v.length  <  0)?  0  :  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =(v.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =(v.length  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    int    nCols    =(nCols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	71	None	replace
164	[BUG]  [BUGGY]  v[i]  +=  dataRow[i]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  v[i]  +=  dataRow[i]  *  v[i];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	v[i]  +=  dataRow[i]  *  v[i];	          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    double    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	114	None	replace
165	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[dataRow.length  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length  +  1];	  final    double[]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	60	None	replace
166	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[dataRow.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length  -  1];	  final    double[]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	60	None	replace
167	[BUG]  [BUGGY]  final  double[]  out  =  new  double[nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[nRows];	  final    double[]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	60	None	replace
168	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [CE]  '.class'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[	  	non-compiled	[CE]  '.class'  expected	40	None	add
169	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	40	None	add
170	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
171	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +	  	non-compiled	[CE]  '.class'  expected	40	None	add
172	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i	  	non-compiled	[CE]  ']'  expected	40	None	add
173	[BUG]  [BUGGY]  double  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	105	None	replace
174	[BUG]  [BUGGY]  int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	105	None	replace
175	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	105	None	replace
176	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	119	None	replace
177	[BUG]  [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	119	None	replace
178	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	119	None	replace
179	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	119	None	replace
180	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length  -  1];	  double[][]    out    =    new    double[dataRow.length    -    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	93	None	replace
181	[BUG]  [BUGGY]  double[]  out  =  new  double[dataRow.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  out  =  new  double[dataRow.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  out  =  new  double[dataRow.length  -  1];	  double[][]    out    =    new    double[dataRow.length    -    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	93	None	replace
182	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length  -  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length  -  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length  -  2];	  double[][]    out    =    new    double[dataRow.length    -    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	93	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i].  *  v[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i].  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i].  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i].    *    v[i];    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
184	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    dataRow.length    :    0;    double  sum  =(nCols  <  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	47	None	add
185	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  Double  sum  =(nCols  <  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  Double  sum  =(nCols  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    dataRow.length    :    0;    Double  sum  =(nCols  <  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	47	None	add
186	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  double  sum  =(nCOLs  <  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  double  sum  =(nCOLs  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    dataRow.length    :    0;    double  sum  =(nCOLs  <  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	47	None	add
187	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  double  sum  =(ncols  <  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  double  sum  =(ncols  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    dataRow.length    :    0;    double  sum  =(ncols  <  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	47	None	add
188	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  int  sum  =(nCols  <  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  int  sum  =(nCols  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    dataRow.length    :    0;    int  sum  =(nCols  <  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	47	None	add
189	[BUG]  [BUGGY]  out[row]  =  this.data.doubleValue();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  out[row]  =  this.data.doubleValue();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  this.data.doubleValue();	  out[row]    =    data.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  int  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	7	None	replace
191	[BUG]  [BUGGY]  final  Double[]  dataRow  =  this.getDataRowDimension();  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  Double[]  dataRow  =  this.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  Double[]  dataRow  =  this.getDataRowDimension();	  Double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	28	None	replace
192	[BUG]  [BUGGY]  Double[]  dataRow  =  this.getDataRowDimension(v);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double[]  dataRow  =  this.getDataRowDimension(v);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double[]  dataRow  =  this.getDataRowDimension(v);	  Double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	28	None	replace
193	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row][0];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  v[row][0];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v[row][0];	  final    double[]    dataRow    =    data[row][0];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	106	None	replace
194	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][0];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.data[row][0];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.data[row][0];	  final    double[]    dataRow    =    data[row][0];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	106	None	replace
195	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][1];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  data[row][1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  data[row][1];	  final    double[]    dataRow    =    data[row][0];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	106	None	replace
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	97	None	replace
197	[BUG]  [BUGGY]  final  double[]  dataRows  =  v.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRows  =  v.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRows  =  v.getDataRowDimension();	  final    double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
198	[BUG]  [BUGGY]  final  double[]  dataRows  =  getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRows  =  getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRows  =  getDataRowDimension();	  final    double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
199	[BUG]  [BUGGY]  final  double[]  dataRows  =  super.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRows  =  super.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRows  =  super.getDataRowDimension();	  final    double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
200	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  dataRows.length;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	120	None	replace
201	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length][nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[dataRow.length][nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length][nCols];	  final    double[]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	31	None	replace
202	[BUG]  [BUGGY]  double  sum  =  0;  int  sum  =  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  int  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  int  sum  =  0;	  double    sum    =    1;    int    sum    =    1;    	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	25	None	replace
203	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	int  sum  =  0;	  double    sum    =    1;    int    sum    =    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	replace
204	[BUG]  [BUGGY]  int  sum  =  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  sum  =  0;	  double    sum    =    1;    int    sum    =    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	replace
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  1)?  0  :  dataRow.length;	  double    sum    =(v.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	127	4	replace
206	[BUG]  [BUGGY]  double  sum  =(v.length  <  1)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  1)?  0  :  dataRow.length;	  double    sum    =(v.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	127	4	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  2)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  2)?  0  :  dataRow.length;	  double    sum    =(v.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	127	4	replace
208	[BUG]  [BUGGY]  double  sum  =(v.length  <  2)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  2)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  2)?  0  :  dataRow.length;	  double    sum    =(v.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	127	4	replace
209	[BUG]  [BUGGY]  out[row]  =  this.getDataRow(),  dataRow.doubleValue();  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  out[row]  =  this.getDataRow(),  dataRow.doubleValue();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  this.getDataRow(),  dataRow.doubleValue();	  out[row]    =    this.getDataRow().doubleValue();    	non-compiled	[CE]  ';'  expected	92	None	replace
210	[BUG]  [BUGGY]  out[row]  =  this.getDataRow();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  out[row]  =  this.getDataRow();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  this.getDataRow();	  out[row]    =    this.getDataRow().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
211	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension()  /  1;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension()  /  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension()  /  1;	  final    double[]    dataRow    =    this.getDataRowDimension()    +    1;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	111	None	replace
212	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	For(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	9	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  dataRows.length;  i++)  {  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	9	None	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  1;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
215	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  1;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  1;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
217	[BUG]  [BUGGY]  double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  1;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  nCols)?  dataRow.length  :  1;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
219	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  nCols)?  dataRow.length  :  1;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
220	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  v.length);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  v.length);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(row,  v.length);	  final    double[]    dataRow    =    this.getDataRowDimension(row);    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	57	None	replace
221	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v,  row);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v,  row);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(v,  row);	  final    double[]    dataRow    =    this.getDataRowDimension(row);    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	57	None	replace
222	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v.length);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v.length);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(v.length);	  final    double[]    dataRow    =    this.getDataRowDimension(row);    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	57	None	replace
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  <  1)?  0  :  dataRow.length;	  double    sum    =(nCols    <    1)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	4	4	replace
224	[BUG]  [BUGGY]  double  sum  =(nRows  <  1)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  <  1)?  0  :  dataRow.length;	  double    sum    =(nCols    <    1)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	4	4	replace
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  1)?  0  :  dataRow.length  +  1;	  double    sum    =(nCols    <    1)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	4	4	replace
226	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  1)?  0  :  dataRow.length  +  1;	  double    sum    =(nCols    <    1)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	4	4	replace
227	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length][nCols];	  final    double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	30	None	replace
228	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    nCols)?    0    :    dataRow[row];    double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	65	None	add
229	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  Double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  Double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    nCols)?    0    :    dataRow[row];    Double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	65	None	add
230	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  double  sum  =(nCols  <  nCOLs)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  double  sum  =(nCols  <  nCOLs)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    nCols)?    0    :    dataRow[row];    double  sum  =(nCols  <  nCOLs)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	65	None	add
231	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  double  sum  =(ncols  <  nCols)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  double  sum  =(ncols  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    nCols)?    0    :    dataRow[row];    double  sum  =(ncols  <  nCols)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	65	None	add
232	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  int  nCols  >  0)?  dataRow.length  :  0;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  int  nCols  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  >  0)?  dataRow.length  :  0;  int  nCols  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    int    nCols    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  ';'  expected	55	None	replace
233	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  int  nCols  >  0)?  dataRow.length  :  0;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  int  nCols  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  0)?  dataRow.length  :  0;  int  nCols  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    int    nCols    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  ';'  expected	55	None	replace
234	[BUG]  [BUGGY]  double  sum  =(nCols  >  1)?  dataRow.length  :  0;  int  nCols  >  1)?  dataRow.length  :  0;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  1)?  dataRow.length  :  0;  int  nCols  >  1)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  1)?  dataRow.length  :  0;  int  nCols  >  1)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    int    nCols    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  ';'  expected	55	None	replace
235	[BUG]  [BUGGY]  double[]  dataRows  =  v.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  dataRows  =  v.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  dataRows  =  v.getDataRowDimension();	  double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
236	[BUG]  [BUGGY]  Double[]  dataRows  =  this.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double[]  dataRows  =  this.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double[]  dataRows  =  this.getDataRowDimension();	  double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
237	[BUG]  [BUGGY]  double[]  dataRows  =  getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  dataRows  =  getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  dataRows  =  getDataRowDimension();	  double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
238	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCOLs;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  nCOLs  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nCOLs;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCOLs;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCOLs;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  nCOLs	130	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  sum  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCOLs;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  sum	130	None	replace
240	[BUG]  [BUGGY]  double  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  nCols  =  this.getRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  nCols  =  this.getRowDimension();	  double    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	121	None	replace
241	[BUG]  [BUGGY]  final  double  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double  nCols  =  this.getColumnDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double  nCols  =  this.getColumnDimension();	  double    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	121	None	replace
242	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length  +  1];	  final    double[][]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	59	None	replace
243	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[nRows];	  final    double[][]    out    =    new    double[dataRow.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	59	None	replace
244	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  new  double[nRows];	  final    double[]    dataRow    =    v[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	13	None	replace
245	[BUG]  [BUGGY]  double[]  out  =  new  double[dataRow.length  +  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  out  =  new  double[dataRow.length  +  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  out  =  new  double[dataRow.length  +  2];	  double[]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	62	None	replace
246	[BUG]  [BUGGY]  double[]  out  =  new  double[v.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  out  =  new  double[v.length  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  out  =  new  double[v.length  +  1];	  double[]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	62	None	replace
247	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    >    0)?    dataRow.length    :    0;    double  sum  =(nRows  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	49	None	add
248	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  Double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  Double  sum  =(nRows  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    >    0)?    dataRow.length    :    0;    Double  sum  =(nRows  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	49	None	add
249	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  int  sum  =(nRows  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  int  sum  =(nRows  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    >    0)?    dataRow.length    :    0;    int  sum  =(nRows  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	49	None	add
250	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  long  sum  =(nRows  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  long  sum  =(nRows  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    >    0)?    dataRow.length    :    0;    long  sum  =(nRows  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	49	None	add
251	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length  +  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length  +  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length  +  2];	  double[][]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	61	None	replace
252	[BUG]  [BUGGY]  final  double[]  vDataRow  =  v.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  vDataRow  =  v.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  vDataRow  =  v.getDataRowDimension();	  final    double[]    dataRow    =    v.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
253	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.getDataRow();  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  v.getDataRow();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v.getDataRow();	  final    double[]    dataRow    =    v.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	56	None	replace
254	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    1)?    0    :    dataRow.length;    double  sum  =(nCols  <  1)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	3	None	add
255	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  Double  sum  =(nCols  <  1)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  Double  sum  =(nCols  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    1)?    0    :    dataRow.length;    Double  sum  =(nCols  <  1)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	3	None	add
256	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(nCols  >=  1)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(nCols  >=  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    1)?    0    :    dataRow.length;    double  sum  =(nCols  >=  1)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	3	None	add
257	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(ncols  <  1)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(ncols  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    1)?    0    :    dataRow.length;    double  sum  =(ncols  <  1)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	3	None	add
258	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(nCOLs  <  1)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(nCOLs  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    1)?    0    :    dataRow.length;    double  sum  =(nCOLs  <  1)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	3	None	add
259	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  /  v.length;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  data[row]  /  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  data[row]  /  v.length;	  final    double[]    dataRow    =    data[row]    *    v.length;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	135	None	replace
260	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  *  data.length;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  v[row]  *  data.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v[row]  *  data.length;	  final    double[]    dataRow    =    data[row]    *    v.length;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	135	None	replace
261	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.data[row]  *  v.length;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  v.data[row]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v.data[row]  *  v.length;	  final    double[]    dataRow    =    data[row]    *    v.length;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	135	None	replace
262	[BUG]  [BUGGY]  double[]  vRow  =  dataRow.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  vRow  =  dataRow.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  vRow  =  dataRow.getDataRowDimension();	  double[]    vRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
263	[BUG]  [BUGGY]  Double[]  vRow  =  this.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double[]  vRow  =  this.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double[]  vRow  =  this.getDataRowDimension();	  double[]    vRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  <  nCols)?  0  :  dataRow[row];	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	87	4	replace
265	[BUG]  [BUGGY]  double  sum  =(nRows  <  nCols)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  <  nCols)?  0  :  dataRow[row];	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	87	4	replace
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nRows)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  nRows)?  0  :  dataRow[row];	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	87	4	replace
267	[BUG]  [BUGGY]  double  sum  =(nCols  <  nRows)?  0  :  dataRow[row];  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nRows)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  nRows)?  0  :  dataRow[row];	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	87	4	replace
268	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	1	None	add
269	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  Double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  Double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    Double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	1	None	add
270	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  int  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  int  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    int  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	1	None	add
271	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  double  sum  =(dataRow.length  <  0)?  0  :  DataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  double  sum  =(dataRow.length  <  0)?  0  :  DataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    double  sum  =(dataRow.length  <  0)?  0  :  DataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	1	None	add
272	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  long  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  long  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    long  sum  =(dataRow.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	1	None	add
273	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [CE]  '.class'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[	  	non-compiled	[CE]  '.class'  expected	42	None	add
274	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[	  	non-compiled	[CE]  '.class'  expected	42	None	add
275	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	42	None	add
276	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	42	None	add
277	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [CE]  '.class'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[	  	non-compiled	[CE]  '.class'  expected	42	None	add
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  nCols)?  0  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    	compilable	  [FE]  AssertionFailedError  	86	4	replace
279	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[0];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  nCols)?  0  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    	compilable	  [FE]  AssertionFailedError  	86	4	replace
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    	compilable	  [FE]  AssertionFailedError  	86	4	replace
281	[BUG]  [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[0];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    	compilable	  [FE]  AssertionFailedError  	86	4	replace
282	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  v);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  v);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(row,  v);	  final    double[]    dataRow    =    this.getDataRowDimension(v);    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	58	None	replace
283	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v,  nRows);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v,  nRows);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(v,  nRows);	  final    double[]    dataRow    =    this.getDataRowDimension(v);    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	58	None	replace
284	[BUG]  [BUGGY]  int  nCols  =  data.length  -  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  data.length  -  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  data.length  -  1;	  int    nCols    =    data.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	137	None	replace
285	[BUG]  [BUGGY]  int  nCols  =  data.length  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  data.length  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  data.length  +  1;	  int    nCols    =    data.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	137	None	replace
286	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  /  2;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  dataRow.length  /  2;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  /  2;	  int    nCols    =    dataRow.length    -    2;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	76	None	replace
287	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  0;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
288	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  dataRow.length)?  dataRow.length  :  0;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
289	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  0;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
290	[BUG]  [BUGGY]  double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  >  dataRow.length)?  dataRow.length  :  0;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
291	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  nCols)?  dataRow.length  :  0;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
292	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  nCols)?  dataRow.length  :  0;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
293	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  0)?  dataRow.length  :  0;	  double    sum    =(v.length    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
294	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  0)?  dataRow.length  :  0;	  double    sum    =(v.length    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
295	[BUG]  [BUGGY]  final  double[]  dataRow  =  dataRow.length;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  dataRow.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  dataRow.length;	  final    double[]    dataRow    =    v.length;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	14	None	replace
296	[BUG]  [BUGGY]  final  double[]  dataRow  =  dataRow;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  dataRow;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  dataRow;	  final    double[]    dataRow    =    v.length;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	14	None	replace
297	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.data;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  v.data;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v.data;	  final    double[]    dataRow    =    v.length;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	14	None	replace
298	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  *  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension()  *  dataRow.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension()  *  dataRow.length;	  int    nCols    =    this.getColumnDimension()    +    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	103	None	replace
299	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension()  +  row;	  int    nCols    =    this.getColumnDimension()    +    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	103	None	replace
300	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  dataRow.length  -  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  dataRow.length  -  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension()  +  dataRow.length  -  1;	  int    nCols    =    this.getColumnDimension()    +    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	103	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  1)?  dataRow[1]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  1)?  dataRow[1]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
302	[BUG]  [BUGGY]  double  sum  =(nCols  >  1)?  dataRow[1]  :  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  1)?  dataRow[1]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  1)?  dataRow[1]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
303	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  0)?  dataRow[0]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	2	replace
304	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow[0]  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  0)?  dataRow[0]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	101	2	replace
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[1]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  0)?  dataRow[1]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
306	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[1]  :  0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[1]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  0)?  dataRow[1]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
307	[BUG]  [BUGGY]  double  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	98	None	replace
308	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	98	None	replace
309	[BUG]  [BUGGY]  int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	98	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRows  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  dataRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRows	78	None	replace
311	[BUG]  [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	116	None	replace
312	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	116	None	replace
313	[BUG]  [BUGGY]  final  double  sum  =  1;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double  sum  =  1;	  double    sum    =    1;    final    double    sum    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	26	None	replace
314	[BUG]  [BUGGY]  final  double  sum  =  0;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double  sum  =  0;	  double    sum    =    1;    final    double    sum    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	26	None	replace
315	[BUG]  [BUGGY]  final  double  sum  =  1.0;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                  AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double  sum  =  1.0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double  sum  =  1.0;	  double    sum    =    1;    final    double    sum    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	26	None	replace
316	[BUG]  [BUGGY]  final  double  sum  =  2;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                    AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double  sum  =  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double  sum  =  2;	  double    sum    =    1;    final    double    sum    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	26	None	replace
317	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  double  sum  =(nCols  <  0)?  1  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  double  sum  =(nCols  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    1    :    0;    double  sum  =(nCols  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	132	None	add
318	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  Double  sum  =(nCols  <  0)?  1  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  Double  sum  =(nCols  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    1    :    0;    Double  sum  =(nCols  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	132	None	add
319	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  int  sum  =(nCols  <  0)?  1  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  int  sum  =(nCols  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    1    :    0;    int  sum  =(nCols  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	132	None	add
320	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  double  sum  =(nCOLs  <  0)?  1  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  double  sum  =(nCOLs  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    1    :    0;    double  sum  =(nCOLs  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	132	None	add
321	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  double  sum  =(ncols  <  0)?  1  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  double  sum  =(ncols  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    1    :    0;    double  sum  =(ncols  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	132	None	add
322	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  sum  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  sum	8	None	replace
323	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  dataRow[i];  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  dataRow[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    dataRow[i];    }    	non-compiled	[CE]  not  a  statement	84	None	replace
324	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  row[i];  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  row[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  row[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    dataRow[i];    }    	non-compiled	[CE]  not  a  statement	84	None	replace
325	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	63	None	add
326	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  Double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  Double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    Double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	63	None	add
327	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  double  sum  =(dataRow.length  <  nCOLs)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  double  sum  =(dataRow.length  <  nCOLs)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    double  sum  =(dataRow.length  <  nCOLs)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	63	None	add
328	[BUG]  [BUGGY]  double[]  outRow  =  dataRow.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  outRow  =  dataRow.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  outRow  =  dataRow.getDataRowDimension();	  double[]    outRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
329	[BUG]  [BUGGY]  double[]  outRow  =  v.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  outRow  =  v.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  outRow  =  v.getDataRowDimension();	  double[]    outRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
330	[BUG]  [BUGGY]  Double[]  outRow  =  this.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double[]  outRow  =  this.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double[]  outRow  =  this.getDataRowDimension();	  double[]    outRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
331	[BUG]  [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    >    0)?    dataRow.length    :    0;    double  sum  =(v.length  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	90	None	add
332	[BUG]  [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  Double  sum  =(v.length  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  Double  sum  =(v.length  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    >    0)?    dataRow.length    :    0;    Double  sum  =(v.length  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	90	None	add
333	[BUG]  [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  int  sum  =(v.length  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  int  sum  =(v.length  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    >    0)?    dataRow.length    :    0;    int  sum  =(v.length  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	90	None	add
334	[BUG]  [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  long  sum  =(v.length  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  0)?  dataRow.length  :  0;  long  sum  =(v.length  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    >    0)?    dataRow.length    :    0;    long  sum  =(v.length  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	90	None	add
335	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    1;    double  sum  =(nCols  >  0)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	34	None	add
336	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  Double  sum  =(nCols  >  0)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  Double  sum  =(nCols  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    1;    Double  sum  =(nCols  >  0)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	34	None	add
337	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  double  sum  =(ncols  >  0)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  double  sum  =(ncols  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    1;    double  sum  =(ncols  >  0)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	34	None	add
338	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  double  sum  =(nCOLs  >  0)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  double  sum  =(nCOLs  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    1;    double  sum  =(nCOLs  >  0)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	34	None	add
339	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  int  nCols  >  0)?  dataRow.length  :  1;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  int  nCols  >  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    1;    int  nCols  >  0)?  dataRow.length  :  1;	  	non-compiled	[CE]  ';'  expected	34	None	add
340	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [CE]  '.class'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[	  	non-compiled	[CE]  '.class'  expected	77	None	add
341	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	77	None	add
342	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[	  	non-compiled	[CE]  '.class'  expected	77	None	add
343	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	77	3	add
345	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	77	3	add
346	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	36	None	add
347	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  Double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  Double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    Double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	36	None	add
348	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  double  sum  =(ncols  >  dataRow.length)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  double  sum  =(ncols  >  dataRow.length)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    double  sum  =(ncols  >  dataRow.length)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	36	None	add
349	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  double  sum  =(nCOLs  >  dataRow.length)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  0;  double  sum  =(nCOLs  >  dataRow.length)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    double  sum  =(nCOLs  >  dataRow.length)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	36	None	add
350	[BUG]  [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    dataRow.length)?    0    :    dataRow[row];    double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	67	None	add
351	[BUG]  [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  Double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  Double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    dataRow.length)?    0    :    dataRow[row];    Double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	67	None	add
352	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  -  1  +  row;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  dataRow.length  -  1  +  row;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  -  1  +  row;	  int    nCols    =    dataRow.length    -    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	74	None	replace
353	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.data[row]  &  0xff;	  final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	12	None	replace
354	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.data[row];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  v.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  v.data[row];	  final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	12	None	replace
355	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  *  v.length;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.data[row]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.data[row]  *  v.length;	  final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	12	None	replace
356	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  int  nRows  =(nRows  <  0)?  0  :  dataRow.length;  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  int  nRows  =(nRows  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    <    0)?    0    :    dataRow.length;    int  nRows  =(nRows  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	5	None	add
357	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][column];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][column];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[][]  out  =  new  double[dataRow.length][column];	  final    double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	30	None	replace
358	[BUG]  [BUGGY]  double  sum  =  0;  final  double  sum  =  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  final  double  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  final  double  sum  =  0;	  double    sum    =    1;    final    double    sum    =    1;    	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	26	None	replace
359	[BUG]  [BUGGY]  double  sum  =  0;  final  double  sum  =  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  final  double  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  final  double  sum  =  1;	  double    sum    =    1;    final    double    sum    =    1;    	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	26	None	replace
360	[BUG]  [BUGGY]  double  sum  =(ncols  <  0)?  0  :  dataRow.length;  [CE]  cannot  find  symbol  ncols  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(ncols  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(ncols  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    double    sum    =(ncols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  cannot  find  symbol  ncols	73	None	replace
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow.length;	  double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	2	4	replace
362	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow.length;	  double    sum    =(dataRow.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	2	4	replace
363	[BUG]  [BUGGY]  int  i  =  0;  nRows  =  dataRow.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  nRows  =  dataRow.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  nRows  =  dataRow.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  ';'  expected	105	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  1;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
365	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  1;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  2;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
367	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  2;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	39	4	replace
368	[BUG]  [BUGGY]  final  double[]  vRow  =  v.length;  [CE]  incompatible  types  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  vRow  =  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  vRow  =  v.length;	  final    double[]    dataRow    =    v.length;    	non-compiled	[CE]  incompatible  types	14	None	replace
369	[BUG]  [BUGGY]  int  i  =  0;  nRows  =  dataRow.length;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  nRows  =  dataRow.length;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  nRows  =  dataRow.length;  i++)  {  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  ';'  expected	98	None	replace
370	[BUG]  [BUGGY]  final  double[]  out  =  new  double[dataRow.length][column];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  out  =  new  double[dataRow.length][column];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  out  =  new  double[dataRow.length][column];	  final    double[]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	31	None	replace
371	[BUG]  [BUGGY]  Double[][]  out  =  new  double[dataRow.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double[][]  out  =  new  double[dataRow.length][row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double[][]  out  =  new  double[dataRow.length][row];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	124	None	replace
372	[BUG]  [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  double  sum  =(nCOLs  >  dataRow.length)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  dataRow.length)?  dataRow.length  :  1;  double  sum  =(nCOLs  >  dataRow.length)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    1;    double  sum  =(nCOLs  >  dataRow.length)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	38	None	add
373	[BUG]  [BUGGY]  double  sum  =  0;  long  sum  =  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  long  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  long  sum  =  0;	  double    sum    =    1;    long    sum    =    1;    	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	27	None	replace
374	[BUG]  [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  double  sum  =(nCOLs  <  nCols)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  nCols)?  0  :  dataRow[row];  double  sum  =(nCOLs  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    nCols)?    0    :    dataRow[row];    double  sum  =(nCOLs  <  nCols)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	65	None	add
375	[BUG]  [BUGGY]  double  sum  =(ncols  >  0)?  dataRow.length  :  0;  [CE]  cannot  find  symbol  ncols  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(ncols  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(ncols  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    double    sum    =(ncols    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  cannot  find  symbol  ncols	53	None	replace
376	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i].length;  }  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i].length;  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i].length;  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	123	4	replace
378	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[0];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  nCols)?  1  :  dataRow[0];	  double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	123	4	replace
379	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  dataRow[i];  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  dataRow[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    dataRow[i];    }    	non-compiled	[CE]  >  expected	84	None	replace
380	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  data[i]  *  dataRow[i];  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  data[i]  *  dataRow[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  data[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    dataRow[i];    }    	non-compiled	[CE]  not  a  statement	84	None	replace
381	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	77	None	add
382	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	77	None	add
383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	77	3	add
384	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	77	3	add
385	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }	  	non-compiled	[CE]  not  a  statement	77	None	add
386	[BUG]  [BUGGY]  double  sum  =(dataRow  <  0)?  1  :  0;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  0)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	133	None	replace
387	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  0)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
388	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  1  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  0)?  1  :  0;	  double    sum    =(nCols    <    0)?    1    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	133	2	replace
389	[BUG]  [BUGGY]  if(dataRow!=  null)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  if(dataRow!=  null)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	if(dataRow!=  null)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
390	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][2];	  double[][]    out    =    new    double[dataRow.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	32	None	replace
391	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	80	None	add
392	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	80	None	add
393	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	80	None	add
394	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *	  	non-compiled	[CE]  not  a  statement	80	None	add
395	[BUG]  [BUGGY]  out[row]  =  value.doubleValue();  [CE]  cannot  find  symbol  value  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  out[row]  =  value.doubleValue();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  value.doubleValue();	  out[row]    =    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  value	20	None	replace
396	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  double  sum  =(ncols  <  dataRow.length)?  1  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  1  :  dataRow[row];  double  sum  =(ncols  <  dataRow.length)?  1  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    1    :    dataRow[row];    double  sum  =(ncols  <  dataRow.length)?  1  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	122	None	add
397	[BUG]  [BUGGY]  double  sum  =(nCOLs  <  0)?  0  :  dataRow.length;  [CE]  cannot  find  symbol  nCOLs  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCOLs  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCOLs  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    double    sum    =(nCOLs    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  cannot  find  symbol  nCOLs	72	None	replace
398	[BUG]  [BUGGY]  double  sum  =  2;  int  sum  =  2;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  2;  int  sum  =  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  2;  int  sum  =  2;	  double    sum    =    1;    int    sum    =    1;    	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	25	None	replace
399	[BUG]  [BUGGY]  double  sum  =(nCOLs  >  0)?  dataRow.length  :  0;  [CE]  cannot  find  symbol  nCOLs  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCOLs  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCOLs  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    double    sum    =(nCOLs    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  cannot  find  symbol  nCOLs	54	None	replace
400	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  double  sum  =(dataRow.length  <  ncols)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row];  double  sum  =(dataRow.length  <  ncols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    double  sum  =(dataRow.length  <  ncols)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	63	None	add
401	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  int  nRows  >  0)?  dataRow.length  :  0;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  dataRow.length  :  0;  int  nRows  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    >    0)?    dataRow.length    :    0;    int  nRows  >  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  ';'  expected	49	None	add
402	[BUG]  [BUGGY]  double  sum  =(dataRow  <  0)?  0  :  dataRow.length  +  1;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow  <  0)?  0  :  dataRow.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  0)?  0  :  dataRow.length  +  1;	  double    sum    =(dataRow    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	104	None	replace
403	[BUG]  [BUGGY]  double  sum  =(dataRow!=  0)?  0  :  dataRow.length;  [CE]  incomparable  types:  double[]  and  int  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow!=  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow!=  0)?  0  :  dataRow.length;	  double    sum    =(dataRow    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  incomparable  types:  double[]  and  int	104	None	replace
404	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  *  dataRow.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  *  dataRow.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][columnDimension  *  dataRow.length];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	125	None	replace
405	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  int  nCols  =(nCols  <  0)?  1  :  0;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  1  :  0;  int  nCols  =(nCols  <  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    1    :    0;    int  nCols  =(nCols  <  0)?  1  :  0;	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	132	None	add
406	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length  -  1  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length  -  1  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length  -  1  +  1];	  double[][]    out    =    new    double[dataRow.length    -    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	93	None	replace
407	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  double  sum  =(nCols  <  0)?  dataRow.length  :  1;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  double  sum  =(nCols  <  0)?  dataRow.length  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    dataRow.length    :    0;    double  sum  =(nCols  <  0)?  dataRow.length  :  1;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	47	None	add
408	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [CE]  >  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	10	None	replace
409	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  dataRows;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	10	None	replace
410	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  int  nCols  =  0)?  dataRow.length  :  0;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  0;  int  nCols  =  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  0)?  dataRow.length  :  0;  int  nCols  =  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    int    nCols    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  ';'  expected	55	None	replace
411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	42	3	add
412	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	42	3	add
413	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	42	None	add
414	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	42	None	add
415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	42	4	add
416	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	42	4	add
417	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *	  	non-compiled	[CE]  not  a  statement	42	None	add
418	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	40	3	add
419	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	40	3	add
420	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	40	None	add
421	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	40	None	add
422	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *	  	non-compiled	[CE]  not  a  statement	40	None	add
423	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[	  	non-compiled	[CE]  not  a  statement	40	None	add
424	[BUG]  [BUGGY]  final  double[]  v  =  data[row];  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  v  =  data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  v  =  data[row];	  final    double[]    dataRow    =    v[row];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	13	None	replace
425	[BUG]  [BUGGY]  final  double[]  vRow  =  data[row];  [CE]  cannot  find  symbol  sum  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  vRow  =  data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  vRow  =  data[row];	  final    double[]    dataRow    =    v[row];    	non-compiled	[CE]  cannot  find  symbol  sum	13	None	replace
426	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  nCols)?  dataRow.length  :  0;	  double    sum    =(nCols    <    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	2	replace
427	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  nCols)?  dataRow.length  :  0;	  double    sum    =(nCols    <    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	48	2	replace
428	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  int  nCols  =(nCols  <  0)?  0  :  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  int  nCols  =(nCols  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  0)?  0  :  dataRow.length;  int  nCols  =(nCols  <  0)?  0  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    int    nCols    =(nCols    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	71	None	replace
429	[BUG]  [BUGGY]  if(dataRow!=  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  if(dataRow!=  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	if(dataRow!=  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    double    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
430	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  double  sum  =(nCols  >  0)?  dataRow.length  :  2;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  double  sum  =(nCols  >  0)?  dataRow.length  :  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow.length    :    1;    double  sum  =(nCols  >  0)?  dataRow.length  :  2;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	34	None	add
431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[1];	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	64	4	replace
432	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[1];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[1];	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	64	4	replace
433	[BUG]  [BUGGY]  if(dataRow  ==  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  if(dataRow  ==  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	if(dataRow  ==  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
434	[BUG]  [BUGGY]  if(dataRow  ==  null)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  if(dataRow  ==  null)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	if(dataRow  ==  null)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
435	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  1;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.data[row]  -  1;	  final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	12	None	replace
436	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	9	None	replace
437	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  -  1  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  dataRow.length  -  1  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  -  1  +  1;	  int    nCols    =    dataRow.length    -    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	74	None	replace
438	[BUG]  [BUGGY]  final  double[]  vRow  =  data[row]  *  v.length;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  vRow  =  data[row]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  vRow  =  data[row]  *  v.length;	  final    double[]    dataRow    =    data[row]    *    v.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	135	None	replace
439	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  *  v.length  +  1;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  data[row]  *  v.length  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  data[row]  *  v.length  +  1;	  final    double[]    dataRow    =    data[row]    *    v.length;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	135	None	replace
440	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length  *  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length  *  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length  *  1];	  double[][]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	61	None	replace
441	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length  +  3];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length  +  3];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length  +  3];	  double[][]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	61	None	replace
442	[BUG]  [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(v.length  >=  dataRow.length)?  0  :  dataRow[row];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  dataRow.length)?  0  :  dataRow[row];  double  sum  =(v.length  >=  dataRow.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    dataRow.length)?    0    :    dataRow[row];    double  sum  =(v.length  >=  dataRow.length)?  0  :  dataRow[row];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	67	None	add
443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  >  0)?  dataRow[0]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
444	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow[0]  :  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  >  0)?  dataRow[0]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
445	[BUG]  [BUGGY]  final  double[]  vRow  =  v.getDataRowDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  vRow  =  v.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  vRow  =  v.getDataRowDimension();	  final    double[]    dataRow    =    v.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
446	[BUG]  [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nRows;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nRows;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nRows;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    j    =    0;    j    <    nCols;    ++)    {    sum    +=    dataRow[j]    *    v[j];    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
448	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
449	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	96	None	add
450	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	96	None	add
451	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	96	None	add
452	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  int  nCols  >  0)?  dataRow[0]  :  0;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  0;  int  nCols  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    int  nCols  >  0)?  dataRow[0]  :  0;	  	non-compiled	[CE]  ';'  expected	100	None	add
453	[BUG]  [BUGGY]  Double[][]  out  =  new  double[dataRow.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double[][]  out  =  new  double[dataRow.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double[][]  out  =  new  double[dataRow.length];	  double[][]    out    =    new    double[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	138	None	replace
454	[BUG]  [BUGGY]  double[][]  out  =  new  double[DataRow.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[DataRow.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[DataRow.length];	  double[][]    out    =    new    double[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	138	None	replace
455	[BUG]  [BUGGY]  double[]  out  =  new  double[dataRow.length  *  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  out  =  new  double[dataRow.length  *  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  out  =  new  double[dataRow.length  *  1];	  double[]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	62	None	replace
456	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[0];  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[0];  double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[0];	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	85	None	add
457	[BUG]  [BUGGY]  double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row],  maxColSum;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row],  maxColSum;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row],  maxColSum;	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	87	None	replace
458	[BUG]  [BUGGY]  double  sum  =(dataRow  <  0)?  0  :  dataRow[0];  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow  <  0)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  0)?  0  :  dataRow[0];	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	87	None	replace
459	[BUG]  [BUGGY]  double  sum  =(dataRow  <  nCols)?  0  :  dataRow.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow  <  nCols)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  nCols)?  0  :  dataRow.length;	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	87	None	replace
460	[BUG]  [BUGGY]  double  nCols  =  this.getColumnDimension()  +  dataRow.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  nCols  =  this.getColumnDimension()  +  dataRow.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  nCols  =  this.getColumnDimension()  +  dataRow.length;	  double    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	121	None	replace
461	[BUG]  [BUGGY]  double  nCols  =  this.getColumnDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  nCols  =  this.getColumnDimension()  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  nCols  =  this.getColumnDimension()  +  1;	  double    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	121	None	replace
462	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  0)?  0  :  dataRow[0];	  double    sum    =(nCols    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	66	4	replace
463	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow[0];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  0  :  dataRow[0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  0)?  0  :  dataRow[0];	  double    sum    =(nCols    <    nCols)?    0    :    dataRow[row];    	compilable	  [FE]  AssertionFailedError  	66	4	replace
464	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	120	None	replace
465	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][dataRow.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][dataRow.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][dataRow.length];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	109	None	replace
466	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	112	4	add
467	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	112	4	add
468	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	112	4	add
469	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	112	4	add
470	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	112	None	add
471	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	112	None	add
472	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	112	None	add
473	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  0;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
474	[BUG]  [BUGGY]  double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  >  nCols)?  dataRow.length  :  0;	  double    sum    =(nCols    >    dataRow.length)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
475	[BUG]  [BUGGY]  final  double[]  outRow  =  getDataRowDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  outRow  =  getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  outRow  =  getDataRowDimension();	  final    double[]    outRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
476	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i].length;  }  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i].length;  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i].length;  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	replace
477	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	116	4	replace
478	[BUG]  [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	116	4	replace
479	[BUG]  [BUGGY]  double  sum  =  1;  int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  1;  int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  1;  int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	116	None	replace
480	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	46	None	replace
481	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  sum  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  sum	46	None	replace
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[1];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    	compilable	  [FE]  AssertionFailedError  	86	4	replace
483	[BUG]  [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[1];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  dataRow.length)?  0  :  dataRow[1];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[0];    	compilable	  [FE]  AssertionFailedError  	86	4	replace
484	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =  dataRow.length;	  double    sum    =    1;    double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	23	4	replace
485	[BUG]  [BUGGY]  double  sum  =  dataRow.length;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  dataRow.length;	  double    sum    =    1;    double    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	23	4	replace
486	[BUG]  [BUGGY]  double  sum  =(dataRow  <  1)?  0  :  dataRow.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow  <  1)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  1)?  0  :  dataRow.length;	  double    sum    =(nCols    <    1)?    0    :    dataRow.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	4	None	replace
487	[BUG]  [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    ++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
488	[BUG]  [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  0;  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    ++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
489	[BUG]  [BUGGY]  []  dataRow  =  this.getDataRowDimension(dataRow);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  []  dataRow  =  this.getDataRowDimension(dataRow);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	[]  dataRow  =  this.getDataRowDimension(dataRow);	  []    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  >  0)?  dataRow[0]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
491	[BUG]  [BUGGY]  double  sum  =(v.length  >  0)?  dataRow[0]  :  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  >  0)?  dataRow[0]  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  >  0)?  dataRow[0]  :  0;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
492	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  0)?  dataRow[0]  :  1;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
493	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow[0]  :  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  0)?  dataRow[0]  :  1;	  double    sum    =(nCols    >    0)?    dataRow[0]    :    0;    	compilable	  [FE]  AssertionFailedError  	101	4	replace
494	[BUG]  [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    ++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
495	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  ++)  {  sum  +=  data[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    ++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
496	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	77	None	add
497	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *	  	non-compiled	[CE]  not  a  statement	77	None	add
498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  nCols)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  nCols)?  0  :  dataRow.length;	  double    sum    =(v.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	127	4	replace
499	[BUG]  [BUGGY]  double  sum  =(v.length  <  nCols)?  0  :  dataRow.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  nCols)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  nCols)?  0  :  dataRow.length;	  double    sum    =(v.length    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	127	4	replace
500	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]	  	non-compiled	[CE]  not  a  statement	112	None	add
501	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  data[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	43	None	replace
502	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    data[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	99	None	replace
503	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows  +  1;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  i  <  nRows  +  1;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nRows  +  1;  i++)  {  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	98	None	replace
504	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  +  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  dataRow.length  +  this.getColumnDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  +  this.getColumnDimension();	  int    nCols    =    this.getColumnDimension()    +    dataRow.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	103	None	replace
505	[BUG]  [BUGGY]  double  sum  =(dataRows  <  nCols)?  0  :  dataRow[row];  [CE]  cannot  find  symbol  dataRows  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRows  <  nCols)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRows  <  nCols)?  0  :  dataRow[row];	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	non-compiled	[CE]  cannot  find  symbol  dataRows	87	None	replace
506	[BUG]  [BUGGY]  double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row].length;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row].length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow  <  nCols)?  0  :  dataRow[row].length;	  double    sum    =(dataRow    <    nCols)?    0    :    dataRow[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	87	None	replace
507	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  3)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(v.length  <  3)?  dataRow.length  :  0;	  double    sum    =(v.length    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
508	[BUG]  [BUGGY]  double  sum  =(v.length  <  3)?  dataRow.length  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  3)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(v.length  <  3)?  dataRow.length  :  0;	  double    sum    =(v.length    >    0)?    dataRow.length    :    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	2	replace
509	[BUG]  [BUGGY]  int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nRows  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	128	None	replace
510	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  data[j]  *  v[j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  data[j]  *  v[j];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  data[j]  *  v[j];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    j    =    0;    j    <    nCols;    ++)    {    sum    +=    dataRow[j]    *    v[j];    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
511	[BUG]  [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  this.getColumnDimension();  for(int  j  =  0;  j  <  nCols;  ++)  {  sum  +=  dataRow[j]  *  v[j];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    j    =    0;    j    <    nCols;    ++)    {    sum    +=    dataRow[j]    *    v[j];    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
512	[BUG]  [BUGGY]  out[row]  =  dataData.doubleValue();  [CE]  cannot  find  symbol  dataData  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  out[row]  =  dataData.doubleValue();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  dataData.doubleValue();	  out[row]    =    data.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  dataData	22	None	replace
513	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	81	None	replace
514	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  >  0)?  dataRow.length  :  2;	  double    sum    =(nCols    >    0)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	35	4	replace
515	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  0)?  dataRow.length  :  2;	  double    sum    =(nCols    >    0)?    dataRow.length    :    1;    	compilable	  [FE]  AssertionFailedError  	35	4	replace
516	[BUG]  [BUGGY]  []  dataRows  =  this.getDataRowDimension();  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  []  dataRows  =  this.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	[]  dataRows  =  this.getDataRowDimension();	  []    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
517	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[v.length];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  new  double[v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  new  double[v.length];	  final    double[]    dataRow    =    v.length;    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	14	None	replace
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  long  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	long  sum  =  1;	  double    sum    =    1;    long    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	27	4	replace
519	[BUG]  [BUGGY]  long  sum  =  1;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  long  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	long  sum  =  1;	  double    sum    =    1;    long    sum    =    1;    	compilable	  [FE]  AssertionFailedError  	27	4	replace
520	[BUG]  [BUGGY]  double[]  out  =  new  double[nRows  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[]  out  =  new  double[nRows  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[]  out  =  new  double[nRows  +  1];	  double[]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	62	None	replace
521	[BUG]  [BUGGY]  double  sum  =(dataRows  <  0)?  0  :  dataRow.length;  [CE]  cannot  find  symbol  dataRows  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRows  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRows  <  0)?  0  :  dataRow.length;	  double    sum    =(dataRow    <    0)?    0    :    dataRow.length;    	non-compiled	[CE]  cannot  find  symbol  dataRows	104	None	replace
522	[BUG]  [BUGGY]  final  double[]  outRow  =(this.getDataRowDimension()!=  null)?  this.getDataRowDimension()  :  dataRow;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  outRow  =(this.getDataRowDimension()!=  null)?  this.getDataRowDimension()  :  dataRow;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  outRow  =(this.getDataRowDimension()!=  null)?  this.getDataRowDimension()  :  dataRow;	  final    double[]    outRow    =    this.getDataRowDimension();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
523	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  [columnDimension].length;  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  data[row]  [columnDimension].length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  data[row]  [columnDimension].length;	  final    double[]    dataRow    =    data[row]    [columnDimension];    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	136	None	replace
524	[BUG]  [BUGGY]  double[][]  out  =  new  double[data.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[data.length][row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[data.length][row];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	124	None	replace
525	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[v.length][row  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[v.length][row  +  1];	  double[][]    out    =    new    double[dataRow.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	33	None	replace
526	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][row  *  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][row  *  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][row  *  1];	  double[][]    out    =    new    double[dataRow.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	33	None	replace
527	[BUG]  [BUGGY]  final  double  sum  =  dataRow.length;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double  sum  =  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double  sum  =  dataRow.length;	  double    sum    =    1;    final    double    sum    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	26	None	replace
528	[BUG]  [BUGGY]  final  double  sum  =  dataRow.length  -  1;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double  sum  =  dataRow.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double  sum  =  dataRow.length  -  1;	  double    sum    =    1;    final    double    sum    =    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	26	None	replace
529	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows  +  1;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  i  =  0;  i  <  nRows  +  1;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  i  =  0;  i  <  nRows  +  1;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	105	None	replace
530	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	10	None	replace
531	[BUG]  [BUGGY]  int  nCols  =  data[row].length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  data[row].length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  data[row].length;	  int    nCols    =    data.length;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	137	None	replace
532	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	120	None	replace
533	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  int  nCols  =(nCols  <  0)?  dataRow.length  :  0;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  dataRow.length  :  0;  int  nCols  =(nCols  <  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    0)?    dataRow.length    :    0;    int  nCols  =(nCols  <  0)?  dataRow.length  :  0;	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	47	None	add
534	[BUG]  [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  Double  sum  =(nCols  >  0)?  dataRow.length  :  0;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  >  0)?  dataRow.length  :  1;  Double  sum  =(nCols  >  0)?  dataRow.length  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  >  0)?  dataRow.length  :  1;  Double  sum  =(nCols  >  0)?  dataRow.length  :  0;	  double    sum    =(nCols    >    0)?    dataRow.length    :    0;    Double    sum    =(nCols    >    0)?    dataRow.length    :    0;    	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	52	None	replace
535	[BUG]  [BUGGY]  Double[]  dataRow  =  v.getDataRowDimension();  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  Double[]  dataRow  =  v.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	Double[]  dataRow  =  v.getDataRowDimension();	  Double[]    dataRow    =    this.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	28	None	replace
536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
537	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
538	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    dataRow[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  dataRow[i]	  	non-compiled	[CE]  not  a  statement	96	None	add
539	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  sum  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  sum	78	None	replace
540	[BUG]  [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  double  sum  =(nRows  >=  0)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  <  0)?  0  :  dataRow.length;  double  sum  =(nRows  >=  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nRows    <    0)?    0    :    dataRow.length;    double  sum  =(nRows  >=  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	5	None	add
541	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nRows  >  0)?  0  :  dataRow.length;	  double    sum    =(nRows    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
542	[BUG]  [BUGGY]  double  sum  =(nRows  >  0)?  0  :  dataRow.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nRows  >  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nRows  >  0)?  0  :  dataRow.length;	  double    sum    =(nRows    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
543	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][v.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][v.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][v.length  -  1];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	109	None	replace
544	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  v.length);  [CE]  cannot  find  symbol  sum  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  out[row]  =  this.getEntry(row,  v.length);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  this.getEntry(row,  v.length);	  out[row]    =    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sum	20	None	replace
545	[BUG]  [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  int  v.length  <  0)?  0  :  dataRow.length;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(v.length  <  0)?  0  :  dataRow.length;  int  v.length  <  0)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(v.length    <    0)?    0    :    dataRow.length;    int  v.length  <  0)?  0  :  dataRow.length;	  	non-compiled	[CE]  ';'  expected	126	None	add
546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  1  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =(nCols  <  0)?  1  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    double    sum    =(ncols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	73	4	replace
547	[BUG]  [BUGGY]  double  sum  =(nCols  <  0)?  1  :  dataRow.length;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  0)?  1  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCols  <  0)?  1  :  dataRow.length;	  double    sum    =(nCols    <    0)?    0    :    dataRow.length;    double    sum    =(ncols    <    0)?    0    :    dataRow.length;    	compilable	  [FE]  AssertionFailedError  	73	4	replace
548	[BUG]  [BUGGY]  out[row]  =  dataRow.getDataRow().doubleValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  out[row]  =  dataRow.getDataRow().doubleValue();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	out[row]  =  dataRow.getDataRow().doubleValue();	  out[row]    =    this.getDataRow().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
549	[BUG]  [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(nCols  <  2)?  0  :  dataRow.length;  [CE]  variable  sum  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCols  <  1)?  0  :  dataRow.length;  double  sum  =(nCols  <  2)?  0  :  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double    sum    =(nCols    <    1)?    0    :    dataRow.length;    double  sum  =(nCols  <  2)?  0  :  dataRow.length;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(double[])	3	None	add
550	[BUG]  [BUGGY]  final  double[]  dataRow  =(v.length  <  nRows)?  this.getDataRowDimension()  :  v.getDataRowDimension();  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =(v.length  <  nRows)?  this.getDataRowDimension()  :  v.getDataRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =(v.length  <  nRows)?  this.getDataRowDimension()  :  v.getDataRowDimension();	  final    double[]    dataRow    =    v.getDataRowDimension();    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	56	None	replace
551	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[v.length  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[v.length  +  1];	  double[][]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	61	None	replace
552	[BUG]  [BUGGY]  double[][]  out  =  new  double[nRows  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[nRows  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[nRows  +  1];	  double[][]    out    =    new    double[dataRow.length    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	61	None	replace
553	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  -  4;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  int  nCols  =  dataRow.length  -  4;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	int  nCols  =  dataRow.length  -  4;	  int    nCols    =    dataRow.length    -    2;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	76	None	replace
554	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][0];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[v.length][0];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[v.length][0];	  double[][]    out    =    new    double[dataRow.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	32	None	replace
555	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	80	3	add
556	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	80	3	add
557	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[v.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[v.length  -  1];	  double[][]    out    =    new    double[dataRow.length    -    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	93	None	replace
558	[BUG]  [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row].length;  [CE]  double  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row].length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(dataRow.length  <  nCols)?  0  :  dataRow[row].length;	  double    sum    =(dataRow.length    <    nCols)?    0    :    dataRow[row];    	non-compiled	[CE]  double  cannot  be  dereferenced	64	None	replace
559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	add	double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	116	4	replace
560	[BUG]  [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  double    sum    =    1;    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	116	4	replace
561	[BUG]  [BUGGY]  double[][]  out  =  new  double[data.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[data.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[data.length];	  double[][]    out    =    new    double[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	138	None	replace
562	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  row);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  row);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(row,  row);	  final    double[]    dataRow    =    this.getDataRowDimension(row);    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	57	None	replace
563	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  column);  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  column);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(row,  column);	  final    double[]    dataRow    =    this.getDataRowDimension(row);    	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	57	None	replace
564	[BUG]  [BUGGY]  double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[row];  [CE]  cannot  find  symbol  nCOLs  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double  sum  =(nCOLs  <  dataRow.length)?  0  :  dataRow[row];	  double    sum    =(nCols    <    dataRow.length)?    0    :    dataRow[row];    double    sum    =(nCOLs    <    dataRow.length)?    0    :    dataRow[row];    	non-compiled	[CE]  cannot  find  symbol  nCOLs	102	None	replace
565	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][columnDimension];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[v.length][columnDimension];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[v.length][columnDimension];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	125	None	replace
566	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];      [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	782	782	2	replace	double[][]  out  =  new  double[dataRow.length][columnDimension  -  1];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	125	None	replace
