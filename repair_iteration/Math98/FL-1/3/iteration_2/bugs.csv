bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      int  nSum  =  this.getColumnDimension();  int  nSum  =  this.getColumnDimension();  [CE]  variable  nSum  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      int  nSum  =  this.getColumnDimension();  int  nSum  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        int    nSum    =    this.getColumnDimension();    int  nSum  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nSum  is  already  defined  in  method  operate(double[])	19	None	add
2	[BUG]  [BUGGY]      int  nSum  =  this.getColumnDimension();  int  nSum  =  this.getRowDimension();  [CE]  variable  nSum  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      int  nSum  =  this.getColumnDimension();  int  nSum  =  this.getRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        int    nSum    =    this.getColumnDimension();    int  nSum  =  this.getRowDimension();	  	non-compiled	[CE]  variable  nSum  is  already  defined  in  method  operate(double[])	19	None	add
3	[BUG]  [BUGGY]      int  nSum  =  this.getColumnDimension();  Integer  nSum  =  this.getColumnDimension();  [CE]  variable  nSum  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      int  nSum  =  this.getColumnDimension();  Integer  nSum  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        int    nSum    =    this.getColumnDimension();    Integer  nSum  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nSum  is  already  defined  in  method  operate(double[])	19	None	add
4	[BUG]  [BUGGY]      int  nSum  =  this.getColumnDimension();  int  nRows  =  this.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      int  nSum  =  this.getColumnDimension();  int  nRows  =  this.getRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        int    nSum    =    this.getColumnDimension();    int  nRows  =  this.getRowDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	19	None	add
5	[BUG]  [BUGGY]  int  nSum  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  nSum  =  this.getRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  nSum  =  this.getRowDimension();	      int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
6	[BUG]  [BUGGY]  int  nSum  =  this.getSelectedRowDimension();  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  nSum  =  this.getSelectedRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  nSum  =  this.getSelectedRowDimension();	      int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
7	[BUG]  [BUGGY]  int  nSum  =  this.getSelectedColumnDimension();  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  nSum  =  this.getSelectedColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  nSum  =  this.getSelectedColumnDimension();	      int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
8	[BUG]  [BUGGY]  double  v  =  this.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  double  v  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	double  v  =  this.getColumnDimension();	      double    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
9	[BUG]  [BUGGY]  double  v  =  this.getRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  double  v  =  this.getRowDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	double  v  =  this.getRowDimension()  +  1;	      double    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
10	[BUG]  [BUGGY]  Double  v  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  Double  v  =  this.getRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	Double  v  =  this.getRowDimension();	      double    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  if(v.length!=  nRows)  {  if(v.length!=  nRows)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows)  {  if(v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows)    {    if(v.length!=  nRows)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
12	[BUG]  [BUGGY]  if(v.length!=  nRows)  {  if(v.length  >=  nRows)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows)  {  if(v.length  >=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows)    {    if(v.length  >=  nRows)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
13	[BUG]  [BUGGY]  if(v.length!=  nRows)  {  if(v.length  ==  nRows)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows)  {  if(v.length  ==  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows)    {    if(v.length  ==  nRows)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
14	[BUG]  [BUGGY]  if(v.length!=  nRows)  {  if(v.length  >>  nRows)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows)  {  if(v.length  >>  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows)    {    if(v.length  >>  nRows)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
15	[BUG]  [BUGGY]  final  int  nSum  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nSum  =  this.getRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nSum  =  this.getRowDimension();	      final    int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
16	[BUG]  [BUGGY]  final  int  nSum  =  this.getSelectedRowDimension();  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nSum  =  this.getSelectedRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nSum  =  this.getSelectedRowDimension();	      final    int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]  final  int  nSum  =  this.getSelectionDimension();  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nSum  =  this.getSelectionDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nSum  =  this.getSelectionDimension();	      final    int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
18	[BUG]  [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length!=  nRows  ||  v.length!=  nCols)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length!=  nRows  ||  v.length!=  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows    ||    v.length!=    nCols)    {    if(v.length!=  nRows  ||  v.length!=  nCols)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
19	[BUG]  [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length  >=  nRows  ||  v.length!=  nCols)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length  >=  nRows  ||  v.length!=  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows    ||    v.length!=    nCols)    {    if(v.length  >=  nRows  ||  v.length!=  nCols)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
20	[BUG]  [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length!=  nRows  ||  v.length  >=  nCols)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length!=  nRows  ||  v.length  >=  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows    ||    v.length!=    nCols)    {    if(v.length!=  nRows  ||  v.length  >=  nCols)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
21	[BUG]  [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length!=  nRows  ||  v.length  ==  nCols)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length!=  nRows  ||  v.length  ==  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows    ||    v.length!=    nCols)    {    if(v.length!=  nRows  ||  v.length  ==  nCols)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
22	[BUG]  [BUGGY]  final  int  v  =  this.getColumnDimension();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  v  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  v  =  this.getColumnDimension();	      final    int    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
23	[BUG]  [BUGGY]  final  int  v  =  this.getRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  v  =  this.getRowDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  v  =  this.getRowDimension()  +  1;	      final    int    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  if(v.length  ==  nRows)  {  if(v.length  ==  nRows)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nRows)  {  if(v.length  ==  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nRows)    {    if(v.length  ==  nRows)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
25	[BUG]  [BUGGY]  if(v.length  ==  nRows)  {  if(v.length!=  nRows)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nRows)  {  if(v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nRows)    {    if(v.length!=  nRows)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
26	[BUG]  [BUGGY]  if(v.length  ==  nRows)  {  if(v.length  >=  nRows)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nRows)  {  if(v.length  >=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nRows)    {    if(v.length  >=  nRows)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
27	[BUG]  [BUGGY]  if(v.length  ==  nRows)  {  If(v.length  ==  nRows)  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nRows)  {  If(v.length  ==  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nRows)    {    If(v.length  ==  nRows)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
28	[BUG]  [BUGGY]  int  v  =  this.getRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  v  =  this.getRowDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  v  =  this.getRowDimension()  +  1;	      int    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
29	[BUG]  [BUGGY]  int  v.length  =  this.getColumnDimension();  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  v.length  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  v.length  =  this.getColumnDimension();	      int    v.length    =    this.getRowDimension();    	non-compiled	[CE]  ';'  expected	16	None	replace
30	[BUG]  [BUGGY]  int  v.length  =  this.getRowDimension()  +  1;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  v.length  =  this.getRowDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  v.length  =  this.getRowDimension()  +  1;	      int    v.length    =    this.getRowDimension();    	non-compiled	[CE]  ';'  expected	16	None	replace
31	[BUG]  [BUGGY]  final  int  v.length  =  this.getRowDimension();  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  v.length  =  this.getRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  v.length  =  this.getRowDimension();	      int    v.length    =    this.getRowDimension();    	non-compiled	[CE]  ';'  expected	16	None	replace
32	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nRows  ||  v.length  ==  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v.length  ==  nRows  ||  v.length  ==  nCols)  {	  if(v.length    ==    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	14	4	replace
33	[BUG]  [BUGGY]  if(v.length  ==  nRows  ||  v.length  ==  nCols)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nRows  ||  v.length  ==  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length  ==  nRows  ||  v.length  ==  nCols)  {	  if(v.length    ==    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	14	4	replace
34	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nCols  =  this.getColumnDimension();  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nCols  =  this.getColumnDimension();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  final  int  length  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  length  =  this.getRowDimension();  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  length  =  this.getRowDimension();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();	      int    nRows    =    this.getRowDimension();    final    int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nRows  =  this.getRowDimension()  +  1;	      final    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
38	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nRows  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nRows  =  this.getColumnDimension();	      final    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  -  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nRows  =  this.getRowDimension()  -  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nRows  =  this.getRowDimension()  -  1;	      final    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols  ||  v.length  ==  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v.length  ==  nCols  ||  v.length  ==  nRows)  {	  if(v.length    ==    nRows)    {    	compilable	  [FE]  IllegalArgumentException  	6	4	replace
41	[BUG]  [BUGGY]  if(v.length  ==  nCols  ||  v.length  ==  nRows)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols  ||  v.length  ==  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length  ==  nCols  ||  v.length  ==  nRows)  {	  if(v.length    ==    nRows)    {    	compilable	  [FE]  IllegalArgumentException  	6	4	replace
42	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows  ||  v.length  ==  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v.length!=  nRows  ||  v.length  ==  nCols)  {	  if(v.length!=    nRows    ||    v.length!=    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
43	[BUG]  [BUGGY]  if(v.length!=  nRows  ||  v.length  ==  nCols)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows  ||  v.length  ==  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=  nRows  ||  v.length  ==  nCols)  {	  if(v.length!=    nRows    ||    v.length!=    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
44	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nRows  ||  v.length!=  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v.length  ==  nRows  ||  v.length!=  nCols)  {	  if(v.length!=    nRows    ||    v.length!=    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
45	[BUG]  [BUGGY]  if(v.length  ==  nRows  ||  v.length!=  nCols)  {  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nRows  ||  v.length!=  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length  ==  nRows  ||  v.length!=  nCols)  {	  if(v.length!=    nRows    ||    v.length!=    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
46	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nCols  ||  v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v.length!=  nCols  ||  v.length!=  nRows)  {	  if(v.length!=    nRows    ||    v.length!=    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	4	2	replace
47	[BUG]  [BUGGY]  if(v.length!=  nCols  ||  v.length!=  nRows)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nCols  ||  v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=  nCols  ||  v.length!=  nRows)  {	  if(v.length!=    nRows    ||    v.length!=    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	4	2	replace
48	[BUG]  [BUGGY]      final  int  nSum  =  this.getColumnDimension();  final  int  nSum  =  this.getColumnDimension();  [CE]  variable  nSum  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      final  int  nSum  =  this.getColumnDimension();  final  int  nSum  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        final    int    nSum    =    this.getColumnDimension();    final  int  nSum  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nSum  is  already  defined  in  method  operate(double[])	22	None	add
49	[BUG]  [BUGGY]      final  int  nSum  =  this.getColumnDimension();  final  int  nSum  =  this.getRowDimension();  [CE]  variable  nSum  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      final  int  nSum  =  this.getColumnDimension();  final  int  nSum  =  this.getRowDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        final    int    nSum    =    this.getColumnDimension();    final  int  nSum  =  this.getRowDimension();	  	non-compiled	[CE]  variable  nSum  is  already  defined  in  method  operate(double[])	22	None	add
50	[BUG]  [BUGGY]      final  int  nSum  =  this.getColumnDimension();  Final  int  nSum  =  this.getColumnDimension();  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      final  int  nSum  =  this.getColumnDimension();  Final  int  nSum  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        final    int    nSum    =    this.getColumnDimension();    Final  int  nSum  =  this.getColumnDimension();	  	non-compiled	[CE]  not  a  statement	22	None	add
51	[BUG]  [BUGGY]      final  int  nSum  =  this.getColumnDimension();  final  int  nSum  =  this.getUpperDimension();  [CE]  variable  nSum  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      final  int  nSum  =  this.getColumnDimension();  final  int  nSum  =  this.getUpperDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        final    int    nSum    =    this.getColumnDimension();    final  int  nSum  =  this.getUpperDimension();	  	non-compiled	[CE]  variable  nSum  is  already  defined  in  method  operate(double[])	22	None	add
52	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  if(v.length  ==  nCols)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols)  {  if(v.length  ==  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nCols)    {    if(v.length  ==  nCols)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
53	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  if(v.length!=  nCols)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols)  {  if(v.length!=  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nCols)    {    if(v.length!=  nCols)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
54	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  if(v.length  >=  nCols)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols)  {  if(v.length  >=  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nCols)    {    if(v.length  >=  nCols)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
55	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  If(v.length  ==  nCols)  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols)  {  If(v.length  ==  nCols)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nCols)    {    If(v.length  ==  nCols)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
56	[BUG]  [BUGGY]  int  nRows  =  this.getRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  nRows  =  this.getRowDimension()  +  1;	      int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  int  nRows  =  this.getColumnDimension();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  nRows  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  nRows  =  this.getColumnDimension();	      int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  int  v.length  =  this.getEntryDimension();  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  v.length  =  this.getEntryDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  v.length  =  this.getEntryDimension();	      int    v.length    =    this.getRowDimension();    	non-compiled	[CE]  ';'  expected	16	None	replace
59	[BUG]  [BUGGY]  if(v.length!=  nRows)  {  If(v.length!=  nRows)  {  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows)  {  If(v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows)    {    If(v.length!=  nRows)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
60	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols  ||  v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v.length  ==  nCols  ||  v.length!=  nRows)  {	  if(v.length!=    nRows    ||    v.length!=    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
61	[BUG]  [BUGGY]  if(v.length  ==  nCols  ||  v.length!=  nRows)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols  ||  v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length  ==  nCols  ||  v.length!=  nRows)  {	  if(v.length!=    nRows    ||    v.length!=    nCols)    {    	compilable	  [FE]  IllegalArgumentException  	4	4	replace
62	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v  ==  null  ||  v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v  ==  null  ||  v.length!=  nRows)  {	  if(v.length!=    nRows)    {    	compilable	  [FE]  IllegalArgumentException  	2	2	replace
63	[BUG]  [BUGGY]  if(v  ==  null  ||  v.length!=  nRows)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v  ==  null  ||  v.length!=  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v  ==  null  ||  v.length!=  nRows)  {	  if(v.length!=    nRows)    {    	compilable	  [FE]  IllegalArgumentException  	2	2	replace
64	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  if(v.length  ==  nCOLs)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  nCols)  {  if(v.length  ==  nCOLs)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length    ==    nCols)    {    if(v.length  ==  nCOLs)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
65	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nRows  =  this.getRowDimension(v);  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nRows  =  this.getRowDimension(v);	      final    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  int  nSum  =  this.getDoubleDimension();  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  nSum  =  this.getDoubleDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  nSum  =  this.getDoubleDimension();	      int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
67	[BUG]  [BUGGY]  int  nSum  =  this.getColumnDimension()  +  1;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  nSum  =  this.getColumnDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  nSum  =  this.getColumnDimension()  +  1;	      int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
68	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      int  nSum  =  this.getColumnDimension();  nSum  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	        int    nSum    =    this.getColumnDimension();    nSum  =  this.getColumnDimension();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
69	[BUG]  [BUGGY]      int  nSum  =  this.getColumnDimension();  nSum  =  this.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      int  nSum  =  this.getColumnDimension();  nSum  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        int    nSum    =    this.getColumnDimension();    nSum  =  this.getColumnDimension();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	2	add
70	[BUG]  [BUGGY]  final  int  nSum  =  this.getDoubleDimension();  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nSum  =  this.getDoubleDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nSum  =  this.getDoubleDimension();	      final    int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
71	[BUG]  [BUGGY]  final  int  nSum  =  this.getColumnDimension()  +  1;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nSum  =  this.getColumnDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nSum  =  this.getColumnDimension()  +  1;	      final    int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
72	[BUG]  [BUGGY]  int  length  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  length  =  this.getRowDimension();  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  length  =  this.getRowDimension();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  final  int  nSum  =  this.getSum();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nSum  =  this.getSum();  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nSum  =  this.getSum();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  double  v  =  this.getUpperDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  double  v  =  this.getUpperDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	double  v  =  this.getUpperDimension();	      double    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
75	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  <  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v.length  <  nRows)  {	  if(v.length    ==    nRows)    {    	compilable	  [FE]  IllegalArgumentException  	6	2	replace
76	[BUG]  [BUGGY]  if(v.length  <  nRows)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  <  nRows)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length  <  nRows)  {	  if(v.length    ==    nRows)    {    	compilable	  [FE]  IllegalArgumentException  	6	2	replace
77	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	add	if(v.length  ==  0)  {	  if(v.length    ==    nRows)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	3	replace
78	[BUG]  [BUGGY]  if(v.length  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length  ==  0)  {	  if(v.length    ==    nRows)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	3	replace
79	[BUG]  [BUGGY]      final  int  nSum  =  this.getColumnDimension();  final  int  nSum  =  this.getEntryDimension();  [CE]  variable  nSum  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      final  int  nSum  =  this.getColumnDimension();  final  int  nSum  =  this.getEntryDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        final    int    nSum    =    this.getColumnDimension();    final  int  nSum  =  this.getEntryDimension();	  	non-compiled	[CE]  variable  nSum  is  already  defined  in  method  operate(double[])	22	None	add
80	[BUG]  [BUGGY]      int  nSum  =  this.getColumnDimension();  Int  nSum  =  this.getColumnDimension();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]      int  nSum  =  this.getColumnDimension();  Int  nSum  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	        int    nSum    =    this.getColumnDimension();    Int  nSum  =  this.getColumnDimension();	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
81	[BUG]  [BUGGY]  int  nRows  =  this.getColumnDimension();  final  int  nSum  =  this.getColumnDimension();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  nRows  =  this.getColumnDimension();  final  int  nSum  =  this.getColumnDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  nRows  =  this.getColumnDimension();  final  int  nSum  =  this.getColumnDimension();	      int    nRows    =    this.getRowDimension();    final    int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
82	[BUG]  [BUGGY]  double  v  =  this.getEntryDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  double  v  =  this.getEntryDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	double  v  =  this.getEntryDimension();	      double    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
83	[BUG]  [BUGGY]  int  v  =  this.getColumnDimension()  +  1;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  int  v  =  this.getColumnDimension()  +  1;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	int  v  =  this.getColumnDimension()  +  1;	      int    v    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
84	[BUG]  [BUGGY]  final  int  nSum  =  this.getSecondDimension();  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nSum  =  this.getSecondDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nSum  =  this.getSecondDimension();	      final    int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
85	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  2;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  2;  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  nRows  =  this.getRowDimension()  *  2;	      final    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
86	[BUG]  [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length!=  nRows  ||  v.length!=  nCOLs)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  if(v.length!=  nRows  ||  v.length!=  nCols)  {  if(v.length!=  nRows  ||  v.length!=  nCOLs)  {  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	if(v.length!=    nRows    ||    v.length!=    nCols)    {    if(v.length!=  nRows  ||  v.length!=  nCOLs)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
87	[BUG]  [BUGGY]  final  int  v  =  this.getEntryDimension();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  final  int  v  =  this.getEntryDimension();  [BUGGY]    if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	final  int  v  =  this.getEntryDimension();	      final    int    v    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  v[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  v[i]  *  v[i];  }  [BUGGY]    throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	776	776	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  v[i]  *  v[i];  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
