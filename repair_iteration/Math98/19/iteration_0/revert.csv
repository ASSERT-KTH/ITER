projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997for(inti=0;i<nRows;i++){sum.add(data[row][i].multiply(v[i]));}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997for(inti=0;i<nRows;i++){out[i]=sum.add(data[row][i].multiply(v[i]));}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997for(inti=0;i<nRows;i++){sum[i]=sum.add(data[row][i].multiply(v[i]));}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row][i]=sum.add(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997for(inti=0;i<nRows;i++){out[i]=sum.subtract(data[row][i].multiply(v[i]));}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.add(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.copyOf(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.multiply(v[i]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=ZERO;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=v.toBigDecimal();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[i]=sum.add(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997BigDecimal[][]out=newBigDecimal[sum.length][row];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997BigDecimal[][]out=newBigDecimal[sum.length][data.length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997BigDecimal[][]out=newBigDecimal[data.length][row];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997BigDecimal[][]out=newBigDecimal[nRows][sum.length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997if(sum!=null){for(inti=0;i<nRows;i++){sum.add(data[row][i].multiply(v[i]));}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997for(inti=0;i<nRows;i++){if(sum.equals(data[row][i])){out[i]=data[i].multiply(v[i]);}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997for(inti=0;i<nRows;i++){if(v[i]instanceofBigDecimal[]){out[i]=(BigDecimal[])v[i].multiply(v[i]
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997for(inti=0;i<nRows;i++){if(sum.equals(data[row][i])){returnout;}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997for(inti=0;i<nRows;i++){if(v[i]instanceofBigDecimal[]){out[i]=(BigDecimal[])v[i];}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.multiply(data[row][i].multiply(v[i]));
