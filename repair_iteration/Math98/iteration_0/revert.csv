projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()||(v.length!=0&&v.length>0)||(v.length!=this.getRowDimension())){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()||(v.length+1)!=this.getRowDimension()){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()||(v.length>0)||(v.length!=this.getRowDimension())){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997sum=sum.add(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.add(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997sum=sum.add(data[row][i].multiply(v[i]));sum=sum;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row][i].multiply(v[i]));sum=sum;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum=ZERO;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum=ONE;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum=0;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum="";
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnSum=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintrow=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnCols=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnSum=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992introw=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992System.arraycopy(v,0,out,0,nRows);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992introw=data[row][0].multiply(v[0]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992System.arraycopy(v,0,out,0,nCols);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992introw=data[row][0].multiply(v[nRows]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalBigDecimal[]out=newBigDecimal[v.length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalBigDecimal[]out=newBigDecimal[v.length-1];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalBigDecimal[]out=newBigDecimal[v.length+1];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalBigDecimal[]out=newBigDecimal[v.length[nCols];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993data[row][row].multiply(v[row]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993Data[row][row].multiply(v[row]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimal[][]data=this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993out[row][0].multiply(v[row]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993v[row][0].multiply(v[row]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=ZERO;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=v.length;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=v;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintnRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774intnRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintv=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774super.operate(v);
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774if(v.length!=1){thrownewIllegalArgumentException("");}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994for(inti=0;i<nCols;i++){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994for(inti=0;i>>nCols;i++){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994for(inti=0;i<=nCols;i++){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalintnRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalintrow=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalintnSum=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalintnCols=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991if(v.length!=nCols){if(v.length!=nRows){thrownewIllegalArgumentException("");}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=sum.add(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=sum.add(data[row][i].multiply(v[i],i));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=sum.add(data[row][i].subtract(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=total.add(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintnRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintnRows=this.getRowDimension()+1;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintnRows=this.getRowDimension(v.length);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintnRows=this.getRowDimension()[v.length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=0){if(v.length!=this.getColumnDimension()){thrownewIllegalArgumentException("");}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=0){if(v.length!=this.getRowDimension()){thrownewIllegalArgumentException("");}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()){if(v.length!=this.getRowDimension()){thrownewIllegalArgumentException("");}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()){thrownewIllegalArgumentException("");}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=0){thrownewIllegalArgumentException("");}
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnCols=this.getColumnDimension()+1;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnCols=this.getEntryColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnCOLs=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintrow=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalint[][]v=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989introw=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989if(v.length!=this.getColumnDimension()){thrownewIllegalArgumentException("");}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintnRows=this.getRowDimension()+1;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finaldoublenRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalcharnRows=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]out=newBigDecimal[v.length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994out[row][row].multiply(v[row]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994data[row][row].multiply(v[row]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994Data[row][row].multiply(v[row]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]data=this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992for(introw=0;row<nRows;row++){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992for(introw=0;row<=nRows;row++){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992for(introw=0;row<nCols;row++){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995BigDecimal[][]data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995BigDecimal[][]out=data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995BigDecimal[][]data=this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=data[row][i].multiply(v[i]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997data[row][i]=data[row][i].subtract(this.getColumnDimension());
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=data[row][i].subtract(sum);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=data[row][i].multiply(v[row]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintnRows=this.getRowDimension()[0];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintnRows=this.getRowDimension()*1;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnSum=(int)this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990intnSum=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnCols=this.getColumnDimension()||nSum=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnCols=this.getColumnDimension()||nRows>0?1:0;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintnSum=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintnSum=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintrow=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774intnSum=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774introw=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993data[row][row]=data[row][row].divide(v[row],column);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993data[row][row]=data[row][row].divide(v[row],scale,roundingMode);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993data[row][row]=data[row][row].subtract(v[row]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993data[row][row]=data[row][row].divide(v,column);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993data[row][row]=data[row][row].divide(v[row],column,nCols);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994for(inti=0;i<nCols.length;i++){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()||v.length!=this.getRowDimension()){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()||(v.length!=0&&v.length>0)){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()||v.length!=this.getEndColumnDimension()){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.toArray(newBigDecimal[row][column]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.toArray(newBigDecimal[row][i]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995Data[row][i]=data[row][i].divide(v[i],scale,roundingMode);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995data[row][i]=data[row][i].divide(v[i],scale,roundingMode);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995BigDecimal[][]data=getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995data[row][i]=data[row][i].divide(v[i],column);
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintnRows=this.getRowDimensionType();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintnRows=this.getRowDimension()*1;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992System.arraycopy(v,0,out,0,v.length);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992System.arraycopy(data,0,out,0,v.length);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992System.arraycopy(data,0,out,0,nRows);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992Data[row][]data=this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=sum.add(data[row][i].multiply(v[i],data[row][i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=sum.add(data[row][i].multiply(v[i]),nRows);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=sum.add(data[row][i].multiply(v[i]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992for(introw=0;row<nRows;row++]){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986introw=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986introw=(int)this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986System.arraycopy(data,0,v,0,v.length);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986Validate.isTrue(v.length!=0);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986Validate.isTrue(v.length==0);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalint[]row=this.getRowDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991intnSum=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalBigDecimal[]out=newBigDecimal[v.length].divide(nCols,nRows);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum=ZERO.parseBigDecimal(v);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum=ZERO_SMALL;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994System.arraycopy(data,0,out,0,v.length);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]data=(data==null)?data[row][0]:data[row];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]out=data[row][row].multiply(v[row]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]data=(data==null)?data[row][0]:data.length;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnCols=this.getColumnDimension()+v.length;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalintnCols=this.getColumnDimension(v.length);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalBigDecimal[][]v=(BigDecimal[])this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990BigDecimal[][]v=(BigDecimal[])this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java990finalBigDecimal[][]v=this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]d=data[row][column].multiply(data[row][column]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]d=data[row][data.length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]d=data[row][0].multiply(v[row]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]d=data[row][column].multiply(data[row][column]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java994BigDecimal[][]d=data[row][column].multiply(data[row][0],data[row][1]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()||!BigDecimal.isNaN(v.length)){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986if(v.length!=this.getColumnDimension()||!BigDecimal.isNone()){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986this.getData();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986Arrays.sort(v);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java986this.copyIn(v);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.multiply(data[row][i].multiply(v[i])));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=data[row][i];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=sum.multiply(data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimal[][]data=(BigDecimal[])this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimal[][]data=getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimal[][]data=(BigDecimal[])v.get(row);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimal[][]data=(BigDecimal[])v.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimal[][]data=(BigDecimal[])data[row].multiply(v[row]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalBigDecimal[][]v=(BigDecimal[])this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalBigDecimal[][]d=this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalBigDecimal[][]v=this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalBigDecimal[][]v=(BigDecimal[])this.getData();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995sum=sum.add(data[row][i].multiply(v[i],out[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalbigDecimal[]out=newBigDecimal[v.length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalBigDecimal[]out=newBigDecimal[v].length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991staticfinalBigDecimal[]out=newBigDecimal[v.length];
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum-=ZERO;
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum=ZERO.toBigDecimal(data[row][row]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java993BigDecimalsum=ZERO.toString(data[row][row]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995data[row][i]=data[row][i].multiply(v[i]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995Data[row][i]=data[row][i].multiply(v[i]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995BigDecimal[][]d=data[row][i].multiply(v[i]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995BigDecimal[][]d=data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java995BigDecimal[][]v=(BigDecimal[])v.get[i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992Data[][]data=out.toArray(newBigDecimal[v.length]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992System.arraycopy(data[0],0,out,0,v.length);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992BigDecimal[][]data=out.toArray(newBigDecimal[v.length]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992System.arraycopy(data[0],0,out,0,nRows);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991BigDecimal[][]v=(BigDecimal[])this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991finalBigDecimal[][]v=(BigDecimal[])this.getDataRef();
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java991BigDecimal[][]v=(BigDecimal[])this.getEntry(nRows,nCols);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java992for(introw=0;row>>nRows;row++){
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[i]=data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[row]=data[row][i].multiply(v[i]));
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java997out[i]=data[row][i].multiply(v[i]);
projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java989finalintnRows=this.getRowDimension()+v.length;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintnRows=this.getRowDimension()*1000;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finaldouble[][]v=this.getData();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finalintv.length=this.getColumnDimension();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java774finaldouble[][]v=(double[])this.getData();
