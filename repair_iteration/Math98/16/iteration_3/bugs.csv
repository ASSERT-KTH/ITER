bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  out);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],BigDecimal[])	88	None	replace
2	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  row,  out);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,BigDecimal[])	88	None	replace
3	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  nCols);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  out,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)	88	None	replace
4	[BUG]  [BUGGY]  BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();	          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	10	None	replace
5	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.getRowDimension();  [CE]  inconvertible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.getRowDimension();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])this.getRowDimension();	          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  inconvertible  types	10	None	replace
6	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	add	BigDecimal  sum  =  data[row][0].multiply(v[row]);	  BigDecimal    sum    =    data[row][0].length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	4	replace
7	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v[row]);  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].multiply(v[row]);	  BigDecimal    sum    =    data[row][0].length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	4	replace
8	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].substring(0,  row);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].substring(0,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].substring(0,  row);	  BigDecimal    sum    =    data[row][0].length;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
9	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].sum;  [CE]  cannot  find  symbol  sum  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].sum;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].sum;	  BigDecimal    sum    =    data[row][0].length;    	non-compiled	[CE]  cannot  find  symbol  sum	8	None	replace
10	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.clone();  [CE]  inconvertible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.clone();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.clone();	  BigDecimal[]    data    =(BigDecimal[])this.data.getDataRef();    	non-compiled	[CE]  inconvertible  types	102	None	replace
11	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.cloneTree();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.cloneTree();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.cloneTree();	  BigDecimal[]    data    =(BigDecimal[])this.data.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
12	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.data.size()  ]);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.data.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.data.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])this.data.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
13	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[data.size()  ]);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[data.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[data.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
14	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[nRows.size()  ]);  [CE]  int  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[nRows.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[nRows.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
15	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][0];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][0];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][0];	  BigDecimal[][]    out    =    new    BigDecimal[v.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	15	None	replace
16	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data.length][0];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data.length][0];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data.length][0];	  BigDecimal[][]    out    =    new    BigDecimal[v.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	15	None	replace
17	[BUG]  [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[nRows];  [CE]  cannot  find  symbol  sum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[nRows];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  new  BigDecimal[nRows];	  BigDecimal[]    data    =    new    BigDecimal[row];    	non-compiled	[CE]  cannot  find  symbol  sum	3	None	replace
18	[BUG]  [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[v.length];  [CE]  cannot  find  symbol  sum  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[v.length];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  new  BigDecimal[v.length];	  BigDecimal[]    data    =    new    BigDecimal[row];    	non-compiled	[CE]  cannot  find  symbol  sum	3	None	replace
19	[BUG]  [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[nCols];  [CE]  cannot  find  symbol  sum  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[nCols];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  new  BigDecimal[nCols];	  BigDecimal[]    data    =    new    BigDecimal[row];    	non-compiled	[CE]  cannot  find  symbol  sum	3	None	replace
20	[BUG]  [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[row  +  1];  [CE]  cannot  find  symbol  sum  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[row  +  1];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  new  BigDecimal[row  +  1];	  BigDecimal[]    data    =    new    BigDecimal[row];    	non-compiled	[CE]  cannot  find  symbol  sum	3	None	replace
21	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row].sum;  [CE]  cannot  find  symbol  sum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row].sum;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row].sum;	  BigDecimal    sum    =    data[row].length;    	non-compiled	[CE]  cannot  find  symbol  sum	9	None	replace
22	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row].length  -  1;  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row].length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row].length  -  1;	  BigDecimal    sum    =    data[row].length;    	non-compiled	[CE]  incompatible  types	9	None	replace
23	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row].substring(0,  row).length;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row].substring(0,  row).length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row].substring(0,  row).length;	  BigDecimal    sum    =    data[row].length;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
24	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  null;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	add	BigDecimal  sum  =  null;	  BigDecimal    sum    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	4	replace
25	[BUG]  [BUGGY]  BigDecimal  sum  =  null;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  null;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  null;	  BigDecimal    sum    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	60	4	replace
26	[BUG]  [BUGGY]  BigDecimal[]  out  =  v.toArray(new  BigDecimal[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  v.toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  v.toArray(new  BigDecimal[row]);	  BigDecimal[]    out    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	81	None	replace
27	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[nRows];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[nRows];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[nRows];	  BigDecimal[]    out    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	81	None	replace
28	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][data.length];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][data.length];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][data.length];	  BigDecimal[]    out    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	81	None	replace
29	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,[row][1].multiply(v[row]));  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,[row][1].multiply(v[row]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data,[row][1].multiply(v[row]));	  BigDecimal    sum    =    new    BigDecimal(v[row][1].multiply(v[row]));    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
30	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  nCols);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    nCols,    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	54	None	replace
31	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nCols,  nRows);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nCols,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nCols,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    nCols,    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)	54	None	replace
32	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nCols,  nRows);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nCols,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nCols,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    nCols,    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)	54	None	replace
33	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  row,  nRows);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  row,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  row,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    nCols,    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)	54	None	replace
34	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[0],  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[0],  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[0],  v.length);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal,int)	62	None	replace
35	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  data[row],  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[],int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  data[row],  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  data[row],  v.length);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[],int)	62	None	replace
36	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  2,  v.length);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  2,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  2,  v.length);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v.length);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	62	None	replace
37	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[nCols]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[nCols]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[nCols]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	62	None	replace
38	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[row.size()  +  1]);  [CE]  int  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[row.size()  +  1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[row.size()  +  1]);	  BigDecimal[]    data    =(BigDecimal[])v.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
39	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[v.size()  ]);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[v.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[v.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])v.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
40	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[nRows.size()  ]);  [CE]  int  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[nRows.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[nRows.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])v.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
41	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  [CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    BigDecimal  sum  =  new  BigDecimal(v.length  +  1);	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])	37	None	add
42	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  BigDecimal  Sum  =  new  BigDecimal(v.length  +  1);  [CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  BigDecimal  Sum  =  new  BigDecimal(v.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    BigDecimal  Sum  =  new  BigDecimal(v.length  +  1);	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])	37	None	add
43	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  BigDecimal  amount  =  new  BigDecimal(v.length  +  1);  [CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  BigDecimal  amount  =  new  BigDecimal(v.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    BigDecimal  amount  =  new  BigDecimal(v.length  +  1);	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])	37	None	add
44	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  bigDecimal  sum  =  new  BigDecimal(v.length  +  1);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  bigDecimal  sum  =  new  BigDecimal(v.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    bigDecimal  sum  =  new  BigDecimal(v.length  +  1);	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
45	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  nRows);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int,int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data[row],    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int,int)	55	None	replace
46	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  nCols);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int,int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data[row],    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int,int)	55	None	replace
47	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  row,  nCols);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  row,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  row,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data[row],    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)	55	None	replace
48	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row][0],  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal,BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row][0],  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row][0],  out);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal,BigDecimal[])	87	None	replace
49	[BUG]  [BUGGY]  BigDecimal  amount  =  ONE;  [CE]  cannot  find  symbol  sum  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  ONE;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  ONE;	  BigDecimal    sum    =    ONE;    BigDecimal    amount    =    ONE;    	non-compiled	[CE]  cannot  find  symbol  sum	58	None	replace
50	[BUG]  [BUGGY]  BigDecimal  amount  =  ONE.multiply(v[row]);  [CE]  cannot  find  symbol  sum  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  ONE.multiply(v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  ONE.multiply(v[row]);	  BigDecimal    sum    =    ONE;    BigDecimal    amount    =    ONE;    	non-compiled	[CE]  cannot  find  symbol  sum	58	None	replace
51	[BUG]  [BUGGY]  BigDecimal  amount  =  ONE.multiply(v);  [CE]  no  suitable  method  found  for  multiply(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  ONE.multiply(v);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  ONE.multiply(v);	  BigDecimal    sum    =    ONE;    BigDecimal    amount    =    ONE;    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigDecimal[])	58	None	replace
52	[BUG]  [BUGGY]  BigDecimal  amount  =  new  BigDecimal(v.length);  [CE]  cannot  find  symbol  sum  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  new  BigDecimal(v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  new  BigDecimal(v.length);	  BigDecimal    sum    =    ONE;    BigDecimal    amount    =    ONE;    	non-compiled	[CE]  cannot  find  symbol  sum	58	None	replace
53	[BUG]  [BUGGY]  BigDecimal[][]  v  =(BigDecimal[][])this.getDataRef();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  v  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  v  =(BigDecimal[][])this.getDataRef();	          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]    v    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	78	None	replace
54	[BUG]  [BUGGY]  BigDecimal[][]  v  =(BigDecimal[][])this.getRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  v  =(BigDecimal[][])this.getRowDimension();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  v  =(BigDecimal[][])this.getRowDimension();	          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]    v    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	78	None	replace
55	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v,  out);  [CE]  no  suitable  method  found  for  multiply(BigDecimal[],BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v,  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].multiply(v,  out);	  BigDecimal    sum    =    data[row][0].multiply(out);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigDecimal[],BigDecimal[])	74	None	replace
56	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v);  [CE]  no  suitable  method  found  for  multiply(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].multiply(v);	  BigDecimal    sum    =    data[row][0].multiply(out);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigDecimal[])	74	None	replace
57	[BUG]  [BUGGY]  BigDecimal  sum  =  out[row][0].multiply(data);  [CE]  array  required,  but  BigDecimal  found  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  out[row][0].multiply(data);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  out[row][0].multiply(data);	  BigDecimal    sum    =    data[row][0].multiply(out);    	non-compiled	[CE]  array  required,  but  BigDecimal  found	74	None	replace
58	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][0];  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][0];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][0];	  BigDecimal[][]    out    =    new    BigDecimal[data[row][row];    	non-compiled	[CE]  ']'  expected	68	None	replace
59	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][1];  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][1];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][1];	  BigDecimal[][]    out    =    new    BigDecimal[data[row][row];    	non-compiled	[CE]  ']'  expected	68	None	replace
60	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][nCols];  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][nCols];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][nCols];	  BigDecimal[][]    out    =    new    BigDecimal[data[row][row];    	non-compiled	[CE]  ']'  expected	68	None	replace
61	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][column];  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][column];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][column];	  BigDecimal[][]    out    =    new    BigDecimal[data[row][row];    	non-compiled	[CE]  ']'  expected	68	None	replace
62	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][row].multiply(v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	add	BigDecimal  sum  =  data[row][row].multiply(v[row]);	  BigDecimal    sum    =    data[row][row].length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	4	replace
63	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][row].multiply(v[row]);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][row].multiply(v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][row].multiply(v[row]);	  BigDecimal    sum    =    data[row][row].length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	94	4	replace
64	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][row].sum;  [CE]  cannot  find  symbol  sum  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][row].sum;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][row].sum;	  BigDecimal    sum    =    data[row][row].length;    	non-compiled	[CE]  cannot  find  symbol  sum	94	None	replace
65	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][row].substring(0,  row);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][row].substring(0,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][row].substring(0,  row);	  BigDecimal    sum    =    data[row][row].length;    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
66	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.getDataInput();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.getDataInput();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.getDataInput();	  BigDecimal[]    data    =(BigDecimal[])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
67	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.getDataInput();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.getDataInput();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data.getDataInput();	  BigDecimal[]    data    =(BigDecimal[])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
68	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.dataInput.clone();  [CE]  cannot  find  symbol  dataInput  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.dataInput.clone();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.dataInput.clone();	  BigDecimal[]    data    =(BigDecimal[])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol  dataInput	25	None	replace
69	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nRows,  nCols);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nRows,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nRows,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data[row],    nCols);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)	43	None	replace
70	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int)  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row],  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data[row],    nCols);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int)	43	None	replace
71	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nCols,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nCols,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  nCols,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data[row],    nCols);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)	43	None	replace
72	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.data.toArray(new  BigDecimal[row]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.data.toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.data.toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =    this.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
73	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.getDataRef().toArray(new  BigDecimal[row]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.getDataRef().toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.getDataRef().toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =    this.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
74	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.getDataImpl().toArray(new  BigDecimal[row]);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.getDataImpl().toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.getDataImpl().toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =    this.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
75	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][0].multiply(v[row]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][0].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][0].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[data[row][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	33	None	replace
76	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1);  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1);	  BigDecimal[]    out    =    new    BigDecimal[data[row][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	33	None	replace
77	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1;  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1;  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1;	  BigDecimal[]    out    =    new    BigDecimal[data[row][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	33	None	replace
78	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[row.size()  ]);  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[row.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[row.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data[row.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  ']'  expected	100	None	replace
79	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[nRows.size()  ]);  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[nRows.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[nRows.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data[row.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  ']'  expected	100	None	replace
80	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data[row.toArray(new  BigDecimal[row.size()  ]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data[row.toArray(new  BigDecimal[row.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data[row.toArray(new  BigDecimal[row.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data[row.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  ']'  expected	100	None	replace
81	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[row]);  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[data.length][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	82	None	replace
82	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][column].multiply(v[row]);  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][column].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][column].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[data.length][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	82	None	replace
83	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][1].multiply(v[row]);  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][1].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][1].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[data.length][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	82	None	replace
84	[BUG]  [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  v  =  new  BigDecimal(v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    v    =    new    BigDecimal(v.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	84	None	replace
85	[BUG]  [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length,  row);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  v  =  new  BigDecimal(v.length,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    v    =    new    BigDecimal(v.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	84	None	replace
86	[BUG]  [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length,  out.length);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length,  out.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  v  =  new  BigDecimal(v.length,  out.length);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    v    =    new    BigDecimal(v.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	84	None	replace
87	[BUG]  [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length  +  1);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  v  =  new  BigDecimal(v.length  +  1);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    v    =    new    BigDecimal(v.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	84	None	replace
88	[BUG]  [BUGGY]  BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[nCols]);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[nCols]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[nCols]);	  BigDecimal[]    data    =    v[row].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
89	[BUG]  [BUGGY]  BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[nRows]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[nRows]);	  BigDecimal[]    data    =    v[row].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
90	[BUG]  [BUGGY]  BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[data.length]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[data.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[data.length]);	  BigDecimal[]    data    =    v[row].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
91	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0]);	  BigDecimal    sum    =    new    BigDecimal(v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal)	39	None	replace
92	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row],  out[row]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row],  out[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row],  out[row]);	  BigDecimal    sum    =    new    BigDecimal(v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	39	None	replace
93	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row],  data[row]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row],  data[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row],  data[row]);	  BigDecimal    sum    =    new    BigDecimal(v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])	39	None	replace
94	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data.length,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data.length,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data.length,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int)	97	None	replace
95	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  data.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  data.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row],  data.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int)	97	None	replace
96	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[][],int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[][],int)	97	None	replace
97	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.data;  [CE]  cannot  find  symbol  data  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.data;  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.data;	  BigDecimal[]    data    =(BigDecimal[])v.getDataRef();    	non-compiled	[CE]  cannot  find  symbol  data	26	None	replace
98	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[row]);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =(BigDecimal[])v.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
99	[BUG]  [BUGGY]  BigDecimal  sum  =  v.length  -  1;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  v.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  v.length  -  1;	  BigDecimal    sum    =    v.length;    	non-compiled	[CE]  incompatible  types	7	None	replace
100	[BUG]  [BUGGY]  BigDecimal  sum  =  v.length  +  1;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  v.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  v.length  +  1;	  BigDecimal    sum    =    v.length;    	non-compiled	[CE]  incompatible  types	7	None	replace
101	[BUG]  [BUGGY]  BigDecimal  sum  =  1;  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  1;	  BigDecimal    sum    =    ONE;    BigDecimal    sum    =    1;    	non-compiled	[CE]  incompatible  types	98	None	replace
102	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  data[row]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  data[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  data[row]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])	61	None	replace
103	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  out[row]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  out[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  out[row]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	61	None	replace
104	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[0]),  v[row]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[0]),  v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[0]),  v[row]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	61	None	replace
105	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  1);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  1);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row])+    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	63	None	replace
106	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])+  nCols);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])+  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])+  nCols);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row])+    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
107	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row].length][row].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row].length][row].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row].length][row].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[v.length][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	20	None	replace
108	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][row].multiply(data[row][row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][row].multiply(data[row][row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[v.length][row].multiply(data[row][row]);	  BigDecimal[][]    out    =    new    BigDecimal[v.length][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	20	None	replace
109	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][nCols].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][nCols].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][nCols].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[row][nRows].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	24	None	replace
110	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][nRows].multiply(v[row]);  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][nRows].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][nRows].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[row][nRows].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	24	None	replace
111	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	add	BigDecimal  sum  =  new  BigDecimal(v.length  -  2);	  BigDecimal    sum    =    new    BigDecimal(v.length    -    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	4	replace
112	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  2);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length  -  2);	  BigDecimal    sum    =    new    BigDecimal(v.length    -    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	4	replace
113	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1,  row);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length  -  1,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length    -    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int)	36	None	replace
114	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.getDataReference();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.getDataReference();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])v.getDataReference();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataReference();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
115	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])data.getDataReference();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])data.getDataReference();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])data.getDataReference();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataReference();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
116	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][nCols].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][nCols].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[row][nCols].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[row][nRows].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	32	None	replace
117	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][nRows].multiply(v[row]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][nRows].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][nRows].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[row][nRows].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	32	None	replace
118	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row],  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row],  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row],  v.length);	  BigDecimal    sum    =    new    BigDecimal(data[row][row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)	95	None	replace
119	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row],  v);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row],  v);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row],  v);	  BigDecimal    sum    =    new    BigDecimal(data[row][row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])	95	None	replace
120	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][row]);  [CE]  array  required,  but  BigDecimal  found  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row][row]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row]);    	non-compiled	[CE]  array  required,  but  BigDecimal  found	95	None	replace
121	[BUG]  [BUGGY]  BigDecimal[]  data  =  v.toArray(new  BigDecimal[nCols]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  v.toArray(new  BigDecimal[nCols]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  v.toArray(new  BigDecimal[nCols]);	  BigDecimal[]    data    =    v.toArray(new    BigDecimal[nRows]);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
122	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[nRows]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[nRows]);	  BigDecimal[]    data    =    v.toArray(new    BigDecimal[nRows]);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
123	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length][row].multiply(data[row][row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length][row].multiply(data[row][row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[v.length][row].multiply(data[row][row]);	  BigDecimal[]    out    =    new    BigDecimal[v.length][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	69	None	replace
124	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][v.length].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][v.length].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[row][v.length].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[v.length][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	69	None	replace
125	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][row].multiply(v[row])+  1;  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][row].multiply(v[row])+  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][row].multiply(v[row])+  1;	  BigDecimal[][]    out    =    data[row][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	90	None	replace
126	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][row].multiply(v[0]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][row].multiply(v[0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][row].multiply(v[0]);	  BigDecimal[][]    out    =    data[row][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	90	None	replace
127	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][0].multiply(v[row]);	  BigDecimal[][]    out    =    data[row][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	90	None	replace
128	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[row.size()  +  1]);  [CE]  int  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[row.size()  +  1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[row.size()  +  1]);	  BigDecimal[]    data    =(BigDecimal[])this.data.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
129	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[this.data.size()  ]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[this.data.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])row.toArray(new  BigDecimal[this.data.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])this.data.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
130	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][column].multiply(v[row]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][column].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][column].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[data.length][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	70	None	replace
131	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[0]);  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[0]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[0]);	  BigDecimal[]    out    =    new    BigDecimal[data.length][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	70	None	replace
132	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  v.length,  row);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[][],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  v.length,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data,  v.length,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[][],int,int)	86	None	replace
133	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data.length,  v.length,  row);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data.length,  v.length,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data.length,  v.length,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	86	None	replace
134	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  row.length,  v.length);  [CE]  int  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  row.length,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data,  row.length,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data,    row);    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
135	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  row.length);  [CE]  int  cannot  be  dereferenced  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  row.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data,  row.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data,    row);    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
136	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nRows,  nCols);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nRows,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nRows,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nCols);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)	40	None	replace
137	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nCols,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nCols,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  row,  nCols,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nCols);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)	40	None	replace
138	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row.length  -  1][row];  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row.length  -  1][row];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row.length  -  1][row];	  BigDecimal[][]    out    =    new    BigDecimal[data[row.length][row];    	non-compiled	[CE]  ']'  expected	14	None	replace
139	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row.length][0];  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row.length][0];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row.length][0];	  BigDecimal[][]    out    =    new    BigDecimal[data[row.length][row];    	non-compiled	[CE]  ']'  expected	14	None	replace
140	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row].length][0];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row].length][0];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row].length][0];	  BigDecimal[][]    out    =    new    BigDecimal[data[row.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	14	None	replace
141	[BUG]  [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	int  nCols  =  this.getRowDimension()  +  1;	  int    nCols    =    this.getColumnDimension()    +    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	45	None	replace
142	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  v.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  v.length;  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	int  nCols  =  this.getColumnDimension()  +  v.length;	  int    nCols    =    this.getColumnDimension()    +    row;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	46	None	replace
143	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  *  row;  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getColumnDimension()  *  row;  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	int  nCols  =  this.getColumnDimension()  *  row;	  int    nCols    =    this.getColumnDimension()    +    row;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	46	None	replace
144	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[nRows][0].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[nRows][0].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[nRows][0].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	101	None	replace
145	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(data[row][0]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(data[row][0]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(data[row][0]);	  BigDecimal[]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	101	None	replace
146	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][1].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][1].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[row][1].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	101	None	replace
147	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  2);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	add	BigDecimal  sum  =  new  BigDecimal(v.length  +  2);	  BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
148	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  2);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  2);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length  +  2);	  BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
149	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[nRows][row].multiply(v[row][row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[nRows][row].multiply(v[row][row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[nRows][row].multiply(v[row][row]);	  BigDecimal[]    out    =    new    BigDecimal[nRows][row].multiply(data[row][row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	34	None	replace
150	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][nRows].multiply(data[row][row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][nRows].multiply(data[row][row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[row][nRows].multiply(data[row][row]);	  BigDecimal[]    out    =    new    BigDecimal[nRows][row].multiply(data[row][row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	34	None	replace
151	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[1]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[1]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][0].multiply(v[1]);	  BigDecimal[][]    out    =    data[row][0].multiply(v[0]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	76	None	replace
152	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[0],  v[1]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[0],  v[1]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][0].multiply(v[0],  v[1]);	  BigDecimal[][]    out    =    data[row][0].multiply(v[0]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	76	None	replace
153	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[0])+  1;  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[0])+  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][0].multiply(v[0])+  1;	  BigDecimal[][]    out    =    data[row][0].multiply(v[0]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	76	None	replace
154	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.data;  [CE]  cannot  find  symbol  data  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.data;  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])v.data;	  BigDecimal[][]    data    =(BigDecimal[][])v.getDataRef();    	non-compiled	[CE]  cannot  find  symbol  data	21	None	replace
155	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.clone();  [CE]  inconvertible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.clone();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])v.clone();	  BigDecimal[][]    data    =(BigDecimal[][])v.getDataRef();    	non-compiled	[CE]  inconvertible  types	21	None	replace
156	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.dataRef();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.dataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])v.dataRef();	  BigDecimal[][]    data    =(BigDecimal[][])v.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
157	[BUG]  [BUGGY]  BigDecimal[][]  outData  =(BigDecimal[][])v.getDataRef();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  outData  =(BigDecimal[][])v.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  outData  =(BigDecimal[][])v.getDataRef();	  BigDecimal[][]    outData    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
158	[BUG]  [BUGGY]  BigDecimal[][]  outData  =(BigDecimal[][])data[row][0].getDataRef();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  outData  =(BigDecimal[][])data[row][0].getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  outData  =(BigDecimal[][])data[row][0].getDataRef();	  BigDecimal[][]    outData    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
159	[BUG]  [BUGGY]  BigDecimal[][]  outData  =(BigDecimal[][])data.getDataRef();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  outData  =(BigDecimal[][])data.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  outData  =(BigDecimal[][])data.getDataRef();	  BigDecimal[][]    outData    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
160	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  out.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  out.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  row,  out.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	92	None	replace
161	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)	92	None	replace
162	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	92	None	replace
163	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][data.length;  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][data.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][data.length;	  BigDecimal    sum    =    data.length;    	non-compiled	[CE]  ']'  expected	73	None	replace
164	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1);	  BigDecimal[][]    out    =    new    BigDecimal[data[row][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	19	None	replace
165	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1;  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1;  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][row].multiply(v[row])+  1;	  BigDecimal[][]    out    =    new    BigDecimal[data[row][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	19	None	replace
166	[BUG]  [BUGGY]  BigDecimal[]  data  =  data.toArray(new  BigDecimal[v.length]);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  data.toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  data.toArray(new  BigDecimal[v.length]);	  BigDecimal[]    data    =    v.toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
167	[BUG]  [BUGGY]  BigDecimal[]  data  =  data.toArray(new  BigDecimal[data.length]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  data.toArray(new  BigDecimal[data.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  data.toArray(new  BigDecimal[data.length]);	  BigDecimal[]    data    =    v.toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
168	[BUG]  [BUGGY]  BigDecimal[]  data  =  data.toArray(new  BigDecimal[row]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  data.toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  data.toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =    v.toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
169	[BUG]  [BUGGY]  BigDecimal[]  data  =  data[row].toArray(new  BigDecimal[v.length]);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  data[row].toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  data[row].toArray(new  BigDecimal[v.length]);	  BigDecimal[]    data    =    v.toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
170	[BUG]  [BUGGY]  BigDecimal  Sum  =  ONE;  [CE]  cannot  find  symbol  sum  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  Sum  =  ONE;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  Sum  =  ONE;	  BigDecimal    sum    =    ONE;    BigDecimal    Sum    =    ONE;    	non-compiled	[CE]  cannot  find  symbol  sum	57	None	replace
171	[BUG]  [BUGGY]  BigDecimal[][]  out  =(BigDecimal[][])this.getRowDimension();  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =(BigDecimal[][])this.getRowDimension();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =(BigDecimal[][])this.getRowDimension();	          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]    out    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	77	None	replace
172	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v.length);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[row]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)	16	None	replace
173	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[row]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[row]);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[row]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	16	None	replace
174	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row])+  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row])+  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row])+  1);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[row]));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	16	None	replace
175	[BUG]  [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[row.length]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[row.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  out.toArray(new  BigDecimal[row.length]);	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	80	None	replace
176	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row].toArray(new  BigDecimal[v.length]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row].toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row].toArray(new  BigDecimal[v.length]);	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	80	None	replace
177	[BUG]  [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[row].length]);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[row].length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  out.toArray(new  BigDecimal[row].length]);	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  ')'  expected	80	None	replace
178	[BUG]  [BUGGY]  BigDecimal[]  out  =(BigDecimal[])v.clone();  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =(BigDecimal[])v.clone();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =(BigDecimal[])v.clone();	  BigDecimal[]    data    =(BigDecimal[])v.clone();    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	31	None	replace
179	[BUG]  [BUGGY]  BigDecimal[]  outData  =(BigDecimal[])v.clone();  [CE]  cannot  find  symbol  sum  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  outData  =(BigDecimal[])v.clone();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  outData  =(BigDecimal[])v.clone();	  BigDecimal[]    data    =(BigDecimal[])v.clone();    	non-compiled	[CE]  cannot  find  symbol  sum	31	None	replace
180	[BUG]  [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[nCols]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[nCols]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  out.toArray(new  BigDecimal[nCols]);	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[nRows]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	28	None	replace
181	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][nRows];  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][nRows];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][nRows];	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[nRows]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	28	None	replace
182	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[nRows]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[nRows]);	  BigDecimal[]    out    =    data[row][0].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	103	None	replace
183	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[nCols]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[nCols]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[nCols]);	  BigDecimal[]    out    =    data[row][0].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	103	None	replace
184	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[v.length]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[v.length]);	  BigDecimal[]    out    =    data[row][0].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	103	None	replace
185	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[nRows]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[nRows]);	  BigDecimal[]    v    =    data[row][0].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	29	None	replace
186	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[nCols]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[nCols]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[nCols]);	  BigDecimal[]    v    =    data[row][0].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	29	None	replace
187	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[1]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[1]);	  BigDecimal[]    v    =    data[row][0].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	29	None	replace
188	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.getDataInput();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.getDataInput();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])v.getDataInput();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
189	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])data.getDataInput();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])data.getDataInput();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])data.getDataInput();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
190	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])dataArea.getDataInput();  [CE]  cannot  find  symbol  dataArea  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])dataArea.getDataInput();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])dataArea.getDataInput();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol  dataArea	22	None	replace
191	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.getDataRow();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.getDataRow();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])v.getDataRow();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataRow();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
192	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])data.getDataRow();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])data.getDataRow();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])data.getDataRow();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataRow();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
193	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataRow();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataRow();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataRow();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataRow();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
194	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length  -  1]);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length  -  1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length  -  1]);	  BigDecimal[]    data    =    this.data[row].toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
195	[BUG]  [BUGGY]  BigDecimal[]  data  =  v.toArray(new  BigDecimal[row.length]);  [CE]  int  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  v.toArray(new  BigDecimal[row.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  v.toArray(new  BigDecimal[row.length]);	  BigDecimal[]    data    =    this.data[row].toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	replace
196	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length],  v[row]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length],  v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length],  v[row]);	  BigDecimal[]    data    =    this.data[row].toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
197	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.data[row],  v.toArray(new  BigDecimal[v.length]);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.data[row],  v.toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.data[row],  v.toArray(new  BigDecimal[v.length]);	  BigDecimal[]    data    =    this.data[row].toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  ';'  expected	1	None	replace
198	[BUG]  [BUGGY]  BigDecimal  sum  =  NO;  [CE]  cannot  find  symbol  NO  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  NO;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  NO;	  BigDecimal    sum    =    ONE;    BigDecimal    sum    =    NO;    	non-compiled	[CE]  cannot  find  symbol  NO	99	None	replace
199	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  v.length);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[1]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)	66	None	replace
200	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  v[2]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  v[2]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  v[2]);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[1]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	66	None	replace
201	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1])+  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1])+  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1])+  1);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[1]));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	66	None	replace
202	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[nCols][0];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[nCols][0];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[nCols][0];	  BigDecimal[][]    out    =    new    BigDecimal[nRows][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	52	None	replace
203	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(data[row][0]));  [CE]  array  required,  but  BigDecimal  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(data[row][0]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(data[row][0]));	  BigDecimal    sum    =    new    BigDecimal(v[row][0].multiply(v[row]));    	non-compiled	[CE]  array  required,  but  BigDecimal  found	17	None	replace
204	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][0],  data[row][0]);  [CE]  array  required,  but  BigDecimal  found  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][0],  data[row][0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row][0],  data[row][0]);	  BigDecimal    sum    =    new    BigDecimal(v[row][0].multiply(v[row]));    	non-compiled	[CE]  array  required,  but  BigDecimal  found	17	None	replace
205	[BUG]  [BUGGY]  BigDecimal[]  data  =  out.toArray(new  BigDecimal[nRows]);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  out.toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  out.toArray(new  BigDecimal[nRows]);	  BigDecimal[]    data    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
206	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[row]);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
207	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.getRowDataRef();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.getRowDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])v.getRowDataRef();	  BigDecimal[][]    data    =(BigDecimal[][])this.getRowDataRef();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
208	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.getColumnDataRef();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.getColumnDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])this.getColumnDataRef();	  BigDecimal[][]    data    =(BigDecimal[][])this.getRowDataRef();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
209	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  row);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length,    nCols);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	85	None	replace
210	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  row);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row],  v.length,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data[row],    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int,int)	41	None	replace
211	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][1].multiply(data[row]));  [CE]  array  required,  but  BigDecimal  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][1].multiply(data[row]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row][1].multiply(data[row]));	  BigDecimal    sum    =    new    BigDecimal(data[row][1].multiply(v[row]));    	non-compiled	[CE]  array  required,  but  BigDecimal  found	83	None	replace
212	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[0]));  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[0]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[0]));	  BigDecimal    sum    =    new    BigDecimal(data[row][1].multiply(v[row]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal)	83	None	replace
213	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[nRows]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[nRows]);	  BigDecimal[]    v    =    data[row][row].toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	104	None	replace
214	[BUG]  [BUGGY]  BigDecimal[]  data  =  data[row][row].toArray(new  BigDecimal[data.length]);  [CE]  array  required,  but  BigDecimal  found  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  data[row][row].toArray(new  BigDecimal[data.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  data[row][row].toArray(new  BigDecimal[data.length]);	  BigDecimal[]    v    =    data[row][row].toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  array  required,  but  BigDecimal  found	104	None	replace
215	[BUG]  [BUGGY]  BigDecimal[]  data  =  data[row][row].toArray(new  BigDecimal[nRows]);  [CE]  array  required,  but  BigDecimal  found  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  data[row][row].toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  data[row][row].toArray(new  BigDecimal[nRows]);	  BigDecimal[]    v    =    data[row][row].toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  array  required,  but  BigDecimal  found	104	None	replace
216	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[nCols]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[nCols]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[nCols]);	  BigDecimal[]    v    =    data[row][row].toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	104	None	replace
217	[BUG]  [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  [CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	                BigDecimal[][]        data        =(BigDecimal[][])this.getDataRef();        BigDecimal[][]    dataset    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();	  	non-compiled	[CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])	11	None	add
218	[BUG]  [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])v.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  [CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])v.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	                BigDecimal[][]        data        =(BigDecimal[][])this.getDataRef();        BigDecimal[][]    dataset    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  data  =(BigDecimal[][])v.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();	  	non-compiled	[CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])	11	None	add
219	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal[nRows];  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal[nRows];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal[nRows];	  BigDecimal    sum    =    new    BigDecimal[row];    	non-compiled	[CE]  incompatible  types	67	None	replace
220	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal[nCols];  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal[nCols];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal[nCols];	  BigDecimal    sum    =    new    BigDecimal[row];    	non-compiled	[CE]  incompatible  types	67	None	replace
221	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal[v.length];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal[v.length];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal[v.length];	  BigDecimal    sum    =    new    BigDecimal[row];    	non-compiled	[CE]  incompatible  types	67	None	replace
222	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][nCols].multiply(v[row]));  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][nCols].multiply(v[row]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][nCols].multiply(v[row]));	  BigDecimal    sum    =    new    BigDecimal(data[row][column].multiply(v[row]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal)	18	None	replace
223	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][nCols];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][nCols];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][nCols];	  BigDecimal[][]    out    =    new    BigDecimal[nCols][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	51	None	replace
224	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[0]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  v[0]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	96	None	replace
225	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  2,  out);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  2,  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row])/  2,  out);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    out);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	96	None	replace
226	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.clone();  [CE]  cannot  find  symbol  sum  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.clone();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data.clone();	  BigDecimal[]    data    =(BigDecimal[])data.getDataRef();    	non-compiled	[CE]  cannot  find  symbol  sum	27	None	replace
227	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[data.size()  ]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[data.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[data.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
228	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[data.length()  ]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[data.length()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[data.length()  ]);	  BigDecimal[]    data    =(BigDecimal[])data.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
229	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  [CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    -    1);    BigDecimal  sum  =  new  BigDecimal(v.length  -  1);	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])	35	None	add
230	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  Sum  =  new  BigDecimal(v.length  -  1);  [CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  Sum  =  new  BigDecimal(v.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    -    1);    BigDecimal  Sum  =  new  BigDecimal(v.length  -  1);	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])	35	None	add
231	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  amount  =  new  BigDecimal(v.length  -  1);  [CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  amount  =  new  BigDecimal(v.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    -    1);    BigDecimal  amount  =  new  BigDecimal(v.length  -  1);	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  operate(BigDecimal[])	35	None	add
232	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[nRows][0].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[nRows][0].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[nRows][0].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	89	None	replace
233	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(v[0]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(v[0]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(v[0]);	  BigDecimal[][]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	89	None	replace
234	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(data[row][0]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(data[row][0]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(data[row][0]);	  BigDecimal[][]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	89	None	replace
235	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][0].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][0].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[v.length][0].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	89	None	replace
236	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  out.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  out.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  nRows,  out.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	79	None	replace
237	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  out.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  out.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  out.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)	79	None	replace
238	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  out.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  out.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  nCols,  out.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	79	None	replace
239	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[nRows][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[nRows][v.length];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[nRows][v.length];	  BigDecimal[][]    out    =    new    BigDecimal[row][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	106	None	replace
240	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][v.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][v.length  -  1];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][v.length  -  1];	  BigDecimal[][]    out    =    new    BigDecimal[row][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	106	None	replace
241	[BUG]  [BUGGY]  BigDecimal[]  data  =  out.toArray(new  BigDecimal[data.length]);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  out.toArray(new  BigDecimal[data.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  out.toArray(new  BigDecimal[data.length]);	  BigDecimal[]    data    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
242	[BUG]  [BUGGY]  BigDecimal[]  data  =  out.toArray(new  BigDecimal[nCols]);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  out.toArray(new  BigDecimal[nCols]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  out.toArray(new  BigDecimal[nCols]);	  BigDecimal[]    data    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
243	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][1].multiply(v[row]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][1].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][1].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[data[row][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	33	None	replace
244	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[0]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[0]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[0]);	  BigDecimal[][]    out    =    new    BigDecimal[data[row][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	19	None	replace
245	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out.length  -  1);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  out.length  -  1);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int)	79	None	replace
246	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(out,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(out,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(out,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int)	79	None	replace
247	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  nRows);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  out,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)	88	None	replace
248	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  out,  row);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],BigDecimal[],int)  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  out,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data,  out,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],BigDecimal[],int)	88	None	replace
249	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v.length);  [CE]  no  suitable  method  found  for  multiply(int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].multiply(v.length);	  BigDecimal    sum    =    data[row][0].multiply(out);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(int)	74	None	replace
250	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.toArray(new  BigDecimal[nRows]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.toArray(new  BigDecimal[nRows]);	  BigDecimal[]    data    =    this.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
251	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.toArray(new  BigDecimal[data.length]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.toArray(new  BigDecimal[data.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.toArray(new  BigDecimal[data.length]);	  BigDecimal[]    data    =    this.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
252	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][new  BigDecimal[row]);  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][new  BigDecimal[row]);	  BigDecimal[]    out    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  ']'  expected	81	None	replace
253	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[v.length];	  BigDecimal[]    out    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	81	None	replace
254	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][0];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][0];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][0];	  BigDecimal[]    out    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	81	None	replace
255	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[v.size()  ]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[v.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[v.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])v.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
256	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[r.size()  ]);  [CE]  cannot  find  symbol  r  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[r.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[r.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])v.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  r	5	None	replace
257	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[data.size()  ]);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[data.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.toArray(new  BigDecimal[data.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])v.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
258	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  nRows);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int,int)	53	None	replace
259	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  nRows);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)	53	None	replace
260	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(data[row][1]));  [CE]  array  required,  but  BigDecimal  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(data[row][1]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(data[row][1]));	  BigDecimal    sum    =    new    BigDecimal(v[row][0].multiply(v[row]));    	non-compiled	[CE]  array  required,  but  BigDecimal  found	17	None	replace
261	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  BigDecimal  v  =  new  BigDecimal(v.length  +  1);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  +  1);  BigDecimal  v  =  new  BigDecimal(v.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    BigDecimal  v  =  new  BigDecimal(v.length  +  1);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	37	None	add
262	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[0]));  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[0]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[0]));	  BigDecimal    sum    =    ONE;    BigDecimal    sum    =    1;    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	98	None	replace
263	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[1]));  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[1]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[1]));	  BigDecimal    sum    =    ONE;    BigDecimal    sum    =    1;    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	98	None	replace
264	[BUG]  [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[v.length  -  1]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[v.length  -  1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  out.toArray(new  BigDecimal[v.length  -  1]);	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	80	None	replace
265	[BUG]  [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[v.length  +  1]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  out.toArray(new  BigDecimal[v.length  +  1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  out.toArray(new  BigDecimal[v.length  +  1]);	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	80	None	replace
266	[BUG]  [BUGGY]  BigDecimal  sum  =  v[row].length;  [CE]  cannot  find  symbol  length  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  v[row].length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  v[row].length;	  BigDecimal    sum    =    v.length;    	non-compiled	[CE]  cannot  find  symbol  length	7	None	replace
267	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  v[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	add	BigDecimal  sum  =  v[row];	  BigDecimal    sum    =    v.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
268	[BUG]  [BUGGY]  BigDecimal  sum  =  v[row];  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  v[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  v[row];	  BigDecimal    sum    =    v.length;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	4	replace
269	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][column]);  [CE]  cannot  find  symbol  column  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][column]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][column]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row]);    	non-compiled	[CE]  cannot  find  symbol  column	95	None	replace
270	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][1]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal)	95	None	replace
271	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])data[row][0].getDataInput();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])data[row][0].getDataInput();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])data[row][0].getDataInput();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
272	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row],  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row],  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row],  out);	  BigDecimal    sum    =    new    BigDecimal(v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])	39	None	replace
273	[BUG]  [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length,  data.length);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length,  data.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  v  =  new  BigDecimal(v.length,  data.length);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    v    =    new    BigDecimal(v.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	84	None	replace
274	[BUG]  [BUGGY]  BigDecimal  amount  =  ONE.toBigDecimal();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  ONE.toBigDecimal();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  ONE.toBigDecimal();	  BigDecimal    sum    =    ONE;    BigDecimal    amount    =    ONE;    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
275	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[data.length  -  1]);  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[data.length  -  1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[data.length  -  1]);	  BigDecimal[]    data    =(BigDecimal[])data[row.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  ']'  expected	100	None	replace
276	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[data.length  ]);  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[data.length  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[data.length  ]);	  BigDecimal[]    data    =(BigDecimal[])data[row.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  ']'  expected	100	None	replace
277	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data[row.toArray(new  BigDecimal[data.size()  ]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data[row.toArray(new  BigDecimal[data.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data[row.toArray(new  BigDecimal[data.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data[row.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  ']'  expected	100	None	replace
278	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal[data.length];  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal[data.length];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal[data.length];	  BigDecimal    sum    =    new    BigDecimal[row];    	non-compiled	[CE]  incompatible  types	67	None	replace
279	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row].add(data[row].length);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row].add(data[row].length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row].add(data[row].length);	  BigDecimal    sum    =    data[row].length;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
280	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][nRows].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][nRows].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[v.length][nRows].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[row][nRows].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	24	None	replace
281	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  out);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[1]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])	66	None	replace
282	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  data[row][0]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  data[row][0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[1]),  data[row][0]);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[1]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	66	None	replace
283	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.row.size()  ]);  [CE]  cannot  find  symbol  row  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.row.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.row.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])this.data.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  row	4	None	replace
284	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[nRows.size()  ]);  [CE]  int  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[nRows.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[nRows.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])this.data.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
285	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[0]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[0]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	61	None	replace
286	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  data[row]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  data[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  data[row]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])	61	None	replace
287	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][column].multiply(v[row]),  v[row]);  [CE]  cannot  find  symbol  column  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][column].multiply(v[row]),  v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][column].multiply(v[row]),  v[row]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v[row]);    	non-compiled	[CE]  cannot  find  symbol  column	61	None	replace
288	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[1]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[1]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  v[1]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	61	None	replace
289	[BUG]  [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  [CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	                BigDecimal[][]        data        =(BigDecimal[][])this.getDataRef();        BigDecimal[][]    dataset    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();	  	non-compiled	[CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])	11	None	add
290	[BUG]  [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  [CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	                BigDecimal[][]        data        =(BigDecimal[][])this.getDataRef();        BigDecimal[][]    dataset    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();	  	non-compiled	[CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])	11	None	add
291	[BUG]  [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();  [CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	                BigDecimal[][]        data        =(BigDecimal[][])this.getDataRef();        BigDecimal[][]    dataset    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  data  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();	  	non-compiled	[CE]  variable  data  is  already  defined  in  method  operate(BigDecimal[])	11	None	add
292	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  row,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[][],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  row,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data,  row,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[][],int,int)	86	None	replace
293	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  length,  row);  [CE]  cannot  find  symbol  length  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data,  length,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data,  length,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data,    row);    	non-compiled	[CE]  cannot  find  symbol  length	86	None	replace
294	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][1].multiply(data[row][0]));  [CE]  array  required,  but  BigDecimal  found  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][1].multiply(data[row][0]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row][1].multiply(data[row][0]));	  BigDecimal    sum    =    new    BigDecimal(v[row][1].multiply(v[row]));    	non-compiled	[CE]  array  required,  but  BigDecimal  found	91	None	replace
295	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].add(v.length);  [CE]  no  suitable  method  found  for  add(int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].add(v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].add(v.length);	  BigDecimal    sum    =    data[row][0].length;    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	8	None	replace
296	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  v  =  new  BigDecimal(v.length  -  1);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  v  =  new  BigDecimal(v.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    -    1);    BigDecimal  v  =  new  BigDecimal(v.length  -  1);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	35	None	add
297	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  sum  =  new  BigDecimal(v.length  -  1));  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1);  BigDecimal  sum  =  new  BigDecimal(v.length  -  1));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal    sum    =    new    BigDecimal(v.length    -    1);    BigDecimal  sum  =  new  BigDecimal(v.length  -  1));	  	non-compiled	[CE]  ';'  expected	35	None	add
298	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][1];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][1];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[v.length][1];	  BigDecimal[][]    out    =    new    BigDecimal[v.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	15	None	replace
299	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(v[0]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(v[0]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(v[0]);	  BigDecimal[]    out    =    new    BigDecimal[row][nRows].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	32	None	replace
300	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length][nRows].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length][nRows].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[v.length][nRows].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[row][nRows].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	32	None	replace
301	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  nRows);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    nCols,    nRows);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int)	54	None	replace
302	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length][0].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length][0].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[v.length][0].multiply(v[row]);	  BigDecimal[]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	101	None	replace
303	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  out.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  out.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row].multiply(v[row]),  out.length);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)	62	None	replace
304	[BUG]  [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[data.length];  [CE]  cannot  find  symbol  sum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  new  BigDecimal[data.length];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  new  BigDecimal[data.length];	  BigDecimal[]    data    =    new    BigDecimal[row];    	non-compiled	[CE]  cannot  find  symbol  sum	3	None	replace
305	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.dataRef();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.dataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.dataRef();	  BigDecimal[]    data    =(BigDecimal[])v.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
306	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.data[row],  out.toArray(new  BigDecimal[v.length]);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.data[row],  out.toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.data[row],  out.toArray(new  BigDecimal[v.length]);	  BigDecimal[]    data    =    this.data[row].toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  ';'  expected	1	None	replace
307	[BUG]  [BUGGY]  BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[this.data.length]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[this.data.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  v[row].toArray(new  BigDecimal[this.data.length]);	  BigDecimal[]    data    =    this.data[row].toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
308	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length],  v.length);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length],  v.length);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.data[row].toArray(new  BigDecimal[v.length],  v.length);	  BigDecimal[]    data    =    this.data[row].toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
309	[BUG]  [BUGGY]  BigDecimal[]  v  =(BigDecimal[])v.clone();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =(BigDecimal[])v.clone();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =(BigDecimal[])v.clone();	  BigDecimal[]    data    =(BigDecimal[])v.clone();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	31	None	replace
310	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.data.clone();  [CE]  cannot  find  symbol  data  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.data.clone();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.data.clone();	  BigDecimal[]    data    =(BigDecimal[])v.clone();    	non-compiled	[CE]  cannot  find  symbol  data	31	None	replace
311	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  TOO_SMALL;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	add	BigDecimal  sum  =  TOO_SMALL;	  BigDecimal    sum    =    ONE;    BigDecimal    sum    =    ONE;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	4	replace
312	[BUG]  [BUGGY]  BigDecimal  sum  =  TOO_SMALL;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  TOO_SMALL;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  TOO_SMALL;	  BigDecimal    sum    =    ONE;    BigDecimal    sum    =    ONE;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	4	replace
313	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.getDataInput();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.getDataInput();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.getDataInput();	  BigDecimal[]    data    =(BigDecimal[])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
314	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  out);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row]),    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])	96	None	replace
315	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int,int)	92	None	replace
316	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  out,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int)	92	None	replace
317	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)	92	None	replace
318	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataReference();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataReference();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataReference();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataReference();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
319	[BUG]  [BUGGY]  BigDecimal  sum  =  NO.toBigDecimal();  [CE]  cannot  find  symbol  NO  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  NO.toBigDecimal();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  NO.toBigDecimal();	  BigDecimal    sum    =    ONE;    BigDecimal    sum    =    NO;    	non-compiled	[CE]  cannot  find  symbol  NO	99	None	replace
320	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][1].multiply(v[1]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][1].multiply(v[1]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][1].multiply(v[1]);	  BigDecimal[][]    out    =    data[row][0].multiply(v[0]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	76	None	replace
321	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[1]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][0].toArray(new  BigDecimal[1]);	  BigDecimal[]    out    =    data[row][0].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	103	None	replace
322	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data,  out);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],BigDecimal[])	87	None	replace
323	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  /  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	add	BigDecimal  sum  =  new  BigDecimal(v.length  /  1);	  BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
324	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  /  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  /  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length  /  1);	  BigDecimal    sum    =    new    BigDecimal(v.length    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
325	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  nRows,  row);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int,int)  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  nRows,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data,  nRows,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length,    nRows,    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int,int)	42	None	replace
326	[BUG]  [BUGGY]  BigDecimal  sum  =  ZERO;  bigDecimal  sum  =  ONE;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  ZERO;  bigDecimal  sum  =  ONE;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  ZERO;  bigDecimal  sum  =  ONE;	  BigDecimal    sum    =    ONE;    bigDecimal    sum    =    ONE;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
327	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row])+  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row])+  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row])+  1);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row])+    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
328	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][column].multiply(v[row])+  1);  [CE]  cannot  find  symbol  column  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][column].multiply(v[row])+  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][column].multiply(v[row])+  1);	  BigDecimal    sum    =    new    BigDecimal(data[row][row].multiply(v[row])+    1);    	non-compiled	[CE]  cannot  find  symbol  column	63	None	replace
329	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][column].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][column].multiply(v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][column].multiply(v[row]);	  BigDecimal[][]    out    =    data[row][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	90	None	replace
330	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][1].multiply(v[0]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][1].multiply(v[0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][1].multiply(v[0]);	  BigDecimal[][]    out    =    data[row][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	90	None	replace
331	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  nCols);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data,  row,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nCols);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[][],int,int)	40	None	replace
332	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  nCols);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  out,  row,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nCols);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,int)	40	None	replace
333	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][columnDimension].multiply(v[row]);  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][columnDimension].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][columnDimension].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[data.length][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	82	None	replace
334	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[1]);  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][0].multiply(v[1]);	  BigDecimal[][]    out    =    new    BigDecimal[data.length][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	82	None	replace
335	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[data.length  ]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[data.length  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[data.length  ]);	  BigDecimal[]    data    =(BigDecimal[])data.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
336	[BUG]  [BUGGY]  BigDecimal[][]  data  =  this.getDataRef();  BigDecimal[][]  v  =(BigDecimal[][])this.getDataRef();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =  this.getDataRef();  BigDecimal[][]  v  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =  this.getDataRef();  BigDecimal[][]  v  =(BigDecimal[][])this.getDataRef();	          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]    v    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	78	None	replace
337	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][row.length];  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][row.length];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][row.length];	  BigDecimal[][]    out    =    new    BigDecimal[row][v.length];    	non-compiled	[CE]  ']'  expected	106	None	replace
338	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[v.length];	  BigDecimal[][]    out    =    new    BigDecimal[row][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	106	None	replace
339	[BUG]  [BUGGY]  Integer  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  Integer  nCols  =  this.getColumnDimension();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	Integer  nCols  =  this.getColumnDimension();	  int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	44	None	replace
340	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][0].multiply(v[0]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][0].multiply(v[0]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][0].multiply(v[0]);	  BigDecimal[]    out    =    new    BigDecimal[data.length][row].multiply(v[row]);    	non-compiled	[CE]  ']'  expected	70	None	replace
341	[BUG]  [BUGGY]  BigDecimal[]  data  =  v.toArray(new  BigDecimal[data[row]);  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  v.toArray(new  BigDecimal[data[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  v.toArray(new  BigDecimal[data[row]);	  BigDecimal[]    data    =    v.toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  ']'  expected	64	None	replace
342	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.getDataRef().toArray(new  BigDecimal[nRows]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.getDataRef().toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.getDataRef().toArray(new  BigDecimal[nRows]);	  BigDecimal[]    data    =    v.toArray(new    BigDecimal[nRows]);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
343	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[data.length  +  1]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[data.length  +  1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[data.length  +  1]);	  BigDecimal[]    v    =    data[row][row].toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	104	None	replace
344	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[data.length  -  1]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[data.length  -  1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[data.length  -  1]);	  BigDecimal[]    v    =    data[row][row].toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	104	None	replace
345	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[v.length]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][row].toArray(new  BigDecimal[v.length]);	  BigDecimal[]    v    =    data[row][row].toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	104	None	replace
346	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[data.length]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[data.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][0].toArray(new  BigDecimal[data.length]);	  BigDecimal[]    v    =    data[row][row].toArray(new    BigDecimal[data.length]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	104	None	replace
347	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row][row]);  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row][row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(v[row][row]);	  BigDecimal[]    out    =    new    BigDecimal[nRows][row].multiply(data[row][row]);    	non-compiled	[CE]  ']'  expected	34	None	replace
348	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(nRows);  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(nRows);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[data[row][row].multiply(nRows);	  BigDecimal[]    out    =    new    BigDecimal[nRows][row].multiply(data[row][row]);    	non-compiled	[CE]  ']'  expected	34	None	replace
349	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  v.length,  row);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  v.length,  row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  v.length,  row);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	92	None	replace
350	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  v.length,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  row,  v.length,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  row,  v.length,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int,int)	92	None	replace
351	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row].subtract(v[row].length);  [CE]  cannot  find  symbol  length  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row].subtract(v[row].length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row].subtract(v[row].length);	  BigDecimal    sum    =    data[row].length;    	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
352	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row].add(v.length);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row].add(v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row].add(v.length);	  BigDecimal    sum    =    data[row].length;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
353	[BUG]  [BUGGY]  BigDecimal  amount  =  new  BigDecimal(v.length,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  new  BigDecimal(v.length,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  new  BigDecimal(v.length,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    amount    =    new    BigDecimal(v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int)	50	None	replace
354	[BUG]  [BUGGY]  BigDecimal  amount  =  new  BigDecimal(v.length  -  1);  [CE]  cannot  find  symbol  sum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  new  BigDecimal(v.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  new  BigDecimal(v.length  -  1);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    amount    =    new    BigDecimal(v.length);    	non-compiled	[CE]  cannot  find  symbol  sum	50	None	replace
355	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(v[1]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(v[1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  new  BigDecimal[row][0].multiply(v[1]);	  BigDecimal[]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	101	None	replace
356	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row],  data[row][0]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row],  data[row][0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row],  data[row][0]);	  BigDecimal    sum    =    new    BigDecimal(data[row][row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	95	None	replace
357	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row],  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][row],  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][row],  out);	  BigDecimal    sum    =    new    BigDecimal(data[row][row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal[])	95	None	replace
358	[BUG]  [BUGGY]  BigDecimal[]  data  =  this.getDataRef(row,  data.length);  [CE]  method  getDataRef  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  this.getDataRef(row,  data.length);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  this.getDataRef(row,  data.length);	  BigDecimal[]    data    =    this.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  method  getDataRef  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;	65	None	replace
359	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][1].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][1].multiply(v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][1].multiply(v[row]);	  BigDecimal[][]    out    =    data[row][row].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	90	None	replace
360	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.rows.size()  ]);  [CE]  cannot  find  symbol  rows  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.rows.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[this.rows.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])this.data.toArray(new    BigDecimal[row.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  rows	4	None	replace
361	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row.length][1];  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row.length][1];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row.length][1];	  BigDecimal[][]    out    =    new    BigDecimal[data[row.length][row];    	non-compiled	[CE]  ']'  expected	14	None	replace
362	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v[row]));  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].multiply(v[row]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].multiply(v[row]));	  BigDecimal    sum    =    data[row][0].multiply(out);    	non-compiled	[CE]  ';'  expected	74	None	replace
363	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length  -  1,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length  -  1,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    Sum    =    new    BigDecimal(v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int)	48	None	replace
364	[BUG]  [BUGGY]  BigDecimal[][]  out  =(BigDecimal[][])this.getRowDataRef();  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =(BigDecimal[][])this.getRowDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =(BigDecimal[][])this.getRowDataRef();	          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]    out    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	77	None	replace
365	[BUG]  [BUGGY]  BigDecimal  sum  =  0L;  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  0L;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  0L;	  BigDecimal    sum    =    0;    	non-compiled	[CE]  incompatible  types	60	None	replace
366	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal[row.length];  [CE]  int  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal[row.length];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal[row.length];	  BigDecimal    sum    =    new    BigDecimal[row];    	non-compiled	[CE]  int  cannot  be  dereferenced	67	None	replace
367	[BUG]  [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length,  v.length);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  v  =  new  BigDecimal(v.length,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  v  =  new  BigDecimal(v.length,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length);    BigDecimal    v    =    new    BigDecimal(v.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	84	None	replace
368	[BUG]  [BUGGY]  Integer  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  Integer  nCols  =  this.getRowDimension();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	Integer  nCols  =  this.getRowDimension();	  int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	44	None	replace
369	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][1].multiply(v[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][1].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][1].multiply(v[row]);	  BigDecimal[][]    out    =    new    BigDecimal[row][nRows].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	24	None	replace
370	[BUG]  [BUGGY]  BigDecimal[]  v  =  data[row][0].multiply(v[row]);  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  v  =  data[row][0].multiply(v[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  v  =  data[row][0].multiply(v[row]);	  BigDecimal[]    v    =    data[row][0].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	29	None	replace
371	[BUG]  [BUGGY]  BigDecimal[]  data  =  out[row].toArray(new  BigDecimal[row]);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  out[row].toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  out[row].toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =    v[row].toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
372	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][nRows];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][nRows];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][nRows];	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[nRows]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	28	None	replace
373	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][row].multiply(v[row].length);  [CE]  cannot  find  symbol  length  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][row].multiply(v[row].length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][row].multiply(v[row].length);	  BigDecimal    sum    =    data[row][row].length;    	non-compiled	[CE]  cannot  find  symbol  length	94	None	replace
374	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][row].subtract(v[row][row].length);  [CE]  array  required,  but  BigDecimal  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][row].subtract(v[row][row].length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][row].subtract(v[row][row].length);	  BigDecimal    sum    =    data[row][row].length;    	non-compiled	[CE]  array  required,  but  BigDecimal  found	94	None	replace
375	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length);    bigDecimal    sum    =    new    BigDecimal(v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal[],int)	49	None	replace
376	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.removeDataRef();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.removeDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.removeDataRef();	  BigDecimal[]    data    =(BigDecimal[])this.data.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
377	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[nRows]);  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[nRows]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data[row.toArray(new  BigDecimal[nRows]);	  BigDecimal[]    data    =(BigDecimal[])data[row.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  ']'  expected	100	None	replace
378	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row].toArray(new  BigDecimal[v.length]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row].toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row].toArray(new  BigDecimal[v.length]);	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	80	None	replace
379	[BUG]  [BUGGY]  BigDecimal[]  out  =  out.toArray(new  BigDecimal[v.length]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  out.toArray(new  BigDecimal[v.length]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  out.toArray(new  BigDecimal[v.length]);	  BigDecimal[]    v    =    out.toArray(new    BigDecimal[v.length]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	80	None	replace
380	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row].length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row].length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row].length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    out.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int)	79	None	replace
381	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.data.getDataRef();  [CE]  cannot  find  symbol  data  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.data.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.data.getDataRef();	  BigDecimal[]    data    =(BigDecimal[])v.getDataRef();    	non-compiled	[CE]  cannot  find  symbol  data	26	None	replace
382	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])v.toArray();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])v.toArray();	  BigDecimal[]    data    =(BigDecimal[])v.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
383	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row][column].toArray(new  BigDecimal[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row][column].toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row][column].toArray(new  BigDecimal[row]);	  BigDecimal[]    out    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	81	None	replace
384	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row],  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row],  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row],  v.length);	  BigDecimal    sum    =    new    BigDecimal(v[row]);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,int)	39	None	replace
385	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(v[row]),  v[row]);  [CE]  array  required,  but  BigDecimal  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(v[row]),  v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v[row][0].multiply(v[row]),  v[row]);	  BigDecimal    sum    =    new    BigDecimal(v[row][0].multiply(v[row]));    	non-compiled	[CE]  array  required,  but  BigDecimal  found	17	None	replace
386	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][col].multiply(v[row]));  [CE]  cannot  find  symbol  col  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][col].multiply(v[row]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][col].multiply(v[row]));	  BigDecimal    sum    =    new    BigDecimal(data[row][column].multiply(v[row]));    	non-compiled	[CE]  cannot  find  symbol  col	18	None	replace
387	[BUG]  [BUGGY]  BigDecimal  amount  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[0]));  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[0]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  new  BigDecimal(data[row][0],  data[row][0].multiply(v[0]));	  BigDecimal    sum    =    ONE;    BigDecimal    amount    =    ONE;    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	58	None	replace
388	[BUG]  [BUGGY]  BigDecimal  amount  =  new  BigDecimal(data[row][0].multiply(v[0].multiply(v[1]));  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  amount  =  new  BigDecimal(data[row][0].multiply(v[0].multiply(v[1]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  amount  =  new  BigDecimal(data[row][0].multiply(v[0].multiply(v[1]));	  BigDecimal    sum    =    ONE;    BigDecimal    amount    =    ONE;    	non-compiled	[CE]  ')'  expected	58	None	replace
389	[BUG]  [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[0],  v.length);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  data[row][0].multiply(v[0],  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  data[row][0].multiply(v[0],  v.length);	  BigDecimal[][]    out    =    data[row][0].multiply(v[0]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	76	None	replace
390	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[this.data.size()  ]);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[this.data.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])data.toArray(new  BigDecimal[this.data.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
391	[BUG]  [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[DataUtils.size()  ]);  [CE]  cannot  find  symbol  DataUtils  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[DataUtils.size()  ]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(BigDecimal[])this.data.toArray(new  BigDecimal[DataUtils.size()  ]);	  BigDecimal[]    data    =(BigDecimal[])data.toArray(new    BigDecimal[data.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  DataUtils	75	None	replace
392	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[0].multiply(v[1]));  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[0].multiply(v[1]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[0].multiply(v[1]));	  BigDecimal    sum    =    ONE;    BigDecimal    sum    =    ONE;    	non-compiled	[CE]  ')'  expected	56	None	replace
393	[BUG]  [BUGGY]  BigDecimal[]  data  =(bigDecimal[])v.clone();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =(bigDecimal[])v.clone();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =(bigDecimal[])v.clone();	  BigDecimal[]    data    =(BigDecimal[])v.clone();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
394	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  v.length,  v.length);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  v.length,  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  v.length,  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    v.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,int,int)	93	None	replace
395	[BUG]  [BUGGY]  BigDecimal[]  data  =  data[row].toArray(new  BigDecimal[row]);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  data  =  data[row].toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  data  =  data[row].toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
396	[BUG]  [BUGGY]  BigDecimal[]  out  =  data[row].toArray(new  BigDecimal[row]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[]  out  =  data[row].toArray(new  BigDecimal[row]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[]  out  =  data[row].toArray(new  BigDecimal[row]);	  BigDecimal[]    data    =    out.toArray(new    BigDecimal[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	30	None	replace
397	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  data[row][0]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  data[row][0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][0].multiply(v[row]),  data[row][0]);	  BigDecimal    sum    =    new    BigDecimal(data[row][0].multiply(v[row]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	16	None	replace
398	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].subtract(v[row][0].multiply(v[row]));  [CE]  array  required,  but  BigDecimal  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].subtract(v[row][0].multiply(v[row]));  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].subtract(v[row][0].multiply(v[row]));	  BigDecimal    sum    =    data[row][0].length;    	non-compiled	[CE]  array  required,  but  BigDecimal  found	8	None	replace
399	[BUG]  [BUGGY]  BigDecimal  sum  =  data[row][0].subtract(v[row][0].length);  [CE]  array  required,  but  BigDecimal  found  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  data[row][0].subtract(v[row][0].length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  data[row][0].subtract(v[row][0].length);	  BigDecimal    sum    =    data[row][0].length;    	non-compiled	[CE]  array  required,  but  BigDecimal  found	8	None	replace
400	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row,  row.length],  v.length);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row,  row.length],  v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row,  row.length],  v.length);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data.length);    	non-compiled	[CE]  ']'  expected	97	None	replace
401	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row  +  1;  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	int  nCols  =  this.getColumnDimension()  +  row  +  1;	  int    nCols    =    this.getColumnDimension()    +    row;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	46	None	replace
402	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nCols);  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nCols);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nCols);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nCols);    	non-compiled	[CE]  ']'  expected	40	None	replace
403	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nCols]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nCols]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nCols]);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nCols);    	non-compiled	[CE]  ']'  expected	40	None	replace
404	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(v[1]);  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(v[1]);  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][0].multiply(v[1]);	  BigDecimal[][]    out    =    new    BigDecimal[row][0].multiply(v[row]);    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	89	None	replace
405	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataInput();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataInput();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])this.data.getDataInput();	  BigDecimal[][]    data    =(BigDecimal[][])this.getDataInput();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
406	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][col];  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[data[row][col];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[data[row][col];	  BigDecimal[][]    out    =    new    BigDecimal[data[row][row];    	non-compiled	[CE]  ']'  expected	68	None	replace
407	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nRows]);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nRows]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nRows]);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nRows);    	non-compiled	[CE]  ']'  expected	53	None	replace
408	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nRows);  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nRows);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row,  nRows);	  BigDecimal    sum    =    new    BigDecimal(v.length,    row,    nRows);    	non-compiled	[CE]  ']'  expected	53	None	replace
409	[BUG]  [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          BigDecimal[][]    data    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	                BigDecimal[][]        data        =(BigDecimal[][])this.getDataRef();        BigDecimal[][]    dataset    =(BigDecimal[][])this.getDataRef();    BigDecimal[][]  out  =(BigDecimal[][])this.getDataRef();  BigDecimal[][]  dataset  =(BigDecimal[][])this.getDataRef();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	11	None	add
410	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][1];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[row][1];  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  out  =  new  BigDecimal[row][1];	  BigDecimal[][]    out    =    new    BigDecimal[row][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	106	None	replace
411	[BUG]  [BUGGY]  BigDecimal[][]  outData  =(BigDecimal[][])this.getDataRow();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  outData  =(BigDecimal[][])this.getDataRow();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  outData  =(BigDecimal[][])this.getDataRow();	  BigDecimal[][]    outData    =(BigDecimal[][])this.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
412	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  row,  out);  [CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  row,  out);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(v.length,  data[row],  row,  out);	  BigDecimal    sum    =    new    BigDecimal(v.length,    data[row],    row);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(int,BigDecimal[],int,BigDecimal[])	41	None	replace
413	[BUG]  [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.data.getDataRef();  [CE]  cannot  find  symbol  data  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal[][]  data  =(BigDecimal[][])v.data.getDataRef();  [BUGGY]      BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal[][]  data  =(BigDecimal[][])v.data.getDataRef();	  BigDecimal[][]    data    =(BigDecimal[][])v.getDataRef();    	non-compiled	[CE]  cannot  find  symbol  data	21	None	replace
414	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row]),  v[row]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row]),  v[row]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row]),  v[row]);	  BigDecimal    sum    =    new    BigDecimal(data[row][1].multiply(v[row]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	83	None	replace
415	[BUG]  [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row]),  data[row][0]);  [CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row]),  data[row][0]);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	993	993	2	replace	BigDecimal  sum  =  new  BigDecimal(data[row][1].multiply(v[row]),  data[row][0]);	  BigDecimal    sum    =    new    BigDecimal(data[row][1].multiply(v[row]));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigDecimal(BigDecimal,BigDecimal)	83	None	replace
