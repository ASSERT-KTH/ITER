bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  v[i].doubleValue();  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  v[i].doubleValue();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  v[i].doubleValue();  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  not  a  statement	98	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i].doubleValue();  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i].doubleValue();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i].doubleValue();  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  not  a  statement	98	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i].doubleValue();  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i].doubleValue();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i].doubleValue();  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  not  a  statement	98	None	replace
4	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length][row  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[v.length][row  +  1];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[v.length][row  +  1];	  double[][]    out    =    new    double[v.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	52	None	replace
5	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  +  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][row  +  2];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][row  +  2];	  double[][]    out    =    new    double[v.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	52	None	replace
6	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  *  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][row  *  1];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][row  *  1];	  double[][]    out    =    new    double[v.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	52	None	replace
7	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][nCols];  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][nCols];	  final    double[]    dataRow    =    data[row][column];    	non-compiled	[CE]  incompatible  types	93	None	replace
8	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][nRows];  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][nRows];	  final    double[]    dataRow    =    data[row][column];    	non-compiled	[CE]  incompatible  types	93	None	replace
9	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[nRows][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[nRows][row];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[nRows][row];	  final    double[][]    out    =    new    double[nCols][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	36	None	replace
10	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[row][nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[row][nCols];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[row][nCols];	  final    double[][]    out    =    new    double[nCols][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	36	None	replace
11	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[nCols][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[nCols][v.length];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[nCols][v.length];	  final    double[][]    out    =    new    double[nCols][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	36	None	replace
12	[BUG]  [BUGGY]  double[][]  data  =(double[][])v.getDataRef();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  data  =(double[][])v.getDataRef();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])v.getDataRef();	  double[][]    data    =(double[][])this.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
13	[BUG]  [BUGGY]  double[][]  data  =(double[][])this.getDataRow();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  data  =(double[][])this.getDataRow();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])this.getDataRow();	  double[][]    data    =(double[][])this.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
14	[BUG]  [BUGGY]  double[][]  data  =(double[][])row.getDataRef();  [CE]  int  cannot  be  dereferenced  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  data  =(double[][])row.getDataRef();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])row.getDataRef();	  double[][]    data    =(double[][])this.getDataRef();    	non-compiled	[CE]  int  cannot  be  dereferenced	101	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRow  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    For(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	71	None	replace
16	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  final  double[]  dataRow  =  new  double[nRows  -  1];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  final  double[]  dataRow  =  new  double[nRows  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    -    1];    final  double[]  dataRow  =  new  double[nRows  -  1];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	43	None	add
17	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  final  int[]  dataRow  =  new  double[nRows  -  1];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  final  int[]  dataRow  =  new  double[nRows  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    -    1];    final  int[]  dataRow  =  new  double[nRows  -  1];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	43	None	add
18	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  Final  double[]  dataRow  =  new  double[nRows  -  1];  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  Final  double[]  dataRow  =  new  double[nRows  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    -    1];    Final  double[]  dataRow  =  new  double[nRows  -  1];	  	non-compiled	[CE]  not  a  statement	43	None	add
19	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length][0];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[v.length][0];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[v.length][0];	  double[][]    out    =    new    double[v.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	83	None	replace
20	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][1];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][1];	  double[][]    out    =    new    double[v.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	83	None	replace
21	[BUG]  [BUGGY]  double[][]  out  =  new  double[nRows][0];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[nRows][0];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[nRows][0];	  double[][]    out    =    new    double[v.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	83	None	replace
22	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  *  row];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	4	replace
23	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  row];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  *  row];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	4	replace
24	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row  *  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[row  *  nCols];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	4	replace
25	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[row  *  nCols];  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row  *  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[row  *  nCols];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	4	replace
26	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  /  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  /  nCols];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	4	replace
27	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  /  nCols];  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  /  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  /  nCols];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	4	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[v.length  *  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[v.length  *  nCols];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	46	4	replace
29	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[v.length  *  nCols];  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[v.length  *  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[v.length  *  nCols];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	46	4	replace
30	[BUG]  [BUGGY]  static  final  double[]  dataRow  =  this.data[row];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  static  final  double[]  dataRow  =  this.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	static  final  double[]  dataRow  =  this.data[row];	  final    double[]    dataRow    =    this.data[row];    final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
31	[BUG]  [BUGGY]  final  int[]  dataRow  =  this.data[row];  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  int[]  dataRow  =  this.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  int[]  dataRow  =  this.data[row];	  final    double[]    dataRow    =    this.data[row];    final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  incompatible  types	55	None	replace
32	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  v.length;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  &  v.length;	  final    double[]    dataRow    =    this.data[row]    &    0xff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	16	None	replace
33	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff,  v.length;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff,  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  &  0xff,  v.length;	  final    double[]    dataRow    =    this.data[row]    &    0xff;    	non-compiled	[CE]  ';'  expected	16	None	replace
34	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.data[row]  &  0xff;  [CE]  cannot  find  symbol  data  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v.data[row]  &  0xff;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v.data[row]  &  0xff;	  final    double[]    dataRow    =    this.data[row]    &    0xff;    	non-compiled	[CE]  cannot  find  symbol  data	16	None	replace
35	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  *  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  this.data[row  *  1];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
36	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row  *  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  *  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row  *  1];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
37	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  +  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  this.data[row  +  2];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
38	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row  +  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  +  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row  +  2];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
39	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row++];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  this.data[row++];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
40	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row++];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row++];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row++];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
41	[BUG]  [BUGGY]  int  nSum  =  getSelectionDimension().length;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  getSelectionDimension().length;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  getSelectionDimension().length;	  int    nSum    =    getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
42	[BUG]  [BUGGY]  int  nSum  =  getSelectionDimension()  +  1;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  getSelectionDimension()  +  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  getSelectionDimension()  +  1;	  int    nSum    =    getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
43	[BUG]  [BUGGY]  final  double[]  dataRow  =  dataRow[row]  *  v.length;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  dataRow[row]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  dataRow[row]  *  v.length;	  final    double[]    dataRow    =    v[row]    *    dataRow.length;    	non-compiled	[CE]  incompatible  types	77	None	replace
44	[BUG]  [BUGGY]  final  double[]  dataRow  =  dataRows[row]  *  v.length;  [CE]  cannot  find  symbol  dataRows  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  dataRows[row]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  dataRows[row]  *  v.length;	  final    double[]    dataRow    =    v[row]    *    dataRow.length;    	non-compiled	[CE]  cannot  find  symbol  dataRows	77	None	replace
45	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  *  v.length;  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  *  v.length;	  final    double[]    dataRow    =    v[row]    *    dataRow.length;    	non-compiled	[CE]  incompatible  types	77	None	replace
46	[BUG]  [BUGGY]  int  nSum  =  this.getSum(v,  row);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getSum(v,  row);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSum(v,  row);	  int    nSum    =    this.getSum(v.length);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
47	[BUG]  [BUGGY]  int  nSum  =  this.getSum(v);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getSum(v);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSum(v);	  int    nSum    =    this.getSum(v.length);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
48	[BUG]  [BUGGY]  int  vSum  =  this.getSum(v.length);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  vSum  =  this.getSum(v.length);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  vSum  =  this.getSum(v.length);	  int    nSum    =    this.getSum(v.length);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    ==    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  ==  v[i])  {  out[i]  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  ==  v[i])  {  out[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  ==  v[i])  {  out[i]  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    ==    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]!=    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  null)  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  null)  {  out  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  null)  {  out  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]!=    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
53	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[row][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[row][v.length];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[row][v.length];	  final    double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	50	None	replace
54	[BUG]  [BUGGY]  double[][]  out  =  new  double[row][v.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[row][v.length  +  1];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[row][v.length  +  1];	  double[][]    out    =    new    double[row][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	51	None	replace
55	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  +  v.length;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  +  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  +  v.length;	  final    double[]    dataRow    =    data[row][1]    +    v.length;    	non-compiled	[CE]  incompatible  types	92	None	replace
56	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row][1]  +  data.length;  [CE]  array  required,  but  double  found  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row][1]  +  data.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row][1]  +  data.length;	  final    double[]    dataRow    =    data[row][1]    +    v.length;    	non-compiled	[CE]  array  required,  but  double  found	92	None	replace
57	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][1]  /  v.length;  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][1]  /  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][1]  /  v.length;	  final    double[]    dataRow    =    data[row][1]    +    v.length;    	non-compiled	[CE]  incompatible  types	92	None	replace
58	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row][0]  *  data.length;  [CE]  array  required,  but  double  found  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row][0]  *  data.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row][0]  *  data.length;	  final    double[]    dataRow    =    data[row][0]    *    v.length;    	non-compiled	[CE]  array  required,  but  double  found	88	None	replace
59	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  v.length;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  /  v.length;	  final    double[]    dataRow    =    data[row][0]    *    v.length;    	non-compiled	[CE]  incompatible  types	88	None	replace
60	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.data[row][0]  *  data.length;  [CE]  cannot  find  symbol  data  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v.data[row][0]  *  data.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v.data[row][0]  *  data.length;	  final    double[]    dataRow    =    data[row][0]    *    v.length;    	non-compiled	[CE]  cannot  find  symbol  data	88	None	replace
61	[BUG]  [BUGGY]  out[i]  +=  v[i]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[i]  +=  v[i]  *  v[i];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[i]  +=  v[i]  *  v[i];	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(v[i]    >    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	23	None	replace
62	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  int  nRows  =  this.getRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  int  nRows  =  this.getRowDimension();	  final    double[]    dataRow    =    new    double[nRows];    final    double[]    dataRow    =    new    double[nRows];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	47	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nCols];	  final    double[]    dataRow    =    new    double[nRows];    final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	47	4	replace
64	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nCols];  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nCols];	  final    double[]    dataRow    =    new    double[nRows];    final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	47	4	replace
65	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  final  double[]  dataRow  =  new  double[data.length];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  final  double[]  dataRow  =  new  double[data.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[data.length];    final  double[]  dataRow  =  new  double[data.length];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	84	None	add
66	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  Final  double[]  dataRow  =  new  double[data.length];  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  Final  double[]  dataRow  =  new  double[data.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[data.length];    Final  double[]  dataRow  =  new  double[data.length];	  	non-compiled	[CE]  not  a  statement	84	None	add
67	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  static  final  double[]  dataRow  =  new  double[data.length];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  static  final  double[]  dataRow  =  new  double[data.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[data.length];    static  final  double[]  dataRow  =  new  double[data.length];	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
68	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  &  0xff;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row]  &  0xff;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row]  &  0xff;	  final    double[]    dataRow    =    v[row]    &    0xff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	54	None	replace
69	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xcf;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xcf;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  &  0xcf;	  final    double[]    dataRow    =    v[row]    &    0xff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	54	None	replace
70	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  int  nCols  =  this.getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  int  nCols  =  this.getColumnDimension();	  final    int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	1	None	replace
71	[BUG]  [BUGGY]  final  double  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double  nCols  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double  nCols  =  this.getRowDimension();	  final    int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	1	None	replace
72	[BUG]  [BUGGY]  final  int  nCols  =  this.getRowDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  int  nCols  =  this.getRowDimension()  +  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  int  nCols  =  this.getRowDimension()  +  1;	  final    int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	1	None	replace
73	[BUG]  [BUGGY]  double  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double  nCols  =  this.getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double  nCols  =  this.getColumnDimension();	  double    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	2	None	replace
74	[BUG]  [BUGGY]  Double  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  Double  nCols  =  this.getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	Double  nCols  =  this.getColumnDimension();	  double    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	2	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >=    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
76	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  /  row;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  /  row;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  /  row;	  final    double[]    dataRow    =    v[row]    *    row;    	non-compiled	[CE]  incompatible  types	53	None	replace
77	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  *  row.length;  [CE]  int  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  *  row.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  *  row.length;	  final    double[]    dataRow    =    v[row]    *    row;    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
78	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  *  v.length;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row]  *  v.length;	  final    double[]    dataRow    =    v[row]    *    row;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	53	None	replace
79	[BUG]  [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nCols  =  this.getRowDimension()  +  1;	  int    nCols    =    this.getColumnDimension()    +    1;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	9	None	replace
80	[BUG]  [BUGGY]  int  nSum  =  this.getSum(row,  v.length);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getSum(row,  v.length);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSum(row,  v.length);	  int    nSum    =    this.getSum(row);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
81	[BUG]  [BUGGY]  int  nSum  =  this.getSum(row,  row);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getSum(row,  row);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSum(row,  row);	  int    nSum    =    this.getSum(row);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
82	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row].data;  [CE]  cannot  find  symbol  data  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row].data;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row].data;	  final    double[]    dataRow    =    v[row].data;    	non-compiled	[CE]  cannot  find  symbol  data	107	None	replace
83	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row].data;  [CE]  cannot  find  symbol  data  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row].data;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row].data;	  final    double[]    dataRow    =    v[row].data;    	non-compiled	[CE]  cannot  find  symbol  data	107	None	replace
84	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row].data.length;  [CE]  double  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row].data.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row].data.length;	  final    double[]    dataRow    =    v[row].data;    	non-compiled	[CE]  double  cannot  be  dereferenced	107	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  data[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	97	None	replace
86	[BUG]  [BUGGY]  int  nSum  =(v.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(v.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(v.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  0;	  int    nSum    =(this.getSelectionDimension()!=    0)?    this.getSelectionDimension()    :    0;    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
87	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[nRows  *  nCols];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[nRows  *  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    *    nCols];    final  double[]  dataRow  =  new  double[nRows  *  nCols];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	45	None	add
88	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[nRows  *  nCOLs];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[nRows  *  nCOLs];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    *    nCols];    final  double[]  dataRow  =  new  double[nRows  *  nCOLs];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	45	None	add
89	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[NRows  *  nCols];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[NRows  *  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    *    nCols];    final  double[]  dataRow  =  new  double[NRows  *  nCols];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	45	None	add
90	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[nRows  *  ncols];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[nRows  *  ncols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    *    nCols];    final  double[]  dataRow  =  new  double[nRows  *  ncols];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	45	None	add
91	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  /  v.length;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row]  /  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row]  /  v.length;	  final    double[]    dataRow    =    v[row]    *    data.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	78	None	replace
92	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  /  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  /  1;	  final    double[]    dataRow    =    this.data[row]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	17	None	replace
93	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  1L;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  1L;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  -  1L;	  final    double[]    dataRow    =    this.data[row]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	17	None	replace
94	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  *  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  *  1;	  final    double[]    dataRow    =    this.data[row]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	17	None	replace
95	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  final  double[]  dataRow  =  new  double[nRows  +  1];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  final  double[]  dataRow  =  new  double[nRows  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    +    1];    final  double[]  dataRow  =  new  double[nRows  +  1];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	41	None	add
96	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  final  double[]  dataRow  =  new  double[NRows  +  1];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  final  double[]  dataRow  =  new  double[NRows  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    +    1];    final  double[]  dataRow  =  new  double[NRows  +  1];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	41	None	add
97	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  Final  double[]  dataRow  =  new  double[nRows  +  1];  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  Final  double[]  dataRow  =  new  double[nRows  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    +    1];    Final  double[]  dataRow  =  new  double[nRows  +  1];	  	non-compiled	[CE]  not  a  statement	41	None	add
98	[BUG]  [BUGGY]  int  nSum  =  v.getSumDimension();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  v.getSumDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  v.getSumDimension();	  int    nSum    =    this.getSumDimension();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
99	[BUG]  [BUGGY]  int  nSum  =  data.getSumDimension();  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  data.getSumDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  data.getSumDimension();	  int    nSum    =    this.getSumDimension();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
100	[BUG]  [BUGGY]  int  nSum  =  getSumDimension();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  getSumDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  getSumDimension();	  int    nSum    =    this.getSumDimension();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
101	[BUG]  [BUGGY]  double[]  dataRow  =(double[])this.getDataRow(row,  v.length);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[]  dataRow  =(double[])this.getDataRow(row,  v.length);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[]  dataRow  =(double[])this.getDataRow(row,  v.length);	  double[]    dataRow    =(double[])this.getDataRow(row);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
102	[BUG]  [BUGGY]  double[]  dataRow  =(double[])this.getDataRow(row,  v);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[]  dataRow  =(double[])this.getDataRow(row,  v);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[]  dataRow  =(double[])this.getDataRow(row,  v);	  double[]    dataRow    =(double[])this.getDataRow(row);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
103	[BUG]  [BUGGY]  double[]  dataRow  =(double[])this.getDataRow(row,  row);  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[]  dataRow  =(double[])this.getDataRow(row,  row);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[]  dataRow  =(double[])this.getDataRow(row,  row);	  double[]    dataRow    =(double[])this.getDataRow(row);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
104	[BUG]  [BUGGY]  out[row]  =  this.getEntry(v,  v.length).doubleValue();  [CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(v,  v.length).doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(v,  v.length).doubleValue();	  out[row]    =    this.getEntry(v.length).doubleValue();    	non-compiled	[CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	91	None	replace
105	[BUG]  [BUGGY]  out[row]  =  this.getEntry(v.length),  v.doubleValue();  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(v.length),  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(v.length),  v.doubleValue();	  out[row]    =    this.getEntry(v.length).doubleValue();    	non-compiled	[CE]  ';'  expected	91	None	replace
106	[BUG]  [BUGGY]  out[row]  =  this.getEntry(v,  row).doubleValue();  [CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(v,  row).doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(v,  row).doubleValue();	  out[row]    =    this.getEntry(v.length).doubleValue();    	non-compiled	[CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	91	None	replace
107	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[nRows][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[nRows][v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[nRows][v.length];	  double[][]    out    =    new    double[nRows][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	82	None	replace
108	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length];	  double[][]    out    =    new    double[nRows][v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	82	None	replace
109	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  +  row;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  +  row;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  +  row;	  final    double[]    dataRow    =    data[row][1]    +    row;    	non-compiled	[CE]  incompatible  types	96	None	replace
110	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][1]  /  row;  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][1]  /  row;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][1]  /  row;	  final    double[]    dataRow    =    data[row][1]    +    row;    	non-compiled	[CE]  incompatible  types	96	None	replace
111	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][1]  +  row  +  1;  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][1]  +  row  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][1]  +  row  +  1;	  final    double[]    dataRow    =    data[row][1]    +    row;    	non-compiled	[CE]  incompatible  types	96	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  nRows  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRow  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  nRows  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  nRows  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    i    =    0;    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	87	None	replace
113	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
114	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
115	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  int  row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  int  row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    int  row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();	  	non-compiled	[CE]  ';'  expected	3	None	add
116	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getColumnDimension();  out[row]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    out[row]  =  this.getColumnDimension();  out[row]  =  this.getRowDimension();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
117	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getColumnDimension();  out[row]  =  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getColumnDimension();  out[row]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    out[row]  =  this.getColumnDimension();  out[row]  =  this.getRowDimension();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
118	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row]  =  this.getRowDimension();  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    for(int  row]  =  this.getRowDimension();  row]  =  this.getRowDimension();	  	non-compiled	[CE]  ';'  expected	3	None	add
119	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[]  dataRow  =  this.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	double[]  dataRow  =  this.data[row];	  final    double[]    dataRow    =    this.data[row];    static    final    double[]    dataRow    =    this.data[row];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	2	replace
120	[BUG]  [BUGGY]  double[]  dataRow  =  this.data[row];  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[]  dataRow  =  this.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[]  dataRow  =  this.data[row];	  final    double[]    dataRow    =    this.data[row];    static    final    double[]    dataRow    =    this.data[row];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	2	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	29	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  out[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  out[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows.length;  i++)  {  out[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	29	None	replace
123	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension(),  v.doubleValue();  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getRowDimension(),  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getRowDimension(),  v.doubleValue();	  out[row]    =    this.getRowDimension().doubleValue();    	non-compiled	[CE]  ';'  expected	58	None	replace
124	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  /  v.length;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  /  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  /  v.length;	  final    double[]    dataRow    =    this.data[row]    *    v.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	103	None	replace
125	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  *  this.data.length;  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  *  this.data.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  *  this.data.length;	  final    double[]    dataRow    =    this.data[row]    *    v.length;    	non-compiled	[CE]  incompatible  types	103	None	replace
126	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.data[row]  *  this.data.length;  [CE]  cannot  find  symbol  data  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v.data[row]  *  this.data.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v.data[row]  *  this.data.length;	  final    double[]    dataRow    =    this.data[row]    *    v.length;    	non-compiled	[CE]  cannot  find  symbol  data	103	None	replace
127	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][nCols];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][nCols];	  double[][]    out    =    new    double[row][nCols];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	38	None	replace
128	[BUG]  [BUGGY]  double[][]  out  =  new  double[nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[nRows];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[nRows];	  double[][]    out    =    new    double[row][nCols];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	38	None	replace
129	[BUG]  [BUGGY]  int  nSum  =  v.length.getSelectionDimension();  [CE]  int  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  v.length.getSelectionDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  v.length.getSelectionDimension();	  int    nSum    =    v.getSelectionDimension();    	non-compiled	[CE]  int  cannot  be  dereferenced	33	None	replace
130	[BUG]  [BUGGY]  int  nSum  =  v.select(row,  v.getSelectionDimension());  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  v.select(row,  v.getSelectionDimension());  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  v.select(row,  v.getSelectionDimension());	  int    nSum    =    v.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
132	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
134	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
136	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
137	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	110	None	add
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
139	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  this.getRowDimension();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
140	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[row];  final  double[]  dataRow  =  new  double[row];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row];  final  double[]  dataRow  =  new  double[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[row];    final  double[]  dataRow  =  new  double[row];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	39	None	add
141	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[row];  static  final  double[]  dataRow  =  new  double[row];  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row];  static  final  double[]  dataRow  =  new  double[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[row];    static  final  double[]  dataRow  =  new  double[row];	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
142	[BUG]  [BUGGY]  out[row]  =  this.getErrorDimension();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getErrorDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getErrorDimension();	          out[row]    =    this.getRowDimension();    for(int    row]    =    this.getRowDimension();    row    <    nRows;    row++)    {    out[row]    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
143	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  v.length  -  1);  [CE]  cannot  find  symbol  dataRow  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(row,  v.length  -  1);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row,  v.length  -  1);	  out[row]    =    this.getEntry(row,    v.length);    	non-compiled	[CE]  cannot  find  symbol  dataRow	105	None	replace
144	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  v.length  +  1);  [CE]  cannot  find  symbol  dataRow  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(row,  v.length  +  1);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row,  v.length  +  1);	  out[row]    =    this.getEntry(row,    v.length);    	non-compiled	[CE]  cannot  find  symbol  dataRow	105	None	replace
145	[BUG]  [BUGGY]  out[row]  =  this.getEntry(v,  row);  [CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(v,  row);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(v,  row);	  out[row]    =    this.getEntry(row,    v.length);    	non-compiled	[CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	105	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    ==    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  ==  v[i])  {  out  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  ==  v[i])  {  out  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  ==  v[i])  {  out  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    ==    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
148	[BUG]  [BUGGY]  int  nSum  =  row.getSelectionDimension()  +  this.getSelectionDimension();  [CE]  int  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  row.getSelectionDimension()  +  this.getSelectionDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  row.getSelectionDimension()  +  this.getSelectionDimension();	  int    nSum    =    this.getSelectionDimension()    +    row;    	non-compiled	[CE]  int  cannot  be  dereferenced	80	None	replace
149	[BUG]  [BUGGY]  int  nSum  =  this.getSelectionDimension()  *  row;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getSelectionDimension()  *  row;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSelectionDimension()  *  row;	  int    nSum    =    this.getSelectionDimension()    +    row;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
150	[BUG]  [BUGGY]  int  nSum  =  this.getSelectionDimension()  +  row,  v.length;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getSelectionDimension()  +  row,  v.length;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSelectionDimension()  +  row,  v.length;	  int    nSum    =    this.getSelectionDimension()    +    row;    	non-compiled	[CE]  ';'  expected	80	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[v.length];	  final    double[]    dataRow    =    new    double[row];    	compilable	  [FE]  AssertionFailedError  	40	4	replace
152	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[v.length];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[v.length];	  final    double[]    dataRow    =    new    double[row];    	compilable	  [FE]  AssertionFailedError  	40	4	replace
153	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[row.length];  [CE]  int  cannot  be  dereferenced  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[row.length];	  final    double[]    dataRow    =    new    double[row];    	non-compiled	[CE]  int  cannot  be  dereferenced	40	None	replace
154	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[row  +  1];	  final    double[]    dataRow    =    new    double[row];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	4	replace
155	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[row  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[row  +  1];	  final    double[]    dataRow    =    new    double[row];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	4	replace
156	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
157	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
158	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
159	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	68	None	add
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	68	4	add
161	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	68	4	add
162	[BUG]  [BUGGY]  int  nSum  =  this.data.getSum();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.data.getSum();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.data.getSum();	  int    nSum    =    data.getSum();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
163	[BUG]  [BUGGY]  int  nSum  =  data[row].getSum();  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  data[row].getSum();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  data[row].getSum();	  int    nSum    =    data.getSum();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
164	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()!=  0)?  this.getRowDimension()  :  v.doubleValue();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(v.doubleValue()!=  0)?  this.getRowDimension()  :  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()!=  0)?  this.getRowDimension()  :  v.doubleValue();	  out[row]    =(v.doubleValue()    >=    0)?    this.getRowDimension()    :    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
165	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  >  0)?  this.getRowDimension()  :  v.doubleValue();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(v.doubleValue()  >  0)?  this.getRowDimension()  :  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  >  0)?  this.getRowDimension()  :  v.doubleValue();	  out[row]    =(v.doubleValue()    >=    0)?    this.getRowDimension()    :    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
166	[BUG]  [BUGGY]  int  nSum  =  this.getRowDimension();  [CE]  cannot  find  symbol  dataRow  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getRowDimension();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getRowDimension();	  int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataRow	30	None	replace
167	[BUG]  [BUGGY]  int  nSum  =  this.getColumnDimension()  +  1;  [CE]  cannot  find  symbol  dataRow  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getColumnDimension()  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getColumnDimension()  +  1;	  int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataRow	30	None	replace
168	[BUG]  [BUGGY]  int  nSum  =  this.getColumnDimension()  +  row;  [CE]  cannot  find  symbol  dataRow  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getColumnDimension()  +  row;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getColumnDimension()  +  row;	  int    nSum    =    this.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataRow	30	None	replace
169	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  *  row;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getColumnDimension()  *  row;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nCols  =  this.getColumnDimension()  *  row;	  int    nCols    =    this.getColumnDimension()    +    row;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	10	None	replace
170	[BUG]  [BUGGY]  int  nCols  =  this.getRowDimension()  +  row;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getRowDimension()  +  row;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nCols  =  this.getRowDimension()  +  row;	  int    nCols    =    this.getColumnDimension()    +    row;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	10	None	replace
171	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  v.length;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  v.length;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nCols  =  this.getColumnDimension()  +  v.length;	  int    nCols    =    this.getColumnDimension()    +    row;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	10	None	replace
172	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[row  -  1];	  final    double[]    dataRow    =    new    double[nRows    -    1];    	compilable	  [FE]  NegativeArraySizeException  	44	4	replace
173	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[row  -  1];  [FE]  NegativeArraySizeException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[row  -  1];	  final    double[]    dataRow    =    new    double[nRows    -    1];    	compilable	  [FE]  NegativeArraySizeException  	44	4	replace
174	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  -  2];	  final    double[]    dataRow    =    new    double[nRows    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	4	replace
175	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  -  2];	  final    double[]    dataRow    =    new    double[nRows    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	4	replace
176	[BUG]  [BUGGY]  double[][]  data  =(double[][])v.getDataRef().clone();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  data  =(double[][])v.getDataRef().clone();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])v.getDataRef().clone();	  double[][]    data    =(double[][])this.getDataRef().clone();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
177	[BUG]  [BUGGY]  double[][]  data  =(double[][])v.clone();  [CE]  inconvertible  types  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  data  =(double[][])v.clone();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])v.clone();	  double[][]    data    =(double[][])this.getDataRef().clone();    	non-compiled	[CE]  inconvertible  types	102	None	replace
178	[BUG]  [BUGGY]  double[][]  data  =(double[][])this.getDataRow().clone();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  data  =(double[][])this.getDataRow().clone();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])this.getDataRow().clone();	  double[][]    data    =(double[][])this.getDataRef().clone();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
179	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][0]  +  1;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row][0]  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row][0]  +  1;	  final    double[]    dataRow    =    this.data[row][0];    	non-compiled	[CE]  incompatible  types	18	None	replace
180	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][0]  /  2;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row][0]  /  2;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row][0]  /  2;	  final    double[]    dataRow    =    this.data[row][0];    	non-compiled	[CE]  incompatible  types	18	None	replace
181	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  2  +  1;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  2  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  /  2  +  1;	  final    double[]    dataRow    =    data[row][0]    /    2;    	non-compiled	[CE]  incompatible  types	89	None	replace
182	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  2L;  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  2L;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  /  2L;	  final    double[]    dataRow    =    data[row][0]    /    2;    	non-compiled	[CE]  incompatible  types	89	None	replace
183	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  *  2;  [CE]  incompatible  types  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  *  2;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  *  2;	  final    double[]    dataRow    =    data[row][0]    /    2;    	non-compiled	[CE]  incompatible  types	89	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  v[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	13	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	27	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows.length;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	27	None	replace
187	[BUG]  [BUGGY]  double[][]  dataRows  =  v.toArray(new  double[row]);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRows  =  v.toArray(new  double[row]);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRows  =  v.toArray(new  double[row]);	  double[][]    dataRows    =    v.toArray(new    double[nRows]);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
188	[BUG]  [BUGGY]  double[][]  dataRows  =  this.getDataRows().toArray(new  double[nRows]);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRows  =  this.getDataRows().toArray(new  double[nRows]);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRows  =  this.getDataRows().toArray(new  double[nRows]);	  double[][]    dataRows    =    v.toArray(new    double[nRows]);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
189	[BUG]  [BUGGY]  double[][]  dataRows  =  dataRow.toArray(new  double[nRows]);  [CE]  cannot  find  symbol  dataRow  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRows  =  dataRow.toArray(new  double[nRows]);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRows  =  dataRow.toArray(new  double[nRows]);	  double[][]    dataRows    =    v.toArray(new    double[nRows]);    	non-compiled	[CE]  cannot  find  symbol  dataRow	31	None	replace
190	[BUG]  [BUGGY]  out[row]  =  v.getColumnDimension();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  v.getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  v.getColumnDimension();	  out[row]    =    this.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
191	[BUG]  [BUGGY]  out[row]  =  v.getRowDimension();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  v.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  v.getRowDimension();	  out[row]    =    this.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
192	[BUG]  [BUGGY]  int  nSum  =  this.data.getSelectionDimension();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.data.getSelectionDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.data.getSelectionDimension();	  int    nSum    =    data.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
193	[BUG]  [BUGGY]  int  nSum  =  data[row].getSelectionDimension();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  data[row].getSelectionDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  data[row].getSelectionDimension();	  int    nSum    =    data.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
194	[BUG]  [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    row]    =    this.getRowDimension();    row    <    0;    row++)    {    out[row]    =    this.getRowDimension();    }    	non-compiled	[CE]  ';'  expected	75	None	replace
195	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    row]    =    this.getRowDimension();    row    <    0;    row++)    {    out[row]    =    this.getRowDimension();    }    	non-compiled	[CE]  ';'  expected	75	None	replace
196	[BUG]  [BUGGY]  out[row]  =  v.getRowDimension()  +  1;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  v.getRowDimension()  +  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  v.getRowDimension()  +  1;	  out[row]    =    this.getRowDimension()    +    1;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
197	[BUG]  [BUGGY]  out[row]  =  this.getColumnDimension()  +  1;  [CE]  cannot  find  symbol  dataRow  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getColumnDimension()  +  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getColumnDimension()  +  1;	  out[row]    =    this.getRowDimension()    +    1;    	non-compiled	[CE]  cannot  find  symbol  dataRow	66	None	replace
198	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	28	None	replace
199	[BUG]  [BUGGY]  int  nSum  =(this.getSum()  >  0)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSum()  >  0)?  this.getSum()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()  >  0)?  this.getSum()  :  0;	  int    nSum    =(this.getSum()    >=    0)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
200	[BUG]  [BUGGY]  int  nSum  =(this.getSum()  <  0)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSum()  <  0)?  this.getSum()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()  <  0)?  this.getSum()  :  0;	  int    nSum    =(this.getSum()    >=    0)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
201	[BUG]  [BUGGY]  int  nSum  =(this.getSum()!=  0)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSum()!=  0)?  this.getSum()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()!=  0)?  this.getSum()  :  0;	  int    nSum    =(this.getSum()    >=    0)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
202	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  v.length),  v.doubleValue();  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(row,  v.length),  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row,  v.length),  v.doubleValue();	  out[row]    =    this.getEntry(row,    v.length).doubleValue();    	non-compiled	[CE]  ';'  expected	104	None	replace
203	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  nRows).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(row,  nRows).doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row,  nRows).doubleValue();	  out[row]    =    this.getEntry(row,    v.length).doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	104	None	replace
204	[BUG]  [BUGGY]  out  +=  v[i]  *  v[i];  [CE]  cannot  assign  a  value  to  final  variable  out  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out  +=  v[i]  *  v[i];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out  +=  v[i]  *  v[i];	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(v[i]    >    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  out	64	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  null)  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  null)  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  null)  {  out[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]!=    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
206	[BUG]  [BUGGY]  int  nSum  =(v.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(v.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(v.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  0;	  int    nSum    =(this.getSelectionDimension()    ==    0)?    this.getSelectionDimension()    :    0;    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
207	[BUG]  [BUGGY]  int  nSum  =(this.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  1;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  1;	  int    nSum    =(this.getSelectionDimension()    ==    0)?    this.getSelectionDimension()    :    0;    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
208	[BUG]  [BUGGY]  out[row]  =  v.getEntryDimension();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  v.getEntryDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  v.getEntryDimension();	  out[row]    =    this.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
209	[BUG]  [BUGGY]  out[row]  =  row.getEntryDimension();  [CE]  int  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  row.getEntryDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  row.getEntryDimension();	  out[row]    =    this.getEntryDimension();    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
210	[BUG]  [BUGGY]  double[][]  out  =  new  double[row][nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[row][nRows];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[row][nRows];	  double[][]    out    =    new    double[nRows][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	37	None	replace
211	[BUG]  [BUGGY]  out[row]  =  v.getDataImpl().doubleValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  v.getDataImpl().doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  v.getDataImpl().doubleValue();	  out[row]    =    this.getDataImpl().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
212	[BUG]  [BUGGY]  out[row]  =  this.getDataImpl();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getDataImpl();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getDataImpl();	  out[row]    =    this.getDataImpl().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
213	[BUG]  [BUGGY]  int  nSum  =(this.getSelectionDimension()  >  0)?  this.getSelectionDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSelectionDimension()  >  0)?  this.getSelectionDimension()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSelectionDimension()  >  0)?  this.getSelectionDimension()  :  0;	  int    nSum    =(this.getSelectionDimension()    >=    0)?    this.getSelectionDimension()    :    0;    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  out[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  out[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  out[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    out[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	76	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    out[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	76	None	replace
216	[BUG]  [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(row,  v.length);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(row,  v.length);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRow  =(double[][])this.getDataRow(row,  v.length);	  double[][]    dataRow    =(double[][])this.getDataRow(row);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
217	[BUG]  [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(row,  v);  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(row,  v);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRow  =(double[][])this.getDataRow(row,  v);	  double[][]    dataRow    =(double[][])this.getDataRow(row);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
218	[BUG]  [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(row,  row);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(row,  row);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRow  =(double[][])this.getDataRow(row,  row);	  double[][]    dataRow    =(double[][])this.getDataRow(row);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
219	[BUG]  [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(v);  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(v);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRow  =(double[][])this.getDataRow(v);	  double[][]    dataRow    =(double[][])this.getDataRow(row);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
220	[BUG]  [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    row]    =    this.getRowDimension();    row    <    nRows;    row++)    {    out[row]    =    this.getRowDimension();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
221	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    row]    =    this.getRowDimension();    row    <    nRows;    row++)    {    out[row]    =    this.getRowDimension();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
222	[BUG]  [BUGGY]  out[row]  =  v.getUpperDimension();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  v.getUpperDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  v.getUpperDimension();	  out[row]    =    this.getUpperDimension();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
223	[BUG]  [BUGGY]  out[row]  =  this.getLowerDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getLowerDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getLowerDimension();	  out[row]    =    this.getUpperDimension();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
224	[BUG]  [BUGGY]  out[row]  =  row.getUpperDimension();  [CE]  int  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  row.getUpperDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  row.getUpperDimension();	  out[row]    =    this.getUpperDimension();    	non-compiled	[CE]  int  cannot  be  dereferenced	67	None	replace
225	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getRowDimension();  for(int  row]  =  v.length;  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    row]    =    this.getRowDimension();    row    <    nCols;    row++)    {    out[row]    =    this.getRowDimension();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
226	[BUG]  [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getColumnDimension();  for(int  row]  =  v.length;  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    row]    =    this.getRowDimension();    row    <    nCols;    row++)    {    out[row]    =    this.getRowDimension();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
227	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  1;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  /  1;	  final    double[]    dataRow    =    data[row][0]    -    1;    	non-compiled	[CE]  incompatible  types	106	None	replace
228	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  -  1L;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  -  1L;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  -  1L;	  final    double[]    dataRow    =    data[row][0]    -    1;    	non-compiled	[CE]  incompatible  types	106	None	replace
229	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  *  1;  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  *  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  *  1;	  final    double[]    dataRow    =    data[row][0]    -    1;    	non-compiled	[CE]  incompatible  types	106	None	replace
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  +  2];	  final    double[]    dataRow    =    new    double[nRows    +    1];    	compilable	  [FE]  AssertionFailedError  	42	4	replace
231	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  2];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  +  2];	  final    double[]    dataRow    =    new    double[nRows    +    1];    	compilable	  [FE]  AssertionFailedError  	42	4	replace
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  *  1];	  final    double[]    dataRow    =    new    double[nRows    +    1];    	compilable	  [FE]  AssertionFailedError  	42	4	replace
233	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  1];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  *  1];	  final    double[]    dataRow    =    new    double[nRows    +    1];    	compilable	  [FE]  AssertionFailedError  	42	4	replace
234	[BUG]  [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [CE]  cannot  find  symbol  dataRow  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	111	None	replace
235	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  this.getRowDimension();  }  [CE]  cannot  find  symbol  dataRow  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	111	None	replace
236	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row  +  1];  final  double[]  dataRow  =  this.data[row  +  1];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  +  1];  final  double[]  dataRow  =  this.data[row  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    this.data[row    +    1];    final  double[]  dataRow  =  this.data[row  +  1];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	14	None	add
237	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row  +  1];  Final  double[]  dataRow  =  this.data[row  +  1];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  +  1];  Final  double[]  dataRow  =  this.data[row  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    this.data[row    +    1];    Final  double[]  dataRow  =  this.data[row  +  1];	  	non-compiled	[CE]  not  a  statement	14	None	add
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  int[]  dataRow  =  new  int[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  int[]  dataRow  =  new  int[nRows];	  final    double[]    dataRow    =    new    double[nRows];    Final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	94	4	replace
239	[BUG]  [BUGGY]  final  int[]  dataRow  =  new  int[nRows];  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  int[]  dataRow  =  new  int[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  int[]  dataRow  =  new  int[nRows];	  final    double[]    dataRow    =    new    double[nRows];    Final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	94	4	replace
240	[BUG]  [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [CE]  cannot  find  symbol  dataRow  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	109	None	replace
241	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  this.getRowDimension();  }  [CE]  cannot  find  symbol  dataRow  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	109	None	replace
242	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length][row  *  row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[v.length][row  *  row];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[v.length][row  *  row];	  double[][]    out    =    new    double[v.length][row    *    row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	115	None	replace
243	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  *  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][row  *  nRows];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][row  *  nRows];	  double[][]    out    =    new    double[v.length][row    *    row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	115	None	replace
244	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  *  nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][row  *  nCols];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][row  *  nCols];	  double[][]    out    =    new    double[v.length][row    *    row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	115	None	replace
245	[BUG]  [BUGGY]  double[][]  out  =  new  double[row][v.length  *  row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[row][v.length  *  row];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[row][v.length  *  row];	  double[][]    out    =    new    double[v.length][row    *    row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	115	None	replace
246	[BUG]  [BUGGY]  int  nSum  =  this.getSelectionDimension()  +  2;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getSelectionDimension()  +  2;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSelectionDimension()  +  2;	  int    nSum    =    this.getSelectionDimension()    +    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
247	[BUG]  [BUGGY]  Final  double[]  dataRow  =  this.data[row];  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  Final  double[]  dataRow  =  this.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	Final  double[]  dataRow  =  this.data[row];	  final    double[]    dataRow    =    this.data[row];    Final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  not  a  statement	56	None	replace
248	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][2];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row][2];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row][2];	  final    double[]    dataRow    =    this.data[row][1];    	non-compiled	[CE]  incompatible  types	73	None	replace
249	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  ==  0)?  this.getColumnDimension()  :  v.doubleValue();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(v.doubleValue()  ==  0)?  this.getColumnDimension()  :  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  ==  0)?  this.getColumnDimension()  :  v.doubleValue();	  out[row]    =(v.doubleValue()    ==    0)?    this.getRowDimension()    :    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
250	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v,  this.getColumnDimension();  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v,  this.getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v,  this.getColumnDimension();	  out[row]    =(v.doubleValue()    ==    0)?    this.getRowDimension()    :    v.doubleValue();    	non-compiled	[CE]  ';'  expected	59	None	replace
251	[BUG]  [BUGGY]  int  nSum  =(v.getSum()  <  nCols)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(v.getSum()  <  nCols)?  this.getSum()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(v.getSum()  <  nCols)?  this.getSum()  :  0;	  int    nSum    =(this.getSum()    <    nCols)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
252	[BUG]  [BUGGY]  int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  +  1  :  0;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  +  1  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  +  1  :  0;	  int    nSum    =(this.getSum()    <    nCols)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
253	[BUG]  [BUGGY]  int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  :  1;  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  :  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  :  1;	  int    nSum    =(this.getSum()    <    nCols)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
254	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[data.length  -  1];	  final    double[]    dataRow    =    new    double[data.length];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	85	4	replace
255	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[data.length  -  1];	  final    double[]    dataRow    =    new    double[data.length];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	85	4	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[data.length  +  1];	  final    double[]    dataRow    =    new    double[data.length];    	compilable	  [FE]  AssertionFailedError  	85	4	replace
257	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length  +  1];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length  +  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[data.length  +  1];	  final    double[]    dataRow    =    new    double[data.length];    	compilable	  [FE]  AssertionFailedError  	85	4	replace
258	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
259	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
260	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  int  row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  int  row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    int  row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	non-compiled	[CE]  ';'  expected	108	None	add
261	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
262	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
263	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
264	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  this.getRowDimension();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
265	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	108	None	add
266	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	12	None	replace
267	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows.length;  i++)  {  v[i]  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	12	None	replace
268	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[row];  Final  double[]  dataRow  =  new  double[row];  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[row];  Final  double[]  dataRow  =  new  double[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[row];    Final  double[]  dataRow  =  new  double[row];	  	non-compiled	[CE]  not  a  statement	39	None	add
269	[BUG]  [BUGGY]  int  vSum  =  this.getSelectionDimension();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  vSum  =  this.getSelectionDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  vSum  =  this.getSelectionDimension();	  int    nSum    =    v.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
270	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][column].length;  [CE]  cannot  find  symbol  column  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][column].length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][column].length;	  final    double[]    dataRow    =    data[row][column];    	non-compiled	[CE]  cannot  find  symbol  column	93	None	replace
271	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  >  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(v[i]    >    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	23	None	replace
272	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	11	None	replace
273	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  *  2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][row  *  2];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][row  *  2];	  double[][]    out    =    new    double[v.length][row    *    row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	115	None	replace
274	[BUG]  [BUGGY]  double[][]  out  =  new  double[row][v.length  *  nRows];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[row][v.length  *  nRows];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[row][v.length  *  nRows];	  double[][]    out    =    new    double[v.length][row    *    row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	115	None	replace
275	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[dataRows];  [CE]  cannot  find  symbol  dataRows  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[dataRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[dataRows];	  final    double[]    dataRow    =    new    double[nRows];    final    double[]    dataRow    =    new    double[nRows];    	non-compiled	[CE]  cannot  find  symbol  dataRows	47	None	replace
276	[BUG]  [BUGGY]  final  double[]  outRow  =  new  double[nRows];  [CE]  cannot  find  symbol  dataRow  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  outRow  =  new  double[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  outRow  =  new  double[nRows];	  final    double[]    dataRow    =    new    double[nRows];    final    double[]    dataRow    =    new    double[nRows];    	non-compiled	[CE]  cannot  find  symbol  dataRow	47	None	replace
277	[BUG]  [BUGGY]  int  nSum  =(v.getSum()  >=  0)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(v.getSum()  >=  0)?  this.getSum()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(v.getSum()  >=  0)?  this.getSum()  :  0;	  int    nSum    =(this.getSum()    >=    0)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
278	[BUG]  [BUGGY]  int  nSum  =(this.getSum()  >>  0)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSum()  >>  0)?  this.getSum()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()  >>  0)?  this.getSum()  :  0;	  int    nSum    =(this.getSum()    >=    0)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
279	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length][data.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[v.length][data.length];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[v.length][data.length];	  final    double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	50	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length  +  row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[data.length  +  row];	  final    double[]    dataRow    =    new    double[data.length];    	compilable	  [FE]  AssertionFailedError  	85	4	replace
281	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length  +  row];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length  +  row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[data.length  +  row];	  final    double[]    dataRow    =    new    double[data.length];    	compilable	  [FE]  AssertionFailedError  	85	4	replace
282	[BUG]  [BUGGY]  int  nSum  =(this.getSelectionDimension()  >>  0)?  this.getSelectionDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSelectionDimension()  >>  0)?  this.getSelectionDimension()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSelectionDimension()  >>  0)?  this.getSelectionDimension()  :  0;	  int    nSum    =(this.getSelectionDimension()    >=    0)?    this.getSelectionDimension()    :    0;    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  out[i];  }  [CE]  cannot  find  symbol  dataRow  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  out[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  out[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	69	None	replace
284	[BUG]  [BUGGY]  int  nSum  =(v.length  <  nCols)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(v.length  <  nCols)?  this.getSum()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(v.length  <  nCols)?  this.getSum()  :  0;	  int    nSum    =(this.getSum()    <    nCols)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
285	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[this.data[row];  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[this.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[this.data[row];	  final    double[]    dataRow    =    this.data[row];    final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  ']'  expected	55	None	replace
286	[BUG]  [BUGGY]  final  double[]  outRow  =  this.data[row];  [CE]  cannot  find  symbol  dataRow  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  outRow  =  this.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  outRow  =  this.data[row];	  final    double[]    dataRow    =    this.data[row];    final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  cannot  find  symbol  dataRow	55	None	replace
287	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  nRows  =  this.getRowDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	68	None	add
288	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	68	None	add
289	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	68	None	add
290	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[	  	non-compiled	[CE]  >  expected	68	None	add
291	[BUG]  [BUGGY]  out[row]  =  this.getEntry(v,  v.length);  [CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(v,  v.length);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(v,  v.length);	  out[row]    =    this.getEntry(row,    v.length);    	non-compiled	[CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	105	None	replace
292	[BUG]  [BUGGY]  out[row]  =  this.getEntry(v,  nRows);  [CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(v,  nRows);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(v,  nRows);	  out[row]    =    this.getEntry(row,    v.length);    	non-compiled	[CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	105	None	replace
293	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [CE]  cannot  find  symbol  nSum  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  nSum	13	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  this.getColumnDimension();  }  [CE]  cannot  find  symbol  dataRow  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  this.getColumnDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  this.getColumnDimension();  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nRows    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	70	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]!=  v[i])  {  out  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]!=  v[i])  {  out  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]!=  v[i])  {  out  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]!=    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
296	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][2];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][2];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][2];	  double[][]    out    =    new    double[v.length][0];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	83	None	replace
297	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  final  double[]  dataRow  =  new  Double[data.length];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  final  double[]  dataRow  =  new  Double[data.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[data.length];    final  double[]  dataRow  =  new  Double[data.length];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	84	None	add
298	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[nRows  *  nCOLS];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  final  double[]  dataRow  =  new  double[nRows  *  nCOLS];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    *    nCols];    final  double[]  dataRow  =  new  double[nRows  *  nCOLS];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	45	None	add
299	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[r.length];  [CE]  cannot  find  symbol  r  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[r.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[r.length];	  final    double[]    dataRow    =    new    double[nRows];    Final    double[]    dataRow    =    new    double[nRows];    	non-compiled	[CE]  cannot  find  symbol  r	94	None	replace
300	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  +  3];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[v.length][row  +  3];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][row  +  3];	  double[][]    out    =    new    double[v.length][row    +    1];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	52	None	replace
301	[BUG]  [BUGGY]  int  nSum  =  getSelectionDimension()  +  row;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  getSelectionDimension()  +  row;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  getSelectionDimension()  +  row;	  int    nSum    =    getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
302	[BUG]  [BUGGY]  double[][]  dataRows  =  v.toArray(new  double[dataRows]);  [CE]  incompatible  types  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRows  =  v.toArray(new  double[dataRows]);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRows  =  v.toArray(new  double[dataRows]);	  double[][]    dataRows    =    v.toArray(new    double[nRows]);    	non-compiled	[CE]  incompatible  types	31	None	replace
303	[BUG]  [BUGGY]  double[][]  dataRows  =  dataRows.toArray(new  double[nRows]);  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  dataRows  =  dataRows.toArray(new  double[nRows]);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRows  =  dataRows.toArray(new  double[nRows]);	  double[][]    dataRows    =    v.toArray(new    double[nRows]);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  this.getRowDimension();  }  [CE]  cannot  find  symbol  dataRow  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  this.getRowDimension();  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	97	None	replace
305	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][1]  -  1;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][1]  -  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][1]  -  1;	  final    double[]    dataRow    =    data[row][0]    -    1;    	non-compiled	[CE]  incompatible  types	106	None	replace
306	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  >  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(v[i]    >    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	64	None	replace
307	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v[i])  {  out  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v[i])  {  out  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v[i])  {  out  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(v[i]    >    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
308	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff  +  1;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  &  0xff  +  1;	  final    double[]    dataRow    =    this.data[row]    &    0xff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	16	None	replace
309	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  0xff;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  0xff;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  -  0xff;	  final    double[]    dataRow    =    this.data[row]    &    0xff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	16	None	replace
310	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  Out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [CE]  cannot  find  symbol  Out  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  Out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    Out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();	  	non-compiled	[CE]  cannot  find  symbol  Out	3	None	add
311	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  v[i])  {  out  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >=    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
312	[BUG]  [BUGGY]  out[row]  =(this.getEntryDimension()!=  null?  this.getEntryDimension()  :  row;  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(this.getEntryDimension()!=  null?  this.getEntryDimension()  :  row;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(this.getEntryDimension()!=  null?  this.getEntryDimension()  :  row;	  out[row]    =    this.getEntryDimension();    	non-compiled	[CE]  ')'  expected	86	None	replace
313	[BUG]  [BUGGY]  out[row]  =(this.getEntryDimension()!=  nRows?  this.getEntryDimension()  :  v.length);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(this.getEntryDimension()!=  nRows?  this.getEntryDimension()  :  v.length);  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(this.getEntryDimension()!=  nRows?  this.getEntryDimension()  :  v.length);	  out[row]    =    this.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
314	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  *  v.length  +  1;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row][0]  *  v.length  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  *  v.length  +  1;	  final    double[]    dataRow    =    data[row][0]    *    v.length;    	non-compiled	[CE]  incompatible  types	88	None	replace
315	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  OutputStream  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  OutputStream  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    OutputStream  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	non-compiled	[CE]  ']'  expected	108	None	add
316	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getColumnDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getColumnDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
317	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getColumnDimension();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getColumnDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getColumnDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
318	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  *  nCols;  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  *  nCols;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  *  nCols;	  final    double[]    dataRow    =    v[row]    *    row;    	non-compiled	[CE]  incompatible  types	53	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  out[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRow  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  out[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  out[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    out[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	76	None	replace
320	[BUG]  [BUGGY]  int  nSum  =  this.getSelectionDimension()  *  1;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  this.getSelectionDimension()  *  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSelectionDimension()  *  1;	  int    nSum    =    this.getSelectionDimension()    +    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
321	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  >>  0)?  this.getRowDimension()  :  v.doubleValue();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(v.doubleValue()  >>  0)?  this.getRowDimension()  :  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  >>  0)?  this.getRowDimension()  :  v.doubleValue();	  out[row]    =(v.doubleValue()    >=    0)?    this.getRowDimension()    :    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
322	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[v.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[v.length  -  1];	  final    double[]    dataRow    =    new    double[nRows    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	4	replace
323	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[v.length  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[v.length  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[v.length  -  1];	  final    double[]    dataRow    =    new    double[nRows    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	4	replace
324	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }  [CE]  >  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	29	None	replace
325	[BUG]  [BUGGY]  out[row]  =  data.getUpperDimension();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  data.getUpperDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  data.getUpperDimension();	  out[row]    =    this.getUpperDimension();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
326	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    data[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	27	None	replace
327	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  double[]  dataRow  =  new  double[nCols];  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  double[]  dataRow  =  new  double[nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  int  nRows  =  this.getRowDimension();  final  double[]  dataRow  =  new  double[nCols];	  final    double[]    dataRow    =    new    double[nRows];    final    double[]    dataRow    =    new    double[nCols];    	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	49	None	replace
328	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  this.data[row  -  1];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
329	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row  -  1];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  *  v.length];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	46	4	replace
331	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  v.length];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  v.length];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  *  v.length];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	46	4	replace
332	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >=    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
333	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.data[row]  *  this.data;  [CE]  cannot  find  symbol  data  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v.data[row]  *  this.data;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v.data[row]  *  this.data;	  final    double[]    dataRow    =    this.data[row]    *    v.length;    	non-compiled	[CE]  cannot  find  symbol  data	103	None	replace
334	[BUG]  [BUGGY]  double[][]  data  =(double[][])data.getDataRef();  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  data  =(double[][])data.getDataRef();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])data.getDataRef();	  double[][]    data    =(double[][])this.getDataRef();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
335	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row][0]  +  data.length;  [CE]  array  required,  but  double  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row][0]  +  data.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row][0]  +  data.length;	  final    double[]    dataRow    =    data[row][1]    +    v.length;    	non-compiled	[CE]  array  required,  but  double  found	92	None	replace
336	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v;	  out[row]    =(v.doubleValue()    ==    0)?    this.getRowDimension()    :    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
337	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	28	None	replace
338	[BUG]  [BUGGY]  static  final  double[]  dataRow  =  new  double[nRows];  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  static  final  double[]  dataRow  =  new  double[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	static  final  double[]  dataRow  =  new  double[nRows];	  final    double[]    dataRow    =    this.data[row];    static    final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
339	[BUG]  [BUGGY]  final  int  nCols  =  getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  int  nCols  =  getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  int  nCols  =  getColumnDimension();	  final    int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	1	None	replace
340	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[r.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[][]  out  =  new  double[r.length][row];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[r.length][row];	  final    double[][]    out    =    new    double[nCols][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	36	None	replace
341	[BUG]  [BUGGY]  out[row]  =  this.getEntryDimension()  +  1;  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntryDimension()  +  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntryDimension()  +  1;	  out[row]    =    this.getRowDimension()    +    1;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getColumnDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getColumnDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
343	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getColumnDimension();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getColumnDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getColumnDimension();  }	  	compilable	  [FE]  AssertionFailedError  	110	4	add
344	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getUpperDimension();  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getUpperDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getUpperDimension();  }	  	non-compiled	[CE]  cannot  find  symbol	110	None	add
345	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xff  +  1;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xff  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  &  0xff  +  1;	  final    double[]    dataRow    =    v[row]    &    0xff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	54	None	replace
346	[BUG]  [BUGGY]  int  nSum  =  data.length;  [CE]  cannot  find  symbol  dataRow  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =  data.length;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  data.length;	  int    nSum    =    data.getSum();    	non-compiled	[CE]  cannot  find  symbol  dataRow	26	None	replace
347	[BUG]  [BUGGY]  out[row]  =  this.getUpperDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getUpperDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getUpperDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	          out[row]    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
348	[BUG]  [BUGGY]  int  nSum  =(this.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  1;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  1;	  int    nSum    =(this.getSelectionDimension()!=    0)?    this.getSelectionDimension()    :    0;    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
349	[BUG]  [BUGGY]  for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  v  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nRows    =    this.getRowDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	70	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]!=    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
351	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][column];  [CE]  cannot  find  symbol  column  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row][column];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row][column];	  final    double[]    dataRow    =    this.data[row][1];    	non-compiled	[CE]  cannot  find  symbol  column	73	None	replace
352	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  final  double[]  dataRow  =  new  double[NRows  -  1];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  final  double[]  dataRow  =  new  double[NRows  -  1];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows    -    1];    final  double[]  dataRow  =  new  double[NRows  -  1];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	43	None	add
353	[BUG]  [BUGGY]  double[][]  data  =(double[][])data.getDataRef().clone();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  data  =(double[][])data.getDataRef().clone();  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])data.getDataRef().clone();	  double[][]    data    =(double[][])this.getDataRef().clone();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
354	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][0]  +  row;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row][0]  +  row;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row][0]  +  row;	  final    double[]    dataRow    =    this.data[row][0];    	non-compiled	[CE]  incompatible  types	18	None	replace
355	[BUG]  [BUGGY]  int  nSum  =(this.getSumDimension()  ==  null)?  this.getSumDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSumDimension()  ==  null)?  this.getSumDimension()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSumDimension()  ==  null)?  this.getSumDimension()  :  0;	  int    nSum    =    this.getSumDimension();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
356	[BUG]  [BUGGY]  int  nSum  =(this.getSumDimension()!=  null)?  this.getSumDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSumDimension()!=  null)?  this.getSumDimension()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSumDimension()!=  null)?  this.getSumDimension()  :  0;	  int    nSum    =    this.getSumDimension();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
357	[BUG]  [BUGGY]  int  nSum  =(this.getSumDimension()!=  0)?  this.getSumDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSumDimension()!=  0)?  this.getSumDimension()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSumDimension()!=  0)?  this.getSumDimension()  :  0;	  int    nSum    =    this.getSumDimension();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
358	[BUG]  [BUGGY]  final  double[]  dataRow  =  row[row]  *  v.length;  [CE]  array  required,  but  int  found  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  row[row]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  row[row]  *  v.length;	  final    double[]    dataRow    =    v[row]    *    row;    	non-compiled	[CE]  array  required,  but  int  found	53	None	replace
359	[BUG]  [BUGGY]  for(int  v  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  v  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  v  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    i    =    0;    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	87	None	replace
360	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row],  v.data;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row],  v.data;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row],  v.data;	  final    double[]    dataRow    =    v[row].data;    	non-compiled	[CE]  ';'  expected	107	None	replace
361	[BUG]  [BUGGY]  out[row]  =  data.getDataImpl().doubleValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  data.getDataImpl().doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  data.getDataImpl().doubleValue();	  out[row]    =    this.getDataImpl().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
362	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  +  3];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  this.data[row  +  3];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
363	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row  +  3];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row  +  3];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row  +  3];	  final    double[]    dataRow    =    this.data[row    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
364	[BUG]  [BUGGY]  double[][]  out  =  new  double[vRows][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  double[][]  out  =  new  double[vRows][row];  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[vRows][row];	  double[][]    out    =    new    double[nRows][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	37	None	replace
365	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.data[row];  [CE]  cannot  find  symbol  data  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v.data[row];	  final    double[]    dataRow    =    this.data[row];    final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  cannot  find  symbol  data	55	None	replace
366	[BUG]  [BUGGY]  final  double[]  dataRow  =  super.data[row];  [CE]  cannot  find  symbol  data  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  super.data[row];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  super.data[row];	  final    double[]    dataRow    =    this.data[row];    final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  cannot  find  symbol  data	55	None	replace
367	[BUG]  [BUGGY]  final  double[]  dataRow  =  dataRow[row]  *  row.length;  [CE]  int  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  dataRow[row]  *  row.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  dataRow[row]  *  row.length;	  final    double[]    dataRow    =    v[row]    *    dataRow.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
368	[BUG]  [BUGGY]  int  nSum  =(this.getSum()  <  v.length)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSum()  <  v.length)?  this.getSum()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()  <  v.length)?  this.getSum()  :  0;	  int    nSum    =(this.getSum()    <    nCols)?    this.getSum()    :    0;    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length  *  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[data.length  *  nCols];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	46	4	replace
370	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length  *  nCols];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  new  double[data.length  *  nCols];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[data.length  *  nCols];	  final    double[]    dataRow    =    new    double[nRows    *    nCols];    	compilable	  [FE]  AssertionFailedError  	46	4	replace
371	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]!=    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
372	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  row).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(row,  row).doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row,  row).doubleValue();	  out[row]    =    this.getEntry(row,    v.length).doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	104	None	replace
373	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  v).doubleValue();  [CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(row,  v).doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row,  v).doubleValue();	  out[row]    =    this.getEntry(row,    v.length).doubleValue();    	non-compiled	[CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	104	None	replace
374	[BUG]  [BUGGY]  out[row]  =  getEntryDimension();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  getEntryDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  getEntryDimension();	  out[row]    =    this.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
375	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xff,  v.length;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xff,  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  &  0xff,  v.length;	  final    double[]    dataRow    =    v[row]    &    0xff;    	non-compiled	[CE]  ';'  expected	54	None	replace
376	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xff,  v.length);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xff,  v.length);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  &  0xff,  v.length);	  final    double[]    dataRow    =    v[row]    &    0xff;    	non-compiled	[CE]  ';'  expected	54	None	replace
377	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getEntryDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getEntryDimension();  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  out[row]  =  this.getEntryDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getEntryDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    out[row]  =  this.getEntryDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getEntryDimension();  }	  	non-compiled	[CE]  cannot  find  symbol	110	None	add
378	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    this.getRowDimension();    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	110	None	add
379	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getEntryDimension();  out[row]  =  this.getEntryDimension();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[row]  =  this.getEntryDimension();  out[row]  =  this.getEntryDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    out[row]  =  this.getEntryDimension();  out[row]  =  this.getEntryDimension();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[0]  =  this.getRowDimension();  out[0]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    out[0]  =  this.getRowDimension();  out[0]  =  this.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	3	4	add
381	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[0]  =  this.getRowDimension();  out[0]  =  this.getRowDimension();  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();  out[0]  =  this.getRowDimension();  out[0]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        out[row]    =    this.getRowDimension();    out[0]  =  this.getRowDimension();  out[0]  =  this.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	3	4	add
382	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row  +  1;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nCols  =  this.getColumnDimension()  +  row  +  1;	  int    nCols    =    this.getColumnDimension()    +    row;    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	10	None	replace
383	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	28	None	replace
384	[BUG]  [BUGGY]  for(int  v  =  0;  v  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  v  =  0;  v  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  v  =  0;  v  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int    nCols    =    this.getColumnDimension();    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	97	None	replace
385	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][0]  *  v.length;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row][0]  *  v.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row][0]  *  v.length;	  final    double[]    dataRow    =    data[row][0]    *    v.length;    	non-compiled	[CE]  incompatible  types	88	None	replace
386	[BUG]  [BUGGY]  static  final  int  nCols  =  this.getColumnDimension();  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  static  final  int  nCols  =  this.getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	static  final  int  nCols  =  this.getColumnDimension();	  final    int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
387	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(v[i]    >    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
388	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  cannot  find  symbol  nVows  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nVows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nVows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  nVows	13	None	replace
389	[BUG]  [BUGGY]  int  nSum  =(this.getSelectionDimension()  <  0)?  this.getSelectionDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  int  nSum  =(this.getSelectionDimension()  <  0)?  this.getSelectionDimension()  :  0;  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSelectionDimension()  <  0)?  this.getSelectionDimension()  :  0;	  int    nSum    =(this.getSelectionDimension()    >=    0)?    this.getSelectionDimension()    :    0;    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
390	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	12	None	replace
391	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  1  +  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  1  +  1;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  -  1  +  1;	  final    double[]    dataRow    =    this.data[row]    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	17	None	replace
392	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  >=  0)?  this.getColumnDimension()  :  v.doubleValue();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(v.doubleValue()  >=  0)?  this.getColumnDimension()  :  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  >=  0)?  this.getColumnDimension()  :  v.doubleValue();	  out[row]    =(v.doubleValue()    >=    0)?    this.getRowDimension()    :    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
393	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  <  0)?  this.getRowDimension()  :  v.doubleValue();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =(v.doubleValue()  <  0)?  this.getRowDimension()  :  v.doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  <  0)?  this.getRowDimension()  :  v.doubleValue();	  out[row]    =(v.doubleValue()    ==    0)?    this.getRowDimension()    :    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
394	[BUG]  [BUGGY]  final  double[]  dataRows  =  new  double[nRows];  [CE]  cannot  find  symbol  dataRow  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRows  =  new  double[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRows  =  new  double[nRows];	  final    double[]    dataRow    =    new    double[nRows];    Final    double[]    dataRow    =    new    double[nRows];    	non-compiled	[CE]  cannot  find  symbol  dataRow	94	None	replace
395	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        v[i]        +=        v[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]	  	non-compiled	[CE]  not  a  statement	68	None	add
396	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row]  *  row.length;  [CE]  int  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  data[row]  *  row.length;  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row]  *  row.length;	  final    double[]    dataRow    =    v[row]    *    data.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	78	None	replace
397	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i]  ||  v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i]  ||  v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i]  ||  v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    ==    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
398	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff,  v.length);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff,  v.length);  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  &  0xff,  v.length);	  final    double[]    dataRow    =    this.data[row]    &    0xff;    	non-compiled	[CE]  ';'  expected	16	None	replace
399	[BUG]  [BUGGY]  final  double[]  vRow  =  new  double[nRows];  [CE]  cannot  find  symbol  dataRow  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  final  double[]  vRow  =  new  double[nRows];  [BUGGY]      double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  vRow  =  new  double[nRows];	  final    double[]    dataRow    =    new    double[nRows];    final    double[]    dataRow    =    new    double[nCols];    	non-compiled	[CE]  cannot  find  symbol  dataRow	49	None	replace
400	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row).doubleValue();  [CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getEntry(row).doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row).doubleValue();	  out[row]    =    this.getEntry(v.length).doubleValue();    	non-compiled	[CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	91	None	replace
401	[BUG]  [BUGGY]  out[row]  =  this.getColumnDimension().doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[row]  =  this.getColumnDimension().doubleValue();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getColumnDimension().doubleValue();	  out[row]    =    this.getRowDimension().doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	58	None	replace
402	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    ==    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
403	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	108	None	add
404	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
405	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    out[row]  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	2	add
406	[BUG]  [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]          out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	                out[row]        =        this.getRowDimension();        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    this.getRowDimension();    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	108	None	add
407	[BUG]  [BUGGY]  out[0]  =  this.getRowDimension();  [CE]  cannot  find  symbol  dataRow  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {      [BUGGY]  out[0]  =  this.getRowDimension();  [BUGGY]      final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[0]  =  this.getRowDimension();	          out[row]    =    this.getRowDimension();    out[row]    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataRow	4	None	replace
