projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786for(inti=0;i<nRows;i++){sum+=dataRow[i]*v[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786for(inti=0;i<nCols;i++){sum+=dataRow[i]*v[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786for(inti=0;i<nRows;i++){sum+=dataRow[i]*d[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786for(inti=0;i<nRows;i++){sum+=dataRow[i]*total[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786for(inti=0;i<nRows;i++){out[i]=sum;}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum+dataRow[i].length;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum+1;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum+v[i].length;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786for(inti=0;i<nRows;i++){if(sum>dataRow.length){sum+=dataRow[i]*v[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[i]=sum;
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786for(inti=0;i<nRows;i++){if(sum>dataRow[i][i]){sum+=dataRow[i]*v[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum+dataRow[i].doubleValue();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum+dataRow[i]*v[i];
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786if(sum>0){for(inti=0;i<nRows;i++){sum+=dataRow[i]*v[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786for(inti=0;i<nRows;i++){sum+=dataRow[i]*subMatrixData[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786if(sum>0){for(inti=0;i<nRows;i++){sum+=dataRow[i]*dataRow[i];}
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum+dataRow[row].doubleValue();
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum+dataRow[row]*v[i];
projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java786out[row]=sum+dataRow[row].length;
