bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	42	4	add
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	42	4	add
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    For(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  '.class'  expected	42	None	add
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	42	None	add
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  datasetRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  datasetRow  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  datasetRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  datasetRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  cannot  find  symbol  datasetRow	42	None	add
9	[BUG]  [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v[i];  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row]  +  sum  *  v[i];	  out[row]    =    sum    +    dataRow[row]    *    v[j];    	non-compiled	[CE]  cannot  find  symbol  i	29	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    v.length;    i++)    {    if(sum    >    dataRow[i][i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  2;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	41	4	replace
12	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  2;  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  2;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	41	4	replace
13	[BUG]  [BUGGY]  out[row]  =  sum  *  dataRow[row].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  *  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  *  dataRow[row].doubleValue();	  out[row]    =    sum    /    dataRow[row].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	46	None	replace
14	[BUG]  [BUGGY]  out[row]  =  sum  /  dataRow[column].doubleValue();  [CE]  cannot  find  symbol  column  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  dataRow[column].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  /  dataRow[column].doubleValue();	  out[row]    =    sum    /    dataRow[row].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  column	46	None	replace
15	[BUG]  [BUGGY]  out[row]  =  sum  /  dataRow[i].doubleValue();  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  dataRow[i].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  /  dataRow[i].doubleValue();	  out[row]    =    sum    /    dataRow[row].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  i	46	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxColSum;  i++)  {  out[i]  =  sum;  }  [CE]  cannot  find  symbol  maxColSum  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  maxColSum;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  maxColSum;  i++)  {  out[i]  =  sum;  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    out[i]    =    sum;    }    	non-compiled	[CE]  cannot  find  symbol  maxColSum	70	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	34	4	add
18	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	34	4	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	34	4	add
20	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	34	4	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	34	4	add
22	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	34	4	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	34	4	add
24	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	34	4	add
25	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  ';'  expected	34	None	add
26	[BUG]  [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  double  cannot  be  dereferenced	109	None	replace
27	[BUG]  [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  double  cannot  be  dereferenced	109	None	replace
28	[BUG]  [BUGGY]  out[row]  =  v[row  +  1].doubleValue();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v[row  +  1].doubleValue();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v[row  +  1].doubleValue();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  double  cannot  be  dereferenced	109	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataset[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataset  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataset[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataset[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataset[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataset	77	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  dataRow.length;	  out[row]    =    sum    +    i;    	compilable	  [FE]  AssertionFailedError  	102	4	replace
31	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow.length;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow.length;	  out[row]    =    sum    +    i;    	compilable	  [FE]  AssertionFailedError  	102	4	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  v.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  v.length;	  out[row]    =    sum    +    i;    	compilable	  [FE]  AssertionFailedError  	102	4	replace
33	[BUG]  [BUGGY]  out[row]  =  sum  +  v.length;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  v.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  v.length;	  out[row]    =    sum    +    i;    	compilable	  [FE]  AssertionFailedError  	102	4	replace
34	[BUG]  [BUGGY]  out[row]  =  sum  +  maxColSum;  [CE]  cannot  find  symbol  maxColSum  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  maxColSum;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  maxColSum;	  out[row]    =    sum    +    i;    	non-compiled	[CE]  cannot  find  symbol  maxColSum	102	None	replace
35	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow;	  out[row]    =    sum    +    i;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	102	None	replace
36	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  ']'  expected	62	None	add
37	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  ']'  expected	62	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	62	4	add
39	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	62	4	add
40	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
41	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  ']'  expected	62	None	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	35	4	replace
43	[BUG]  [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	35	4	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	35	4	replace
45	[BUG]  [BUGGY]  out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	35	4	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	97	4	replace
47	[BUG]  [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	97	4	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	97	4	replace
49	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	97	4	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	97	4	replace
51	[BUG]  [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	97	4	replace
52	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row].length  /  1;  [CE]  double  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row].length  /  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row].length  /  1;	  out[row]    =    sum    +    dataRow[row].length    -    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
53	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum.length  -  1;  [CE]  double  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum.length  -  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum.length  -  1;	  out[row]    =    sum    +    dataRow[row].length    -    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	compilable	  [FE]  AssertionFailedError  	56	4	add
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	compilable	  [FE]  AssertionFailedError  	56	4	add
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	compilable	  [FE]  AssertionFailedError  	56	4	add
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	compilable	  [FE]  AssertionFailedError  	56	4	add
58	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	non-compiled	[CE]  >  expected	56	None	add
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  For(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  For(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    For(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	non-compiled	[CE]  '.class'  expected	56	None	add
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxColSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  maxColSum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  maxColSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  maxColSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  maxColSum	12	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    v.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	115	4	add
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    v.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	115	4	add
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    v.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    For(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  '.class'  expected	115	None	add
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    v.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	115	None	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	38	4	add
66	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	38	4	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	38	4	add
68	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	38	4	add
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	38	4	add
70	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	38	4	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	38	4	add
72	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	38	4	add
73	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  ';'  expected	38	None	add
74	[BUG]  [BUGGY]  out[row]  =  Sum  +  dataRow[row].length;  [CE]  cannot  find  symbol  Sum  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  Sum  +  dataRow[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  Sum  +  dataRow[row].length;	  out[row]    =    total    +    dataRow[row].length;    	non-compiled	[CE]  cannot  find  symbol  Sum	9	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }	  	compilable	  [FE]  AssertionFailedError  	103	4	add
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }	  	compilable	  [FE]  AssertionFailedError  	103	4	add
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }	  	non-compiled	[CE]  >  expected	103	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }	  	compilable	  [FE]  AssertionFailedError  	103	4	add
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }	  	compilable	  [FE]  AssertionFailedError  	103	4	add
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  For(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  For(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    For(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }	  	non-compiled	[CE]  '.class'  expected	103	None	add
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  for(int  i  =  0;  i  <  nCOLs;  i++)  {  out[i]  =  v.length;  }  [CE]  cannot  find  symbol  nCOLs  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  for(int  i  =  0;  i  <  nCOLs;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    for(int  i  =  0;  i  <  nCOLs;  i++)  {  out[i]  =  v.length;  }	  	non-compiled	[CE]  cannot  find  symbol  nCOLs	103	None	add
82	[BUG]  [BUGGY]  out[row]  =  dataRow[i];  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i];	  out[i]    =    dataRow[i];    	non-compiled	[CE]  cannot  find  symbol  i	124	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  dataRow[row];	  out[i]    =    dataRow[i];    	compilable	  [FE]  AssertionFailedError  	124	4	replace
84	[BUG]  [BUGGY]  out[row]  =  dataRow[row];  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row];	  out[i]    =    dataRow[i];    	compilable	  [FE]  AssertionFailedError  	124	4	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	compilable	  [FE]  AssertionFailedError  	58	4	add
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	compilable	  [FE]  AssertionFailedError  	58	4	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	compilable	  [FE]  AssertionFailedError  	58	4	add
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	compilable	  [FE]  AssertionFailedError  	58	4	add
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	non-compiled	[CE]  >  expected	58	None	add
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCOLs;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  cannot  find  symbol  nCOLs  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nCOLs;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nCOLs;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	non-compiled	[CE]  cannot  find  symbol  nCOLs	58	None	add
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow.length)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(sum  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(sum  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(sum  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow.length)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  2;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	37	4	replace
94	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  2;  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  2;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	37	4	replace
95	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[i].doubleValue();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[i].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  dataRow[i].doubleValue();	  out[row]    =    dataRow    +    sum[i].doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	107	None	replace
96	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow[i].doubleValue();  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow[i].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  *  dataRow[i].doubleValue();	  out[row]    =    dataRow    +    sum[i].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  i	107	None	replace
97	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  ']'  expected	64	None	add
98	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  ']'  expected	64	None	add
99	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
100	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  ']'  expected	64	None	add
101	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  ']'  expected	64	None	add
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >=    dataRow[i][i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum!=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum!=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum!=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >=    dataRow[i][i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  cannot  find  symbol  nSum  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	non-compiled	[CE]  cannot  find  symbol  nSum	59	None	replace
105	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow.doubleValue();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow.doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow.doubleValue();	  out[row]    =    dataRow    +    sum.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
106	[BUG]  [BUGGY]  out[row]  =  Sum  +  dataRow.doubleValue();  [CE]  cannot  find  symbol  Sum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  Sum  +  dataRow.doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  Sum  +  dataRow.doubleValue();	  out[row]    =    dataRow    +    sum.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  Sum	101	None	replace
107	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  *  sum.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  *  sum.doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  *  sum.doubleValue();	  out[row]    =    dataRow    +    sum.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	101	None	replace
108	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[row].doubleValue();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  dataRow[row].doubleValue();	  out[row]    =    dataRow    +    sum[row].doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	45	None	replace
109	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  data[row].doubleValue();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  data[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  data[row].doubleValue();	  out[row]    =    dataRow    +    sum[row].doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	45	None	replace
110	[BUG]  [BUGGY]  out[row]  =  Sum  +  dataRow[row].doubleValue();  [CE]  cannot  find  symbol  Sum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  Sum  +  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  Sum  +  dataRow[row].doubleValue();	  out[row]    =    dataRow    +    sum[row].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  Sum	45	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	14	4	add
112	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	14	4	add
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	14	4	add
114	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	14	4	add
115	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  For(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  For(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    For(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  '.class'  expected	14	None	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	14	4	add
117	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	14	4	add
118	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  ')'  expected	14	None	add
119	[BUG]  [BUGGY]  out[row]  -=  dataRow  +  sum;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  -=  dataRow  +  sum;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  -=  dataRow  +  sum;	  out[row]    =    dataRow    +    sum;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	91	None	replace
120	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
121	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
122	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
123	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
124	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
125	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
126	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  }  [CE]  variable  i  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  operate(double[])	40	None	add
127	[BUG]  [BUGGY]  out[row]  =  dataRow  +  v[row].length;  [CE]  double  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  v[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  v[row].length;	  out[row]    =    v    +    dataRow[row].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	90	None	replace
128	[BUG]  [BUGGY]  out[row]  =  v  +  sum  +  dataRow[row].length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v  +  sum  +  dataRow[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v  +  sum  +  dataRow[row].length;	  out[row]    =    v    +    dataRow[row].length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	90	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  maxColSum;  }  [CE]  cannot  find  symbol  maxColSum  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  maxColSum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  maxColSum;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    total;    }    	non-compiled	[CE]  cannot  find  symbol  maxColSum	87	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  total;  }  [CE]  cannot  find  symbol  total  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  total;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  total;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    total;    }    	non-compiled	[CE]  cannot  find  symbol  total	87	None	replace
131	[BUG]  [BUGGY]  while(v.length  >  0)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  while(v.length  >  0)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	while(v.length  >  0)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  while(v.length    >    0)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
132	[BUG]  [BUGGY]  while(v.length!=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  while(v.length!=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	while(v.length!=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  while(v.length    >    0)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
133	[BUG]  [BUGGY]  while(v.length  <  2)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  while(v.length  <  2)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	while(v.length  <  2)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  while(v.length    >    0)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
134	[BUG]  [BUGGY]  sum  +=  dataRow[row]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[row]  *  v[i];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[row]  *  v[i];	  sum    +=    dataRow[i]    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  i	72	None	replace
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[row]  *  v[row];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	sum  +=  dataRow[row]  *  v[row];	  sum    +=    dataRow[i]    *    v[i];    	compilable	  [FE]  AssertionFailedError  	72	4	replace
136	[BUG]  [BUGGY]  sum  +=  dataRow[row]  *  v[row];  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[row]  *  v[row];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[row]  *  v[row];	  sum    +=    dataRow[i]    *    v[i];    	compilable	  [FE]  AssertionFailedError  	72	4	replace
137	[BUG]  [BUGGY]  sum  +=  dataRow[i]  *  maxColSum;  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[i]  *  maxColSum;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[i]  *  maxColSum;	  sum    +=    dataRow[i]    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  i	72	None	replace
138	[BUG]  [BUGGY]  out[row]  =  sum  +  v[row].length;  [CE]  double  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  v[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  v[row].length;	  out[row]    =    v.length    +    sum[i].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	113	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  Sum;  }  [CE]  cannot  find  symbol  Sum  [FE]                AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  Sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  Sum;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    Sum;    }    	non-compiled	[CE]  cannot  find  symbol  Sum	20	None	replace
140	[BUG]  [BUGGY]  out[i]  =  Sum;  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  Sum;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  Sum;	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    Sum;    }    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
141	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  Sum;  }  [CE]  cannot  find  symbol  Sum  [FE]                    AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  Sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  Sum;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    Sum;    }    	non-compiled	[CE]  cannot  find  symbol  Sum	20	None	replace
142	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  v.length;  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  v.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i]  *  v.length;	  out[row]    =    sum    +    dataRow[i]    *    maxColSum;    	non-compiled	[CE]  cannot  find  symbol  i	73	None	replace
143	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  maxColSum;  [CE]  cannot  find  symbol  maxColSum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  maxColSum;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  maxColSum;	  out[row]    =    sum    +    dataRow[i]    *    maxColSum;    	non-compiled	[CE]  cannot  find  symbol  maxColSum	73	None	replace
144	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  TOO_SMALL;  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  TOO_SMALL;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i]  *  TOO_SMALL;	  out[row]    =    sum    +    dataRow[i]    *    maxColSum;    	non-compiled	[CE]  cannot  find  symbol  i	73	None	replace
145	[BUG]  [BUGGY]  }  else  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  }  else  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	}  else  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
147	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
149	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
150	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    int  row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  	non-compiled	[CE]  ';'  expected	93	None	add
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
152	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
154	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
155	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[i].length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  dataRow[i].length;	  out[row]    =    dataRow    +    v[i].length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	47	None	replace
156	[BUG]  [BUGGY]  while(v.length  >  0)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  while(v.length  >  0)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	while(v.length  >  0)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  while(v.length    >    0)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
157	[BUG]  [BUGGY]  while(v.length!=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  while(v.length!=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	while(v.length!=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  while(v.length    >    0)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
158	[BUG]  [BUGGY]  while(v.length  <  2)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  while(v.length  <  2)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	while(v.length  <  2)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  while(v.length    >    0)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
160	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
162	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
164	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
166	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	96	4	add
167	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
168	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  ']'  expected	5	None	add
169	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  ']'  expected	5	None	add
170	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	5	4	add
172	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	5	4	add
173	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v	  	non-compiled	[CE]  ';'  expected	5	None	add
174	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum[nCols].length;  [CE]  array  required,  but  double  found  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum[nCols].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum[nCols].length;	  out[row]    =    sum    +    dataRow[nCols].length;    	non-compiled	[CE]  array  required,  but  double  found	78	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  data[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	3	None	replace
176	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row.length].doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row.length].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row.length].doubleValue();	  out[row]    =    sum    +    dataRow[i.length].doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	106	None	replace
177	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[v.length].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[v.length].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[v.length].doubleValue();	  out[row]    =    sum    +    dataRow[i.length].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	106	None	replace
178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	18	4	add
179	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	18	4	add
180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	18	4	add
181	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	18	4	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	18	4	add
183	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	18	4	add
184	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  ')'  expected	18	None	add
185	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
186	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[row].length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  dataRow[row].length;	  out[row]    =    dataRow    +    sum[row].length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	7	None	replace
187	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  data[row].length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  data[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  data[row].length;	  out[row]    =    dataRow    +    sum[row].length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	7	None	replace
188	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow[row].length;  [CE]  double  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  *  dataRow[row].length;	  out[row]    =    dataRow    +    sum[row].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	117	4	add
190	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	117	4	add
191	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
192	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[	  	non-compiled	[CE]  ']'  expected	117	None	add
193	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
194	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]	  	non-compiled	[CE]  not  a  statement	117	None	add
195	[BUG]  [BUGGY]  out[row]  =  sum  +  row  +  dataRow[row].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  row  +  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  row  +  dataRow[row].doubleValue();	  out[row]    =    row    +    sum    +    dataRow[row].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	110	None	replace
196	[BUG]  [BUGGY]  out[row]  =  dataRow  +  row  +  sum  +  dataRow[row].doubleValue();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  row  +  sum  +  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  row  +  sum  +  dataRow[row].doubleValue();	  out[row]    =    row    +    sum    +    dataRow[row].doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	110	None	replace
197	[BUG]  [BUGGY]  out[row]  =  outputRow  +  sum  +  dataRow[row].doubleValue();  [CE]  cannot  find  symbol  outputRow  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  outputRow  +  sum  +  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  outputRow  +  sum  +  dataRow[row].doubleValue();	  out[row]    =    row    +    sum    +    dataRow[row].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  outputRow	110	None	replace
198	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[0].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[0].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[0].doubleValue();	  out[row]    =    sum    +    dataRow[r].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	81	None	replace
199	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[i.length];  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[i.length];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[i.length];	  out[row]    =    sum    +    dataRow[row]    *    v[r.length];    	non-compiled	[CE]  cannot  find  symbol  i	30	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[row];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  dataRow[row]  *  v[row];	  out[row]    =    sum    +    dataRow[row]    *    v[r.length];    	compilable	  [FE]  AssertionFailedError  	30	4	replace
201	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[row];  [FE]  AssertionFailedError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[row];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[row];	  out[row]    =    sum    +    dataRow[row]    *    v[r.length];    	compilable	  [FE]  AssertionFailedError  	30	4	replace
202	[BUG]  [BUGGY]  out[row]  =  maxColSum;  [CE]  cannot  find  symbol  maxColSum  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  maxColSum;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  maxColSum;	  out[i]    =    maxColSum;    	non-compiled	[CE]  cannot  find  symbol  maxColSum	60	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  3;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  /  3;	  out[row]    =    sum    +    3;    	compilable	  [FE]  AssertionFailedError  	28	4	replace
204	[BUG]  [BUGGY]  out[row]  =  sum  /  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  3;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  /  3;	  out[row]    =    sum    +    3;    	compilable	  [FE]  AssertionFailedError  	28	4	replace
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  4;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  4;	  out[row]    =    sum    +    3;    	compilable	  [FE]  AssertionFailedError  	28	4	replace
206	[BUG]  [BUGGY]  out[row]  =  sum  +  4;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  4;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  4;	  out[row]    =    sum    +    3;    	compilable	  [FE]  AssertionFailedError  	28	4	replace
207	[BUG]  [BUGGY]  }  else  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  }  else  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	}  else  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    (int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
208	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	For(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    For(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	67	None	replace
209	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[column].length;  [CE]  cannot  find  symbol  column  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[column].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[column].length;	  out[row]    =    sum    +    dataRow[j].length;    	non-compiled	[CE]  cannot  find  symbol  column	80	None	replace
210	[BUG]  [BUGGY]  out[row]  =  dataRow  +  row.length;  [CE]  int  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  row.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  row.length;	  out[row]    =    row    +    dataRow[row].length;    	non-compiled	[CE]  int  cannot  be  dereferenced	119	None	replace
211	[BUG]  [BUGGY]  out[row]  =  dataRow  +  row].length;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  row].length;	  out[row]    =    row    +    dataRow[row].length;    	non-compiled	[CE]  ';'  expected	119	None	replace
212	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow[i].length;  [CE]  cannot  find  symbol  i  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  *  dataRow[i].length;	  out[row]    =    dataRow    +    sum[i].length;    	non-compiled	[CE]  cannot  find  symbol  i	79	None	replace
213	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  sum  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  sum  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	add
214	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  sum  +  1;  out[row]  =  sum  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  sum  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  sum  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	add
215	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  Sum  +  1;  out[row]  =  sum  +  1;  [CE]  cannot  find  symbol  Sum  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  Sum  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row]  =  Sum  +  1;  out[row]  =  sum  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Sum	32	None	add
216	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  int  row]  =  sum  +  1;  out[row]  =  sum  +  1;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  int  row]  =  sum  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    int  row]  =  sum  +  1;  out[row]  =  sum  +  1;	  	non-compiled	[CE]  ';'  expected	32	None	add
217	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  sum  +  2;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row]  =  sum  +  2;  out[row]  =  sum  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	add
218	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  sum  +  2;  out[row]  =  sum  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  sum  +  2;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row]  =  sum  +  2;  out[row]  =  sum  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	add
219	[BUG]  [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v[col];  [CE]  cannot  find  symbol  col  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v[col];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row]  +  sum  *  v[col];	  out[row]    =    dataRow[i]    +    sum    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  col	83	None	replace
220	[BUG]  [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v.length  *  v[i];  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v.length  *  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row]  +  sum  *  v.length  *  v[i];	  out[row]    =    dataRow[i]    +    sum    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  i	83	None	replace
221	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  v[r];  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  v[r];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i]  *  v[r];	  out[row]    =    sum    +    dataRow[i]    *    v[j];    	non-compiled	[CE]  cannot  find  symbol  i	75	None	replace
222	[BUG]  [BUGGY]  out[row]  =  dataRow  +  v[row].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  v[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  v[row].doubleValue();	  out[row]    =    v    +    dataRow[row].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	100	None	replace
223	[BUG]  [BUGGY]  out[row]  =  v  +  sum  +  dataRow[row].doubleValue();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v  +  sum  +  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v  +  sum  +  dataRow[row].doubleValue();	  out[row]    =    v    +    dataRow[row].doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	100	None	replace
224	[BUG]  [BUGGY]  out[row]  =  total  +  dataRow[row].doubleValue();  [CE]  cannot  find  symbol  total  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  total  +  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  total  +  dataRow[row].doubleValue();	  out[row]    =    v    +    dataRow[row].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  total	100	None	replace
225	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	2	add
226	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	2	add
227	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
228	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  }  [CE]  variable  i  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  operate(double[])	36	None	add
229	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
230	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
231	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row.length].length;  [CE]  int  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row.length].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row.length].length;	  out[row]    =    sum    +    dataRow[r.length].length;    	non-compiled	[CE]  int  cannot  be  dereferenced	11	None	replace
232	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i.length].length;  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i.length].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i.length].length;	  out[row]    =    sum    +    dataRow[r.length].length;    	non-compiled	[CE]  cannot  find  symbol  i	11	None	replace
233	[BUG]  [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    out[row]    =    sum    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
234	[BUG]  [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    out[row]    =    sum    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	68	4	add
236	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	68	4	add
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	68	4	add
238	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	compilable	  [FE]  AssertionFailedError  	68	4	add
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  >  expected	68	None	add
240	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  For(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  For(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    For(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  '.class'  expected	68	None	add
241	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCOLs;  i++)  {  out[i]  =  sum;  }  [CE]  cannot  find  symbol  nCOLs  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nCOLs;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCOLs;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  cannot  find  symbol  nCOLs	68	None	add
242	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  ']'  expected	1	None	add
243	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  ']'  expected	1	None	add
244	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  ']'  expected	1	None	add
245	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
246	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  ']'  expected	1	None	add
247	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  -  1;  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  -  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i.doubleValue()  -  1;	  out[row]    =    sum    +    dataRow[i.doubleValue();    	non-compiled	[CE]  ']'  expected	22	None	replace
248	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  +  1;  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i.doubleValue()  +  1;	  out[row]    =    sum    +    dataRow[i.doubleValue();    	non-compiled	[CE]  ']'  expected	22	None	replace
249	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  /  2;  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  /  2;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i.doubleValue()  /  2;	  out[row]    =    sum    +    dataRow[i.doubleValue();    	non-compiled	[CE]  ']'  expected	22	None	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    row;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	121	3	add
251	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	121	3	add
252	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	121	None	add
253	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    For(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  '.class'  expected	121	None	add
254	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataset[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataset  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataset[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataset[i]  *  v[i];  }	  	non-compiled	[CE]  cannot  find  symbol  dataset	121	None	add
255	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  out[row]  =  sum  +  3;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    3;    out[row]  =  sum  +  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	2	add
256	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  out[row]  =  sum  +  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  out[row]  =  sum  +  3;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    out[row]  =  sum  +  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	2	add
257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	27	4	add
258	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	27	4	add
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	27	4	add
260	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	27	4	add
261	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  3;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  3;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	2	add
262	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  3;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  3;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  3;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	2	add
263	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  3;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  3;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	2	add
264	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  3;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  3;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  3;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	2	add
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  2;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  /  2;	  out[row]    =    sum    +    2;    	compilable	  [FE]  AssertionFailedError  	24	4	replace
266	[BUG]  [BUGGY]  out[row]  =  sum  /  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  2;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  /  2;	  out[row]    =    sum    +    2;    	compilable	  [FE]  AssertionFailedError  	24	4	replace
267	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  For(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	For(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    For(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	4	None	replace
268	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	39	4	replace
269	[BUG]  [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	39	4	replace
270	[BUG]  [BUGGY]  out[row]  =  v[i]  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  i  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v[i]  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v[i]  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	39	None	replace
271	[BUG]  [BUGGY]  out[row]  =  dataRow[row].length;  [CE]  double  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row].length;	  out[row]    =    output    +    dataRow[row].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	120	None	replace
272	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[j].length;  [CE]  cannot  find  symbol  j  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[j].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[j].length;	  out[row]    =    sum    +    dataRow[row]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  j	111	None	replace
273	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[col].length;  [CE]  cannot  find  symbol  col  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[col].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[col].length;	  out[row]    =    sum    +    dataRow[row]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  col	111	None	replace
274	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[nCols].length;  [CE]  double  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[nCols].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[nCols].length;	  out[row]    =    sum    +    dataRow[row]    *    v[i].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	111	None	replace
275	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  out[row]  =  sum  /  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    /    1;    out[row]  =  sum  /  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	add
276	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  out[row]  =  sum  /  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  out[row]  =  sum  /  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    out[row]  =  sum  /  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	add
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	25	4	add
278	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	25	4	add
279	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	add
280	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	add
281	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  2;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	add
282	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  2;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  /  2;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	add
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	25	4	add
284	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	25	4	add
285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	94	4	replace
286	[BUG]  [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	94	4	replace
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	94	4	replace
288	[BUG]  [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	94	4	replace
289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  2;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	94	4	replace
290	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  2;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  2;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	94	4	replace
291	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  out[i]  =  sum;  }  [CE]  cannot  find  symbol  i  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  out[i]  =  sum;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    	non-compiled	[CE]  cannot  find  symbol  i	118	None	replace
292	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[iCols];  [CE]  cannot  find  symbol  iCols  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[iCols];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[iCols];	  out[row]    =    sum    +    dataRow[row]    *    v[columnDimension];    	non-compiled	[CE]  cannot  find  symbol  iCols	98	None	replace
293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[0];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  dataRow[row]  *  v[0];	  out[row]    =    sum    +    dataRow[row]    *    v[columnDimension];    	compilable	  [FE]  AssertionFailedError  	98	4	replace
294	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[0];  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[0];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[0];	  out[row]    =    sum    +    dataRow[row]    *    v[columnDimension];    	compilable	  [FE]  AssertionFailedError  	98	4	replace
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    	compilable	  [FE]  AssertionFailedError  	104	4	replace
296	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length;  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    	compilable	  [FE]  AssertionFailedError  	104	4	replace
297	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  v.length;  }  [CE]  cannot  find  symbol  nSum  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  v.length;  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    	non-compiled	[CE]  cannot  find  symbol  nSum	104	None	replace
298	[BUG]  [BUGGY]  out[i]  =  sum  +  dataRow[i].length;  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  sum  +  dataRow[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  sum  +  dataRow[i].length;	  out[row]    =    value    +    dataRow[i].length;    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
299	[BUG]  [BUGGY]  out[row]  =  Sum  +  dataRow[i].length;  [CE]  cannot  find  symbol  Sum  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  Sum  +  dataRow[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  Sum  +  dataRow[i].length;	  out[row]    =    value    +    dataRow[i].length;    	non-compiled	[CE]  cannot  find  symbol  Sum	112	None	replace
300	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  maxColSum;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [CE]  cannot  find  symbol  maxColSum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  maxColSum;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  maxColSum;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    sum    +=    dataRow[i]    *    d[i];    }    	non-compiled	[CE]  cannot  find  symbol  maxColSum	82	None	replace
301	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [CE]  cannot  find  symbol  nMaxColSum  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    sum    +=    dataRow[i]    *    d[i];    }    	non-compiled	[CE]  cannot  find  symbol  nMaxColSum	82	None	replace
302	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[nCols];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  dataRow[row]  *  v[nCols];	  out[row]    =    sum    +    dataRow[row]    *    v[r];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	99	4	replace
303	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[nCols];  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[nCols];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[nCols];	  out[row]    =    sum    +    dataRow[row]    *    v[r];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	99	4	replace
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  v.length;	  out[i]    =    v.length;    	compilable	  [FE]  AssertionFailedError  	61	4	replace
305	[BUG]  [BUGGY]  out[row]  =  v.length;  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length;	  out[i]    =    v.length;    	compilable	  [FE]  AssertionFailedError  	61	4	replace
306	[BUG]  [BUGGY]  out[i]  =  dataRow.length;  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  dataRow.length;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  dataRow.length;	  out[i]    =    v.length;    	non-compiled	[CE]  cannot  find  symbol  i	61	None	replace
307	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  lu[i];  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  lu[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i]  *  lu[i];	  out[row]    =    sum    +    dataRow[i]    *    d[i];    	non-compiled	[CE]  cannot  find  symbol  i	74	None	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  -  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  -  1;	  out[row]    =    sum    +    1;    out[row]    =    sum    +    1;    	compilable	  [FE]  AssertionFailedError  	33	4	replace
309	[BUG]  [BUGGY]  out[row]  =  sum  -  1;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  -  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  -  1;	  out[row]    =    sum    +    1;    out[row]    =    sum    +    1;    	compilable	  [FE]  AssertionFailedError  	33	4	replace
310	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  int  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    dataRows.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	44	None	replace
311	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  out[row]  =  sum  +  2;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    2;    out[row]  =  sum  +  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
312	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  out[row]  =  sum  +  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  out[row]  =  sum  +  2;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    2;    out[row]  =  sum  +  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	2	add
313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	23	4	add
314	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	23	4	add
315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	23	4	add
316	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	23	4	add
317	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  *  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  *  1;	  out[row]    =    sum    /    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	2	replace
318	[BUG]  [BUGGY]  out[row]  =  sum  *  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  *  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  *  1;	  out[row]    =    sum    /    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	2	replace
319	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  4;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  /  4;	  out[row]    =    sum    /    1;    	compilable	  [FE]  AssertionFailedError  	26	4	replace
320	[BUG]  [BUGGY]  out[row]  =  sum  /  4;  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  4;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  /  4;	  out[row]    =    sum    /    1;    	compilable	  [FE]  AssertionFailedError  	26	4	replace
321	[BUG]  [BUGGY]  sum  +=  dataRow[row]  *  dataRow[i];  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[row]  *  dataRow[i];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[row]  *  dataRow[i];	  sum    +=    dataRow[i]    *    dataRow[i];    	non-compiled	[CE]  cannot  find  symbol  i	92	None	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[row]  *  dataRow[row];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	sum  +=  dataRow[row]  *  dataRow[row];	  sum    +=    dataRow[i]    *    dataRow[i];    	compilable	  [FE]  AssertionFailedError  	92	4	replace
323	[BUG]  [BUGGY]  sum  +=  dataRow[row]  *  dataRow[row];  [FE]  AssertionFailedError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[row]  *  dataRow[row];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[row]  *  dataRow[row];	  sum    +=    dataRow[i]    *    dataRow[i];    	compilable	  [FE]  AssertionFailedError  	92	4	replace
324	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[r.length]  *  v[r.length].length;  [CE]  cannot  find  symbol  r  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[r.length]  *  v[r.length].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[r.length]  *  v[r.length].length;	  out[row]    =    sum    +    dataRow[i]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  r	84	None	replace
325	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[r.length]  *  v[r.length;  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[r.length]  *  v[r.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[r.length]  *  v[r.length;	  out[row]    =    sum    +    dataRow[i]    *    v[i].length;    	non-compiled	[CE]  ']'  expected	84	None	replace
326	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[j]  *  v[j].length;  [CE]  cannot  find  symbol  j  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[j]  *  v[j].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[j]  *  v[j].length;	  out[row]    =    sum    +    dataRow[i]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  j	84	None	replace
327	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	94	4	replace
328	[BUG]  [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  v.length  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	94	4	replace
329	[BUG]  [BUGGY]  out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	94	None	replace
330	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  v;  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  v;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i]  *  v;	  out[row]    =    sum    +    dataRow[i]    *    maxColSum;    	non-compiled	[CE]  cannot  find  symbol  i	73	None	replace
331	[BUG]  [BUGGY]  out[row]  =  dataRow  +  dataRow[row].length;  [CE]  double  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  dataRow[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  dataRow[row].length;	  out[row]    =    output    +    dataRow[row].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	120	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  out[i]  =  sum;  }  [CE]  cannot  find  symbol  nMaxColSum  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  out[i]  =  sum;  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    out[i]    =    sum;    }    	non-compiled	[CE]  cannot  find  symbol  nMaxColSum	70	None	replace
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  out[i]  =  sum;  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    out[i]    =    sum;    }    	compilable	  [FE]  AssertionFailedError  	70	4	replace
334	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  out[i]  =  sum;  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    out[i]    =    sum;    }    	compilable	  [FE]  AssertionFailedError  	70	4	replace
335	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >=    dataRow.length)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    dataRows.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	44	4	replace
337	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    dataRows.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	44	4	replace
338	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum.length;  [CE]  double  cannot  be  dereferenced  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum.length;	  out[row]    =    dataRow    +    sum;    	non-compiled	[CE]  double  cannot  be  dereferenced	91	None	replace
339	[BUG]  [BUGGY]  out[row]  =  dataRow  *  sum;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  *  sum;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  *  sum;	  out[row]    =    dataRow    +    sum;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	91	None	replace
340	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }	  	non-compiled	[CE]  ')'  expected	103	None	add
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  }	  	compilable	  [FE]  AssertionFailedError  	103	4	add
342	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v.length;  }  }	  	compilable	  [FE]  AssertionFailedError  	103	4	add
343	[BUG]  [BUGGY]  out[row]  =  dataRow[i]  +  sum  *  d[i];  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i]  +  sum  *  d[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i]  +  sum  *  d[i];	  out[row]    =    sum    +    dataRow[i]    *    d[i];    	non-compiled	[CE]  cannot  find  symbol  i	74	None	replace
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  2;  }	  	compilable	  [FE]  AssertionFailedError  	25	4	add
345	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  2;  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  2;  }	  	compilable	  [FE]  AssertionFailedError  	25	4	add
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  1;  }	  	compilable	  [FE]  AssertionFailedError  	25	4	add
347	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  1;  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  /  1;  }	  	compilable	  [FE]  AssertionFailedError  	25	4	add
348	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  out[row]  =  sum  /  2;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    /    1;    out[row]  =  sum  /  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	add
349	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  out[row]  =  sum  /  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  out[row]  =  sum  /  2;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    out[row]  =  sum  /  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	2	add
350	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    v.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    (int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  ')'  expected	115	None	add
351	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  Integer  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  Integer  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    v.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    Integer  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	115	None	add
352	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }  [CE]  cannot  find  symbol  total  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    	non-compiled	[CE]  cannot  find  symbol  total	19	None	replace
353	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  data[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	3	None	replace
354	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  Integer  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  Integer  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    Integer  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	121	None	add
355	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    (int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  ')'  expected	121	None	add
356	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[r].length;  [CE]  cannot  find  symbol  r  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[r].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[r].length;	  out[row]    =    sum    +    dataRow[row]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  r	111	None	replace
357	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[0].length;  [CE]  double  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[0].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[0].length;	  out[row]    =    sum    +    dataRow[row]    *    v[i].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	111	None	replace
358	[BUG]  [BUGGY]  out[row]  =  sum  /  1  +  dataRow[i].doubleValue();  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1  +  dataRow[i].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  /  1  +  dataRow[i].doubleValue();	  out[row]    =    sum    /    1;    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
359	[BUG]  [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v[columnDimension];  [CE]  cannot  find  symbol  columnDimension  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v[columnDimension];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row]  +  sum  *  v[columnDimension];	  out[row]    =    dataRow[i]    +    sum    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  columnDimension	83	None	replace
360	[BUG]  [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v[r];  [CE]  cannot  find  symbol  r  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  +  sum  *  v[r];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row]  +  sum  *  v[r];	  out[row]    =    dataRow[i]    +    sum    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  r	83	None	replace
361	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow.length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  *  dataRow.length;	  out[row]    =    dataRow    +    sum[row].length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	7	None	replace
362	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[nCols].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[nCols].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[nCols].doubleValue();	  out[row]    =    sum    +    dataRow[j].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	21	None	replace
363	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  >  expected	117	None	add
364	[BUG]  [BUGGY]  out[row]  =  dataRow[i]  +  sum  *  v[i].length;  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i]  +  sum  *  v[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i]  +  sum  *  v[i].length;	  out[row]    =    sum    +    dataRow[i]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  i	84	None	replace
365	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[j]  *  v[i].length;  [CE]  cannot  find  symbol  j  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[j]  *  v[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[j]  *  v[i].length;	  out[row]    =    sum    +    dataRow[i]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  j	84	None	replace
366	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[0]  *  v[0].length;  [CE]  double  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[0]  *  v[0].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[0]  *  v[0].length;	  out[row]    =    sum    +    dataRow[i]    *    v[i].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	84	None	replace
367	[BUG]  [BUGGY]  out[row]  =  v  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	35	None	replace
368	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  -  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  -  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  -  1;	  out[row]    =    sum    +    dataRow[row].length    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	8	None	replace
369	[BUG]  [BUGGY]  out[row]  =  v  +  dataRow[row].length  -  1;  [CE]  double  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v  +  dataRow[row].length  -  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v  +  dataRow[row].length  -  1;	  out[row]    =    sum    +    dataRow[row].length    -    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
370	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  cannot  find  symbol  dataRows  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  dataRows.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRows	57	None	replace
371	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  Sum;  }  [CE]  cannot  find  symbol  nSum  [FE]                AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  Sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  Sum;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    Sum;    }    	non-compiled	[CE]  cannot  find  symbol  nSum	20	None	replace
372	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [CE]  cannot  find  symbol  d  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    d[i];    }    	non-compiled	[CE]  cannot  find  symbol  d	13	None	replace
373	[BUG]  [BUGGY]  out[i]  =  dataRow[row];  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  dataRow[row];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  dataRow[row];	  out[i]    =    dataRow[i];    	non-compiled	[CE]  cannot  find  symbol  i	124	None	replace
374	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    v.length;    i++)    {    if(sum    >    dataRow[i][i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
375	[BUG]  [BUGGY]  out[row]  =  v  +  dataRow[i]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v  +  dataRow[i]  *  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v  +  dataRow[i]  *  v[i];	  out[row]    =    sum    +    dataRow[i]    *    v[j];    	non-compiled	[CE]  cannot  find  symbol  i	75	None	replace
376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	compilable	  [FE]  AssertionFailedError  	59	4	replace
377	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	compilable	  [FE]  AssertionFailedError  	59	4	replace
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	compilable	  [FE]  AssertionFailedError  	59	4	replace
379	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	compilable	  [FE]  AssertionFailedError  	59	4	replace
380	[BUG]  [BUGGY]  out[i]  =  dataRow;  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  dataRow;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  dataRow;	  out[i]    =    maxColSum;    	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  v.length  +  1;	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	41	4	replace
382	[BUG]  [BUGGY]  out[row]  =  v.length  +  1;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v.length  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v.length  +  1;	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	41	4	replace
383	[BUG]  [BUGGY]  out[row]  =  dataRow  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  1;	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	41	None	replace
384	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  (int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  (int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    (int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	non-compiled	[CE]  ')'  expected	56	None	add
385	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  DataRow[i];  }  [CE]  cannot  find  symbol  DataRow  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  DataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  DataRow[i];  }	  	non-compiled	[CE]  cannot  find  symbol  DataRow	56	None	add
386	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  v[i].length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  v[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  v[i].length;	  out[row]    =    dataRow    +    v[i].length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	47	None	replace
387	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  i	40	None	add
388	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  cannot  find  symbol  i  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  i	40	None	add
389	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
390	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
391	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nLows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  nLows  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nLows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nLows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  nLows	6	None	replace
392	[BUG]  [BUGGY]  out[row]  =  dataRow.length  +  sum[i].length;  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow.length  +  sum[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow.length  +  sum[i].length;	  out[row]    =    v.length    +    sum[i].length;    	non-compiled	[CE]  cannot  find  symbol  i	113	None	replace
393	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nMatrix;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [CE]  cannot  find  symbol  nMatrix  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nMatrix;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nMatrix;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    sum    +=    dataRow[i]    *    d[i];    }    	non-compiled	[CE]  cannot  find  symbol  nMatrix	82	None	replace
394	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  >  expected	14	None	add
395	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  double  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  double  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    double  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  >  expected	14	None	add
396	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }  [CE]  cannot  find  symbol  total  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }	  	non-compiled	[CE]  cannot  find  symbol  total	14	None	add
397	[BUG]  [BUGGY]  out[row]  =  v  +  sum[row].length;  [CE]  array  required,  but  double  found  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v  +  sum[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v  +  sum[row].length;	  out[row]    =    v    +    dataRow[row].length;    	non-compiled	[CE]  array  required,  but  double  found	90	None	replace
398	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[j.length];  [CE]  cannot  find  symbol  j  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[j.length];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[j.length];	  out[row]    =    sum    +    dataRow[row]    *    v[r.length];    	non-compiled	[CE]  cannot  find  symbol  j	30	None	replace
399	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  nMaxColSum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nMaxColSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nSum;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  nMaxColSum	12	None	replace
400	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[i]  =  sum  +  1;  out[row]  =  sum  +  1;  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[i]  =  sum  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[i]  =  sum  +  1;  out[row]  =  sum  +  1;	  	non-compiled	[CE]  cannot  find  symbol  i	32	None	add
401	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row],  sum  +  1;  out[row]  =  sum  +  1;  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row],  sum  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row],  sum  +  1;  out[row]  =  sum  +  1;	  	non-compiled	[CE]  not  a  statement	32	None	add
402	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	63	None	replace
403	[BUG]  [BUGGY]  sum  +=  dataRow[i]  *  v.length;  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[i]  *  v.length;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[i]  *  v.length;	  sum    +=    dataRow[i]    *    dataRow[i];    	non-compiled	[CE]  cannot  find  symbol  i	92	None	replace
404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	1	4	add
405	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	1	4	add
406	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	1	None	add
407	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  >  expected	1	None	add
408	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i	  	non-compiled	[CE]  ']'  expected	1	None	add
409	[BUG]  [BUGGY]  out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	109	None	replace
410	[BUG]  [BUGGY]  out[row]  =  v  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	109	None	replace
411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	64	4	add
412	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	64	4	add
413	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	64	None	add
414	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  >  expected	64	None	add
415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	64	4	add
416	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	64	4	add
417	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow[row].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  *  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  *  dataRow[row].doubleValue();	  out[row]    =    dataRow    +    sum[i].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	107	None	replace
418	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRows;  [CE]  cannot  find  symbol  dataRows  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRows;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRows;	  out[row]    =    sum    +    i;    	non-compiled	[CE]  cannot  find  symbol  dataRows	102	None	replace
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	62	4	add
420	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	62	4	add
421	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	62	None	add
422	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  >  expected	62	None	add
423	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }	  	non-compiled	[CE]  not  a  statement	96	None	add
424	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  dataRow[i];  }	  	non-compiled	[CE]  not  a  statement	96	None	add
425	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  not  a  statement	96	None	add
426	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    out[i]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  i	36	None	add
427	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	2	add
428	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	2	add
429	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  2;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  2;  }	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
430	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	23	4	add
431	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	23	4	add
432	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  out[row]  =  sum  +  2;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  out[row]  =  sum  +  2;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  out[row]  =  sum  +  2;  }	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
433	[BUG]  [BUGGY]  out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	39	None	replace
434	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	39	4	replace
435	[BUG]  [BUGGY]  out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	39	4	replace
436	[BUG]  [BUGGY]  while(v.length  >=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  while(v.length  >=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	while(v.length  >=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  while(v.length    >    0)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
437	[BUG]  [BUGGY]  out[i]  =  sum  +  1;  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  sum  +  1;	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    out[row]    =    sum    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  i	95	None	replace
438	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  *  v.doubleValue();  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  *  v.doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i.doubleValue()  *  v.doubleValue();	  out[row]    =    sum    +    dataRow[i.doubleValue();    	non-compiled	[CE]  ']'  expected	22	None	replace
439	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  +  v.length;  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[i.doubleValue()  +  v.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i.doubleValue()  +  v.length;	  out[row]    =    sum    +    dataRow[i.doubleValue();    	non-compiled	[CE]  ']'  expected	22	None	replace
440	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  row.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  row.doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  row.doubleValue();	  out[row]    =    row    +    sum    +    dataRow[row].doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	110	None	replace
441	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  row].doubleValue();  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  row].doubleValue();	  out[row]    =    row    +    sum    +    dataRow[row].doubleValue();    	non-compiled	[CE]  ';'  expected	110	None	replace
442	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
443	[BUG]  [BUGGY]  out[row]  =  dataRow[i].length;  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i].length;	  out[row]    =    value    +    dataRow[i].length;    	non-compiled	[CE]  cannot  find  symbol  i	112	None	replace
444	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  3;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  3;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  out[row]  =  sum  +  3;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
445	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	27	4	add
446	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	27	4	add
447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  3;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  3;  }	  	compilable	  [FE]  AssertionFailedError  	27	4	add
448	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  3;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  3;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  3;  }	  	compilable	  [FE]  AssertionFailedError  	27	4	add
449	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  out[row]  =  sum  +  3;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  out[row]  =  sum  +  3;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  out[row]  =  sum  +  3;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
450	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	non-compiled	[CE]  ')'  expected	58	None	add
451	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total  +  1;  }  [CE]  cannot  find  symbol  total  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  total	93	None	add
452	[BUG]  [BUGGY]  out[row]  =  dataRow[row]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  *  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row]  *  v[i];	  out[row]    =    sum    +    dataRow[row]    *    v[j];    	non-compiled	[CE]  cannot  find  symbol  i	29	None	replace
453	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow.length)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
454	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  if(dataRow.length!=  0)  {  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    if(dataRow.length!=  0)  {  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  }	  	compilable	  [FE]  AssertionFailedError  	42	4	add
455	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  if(dataRow.length!=  0)  {  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  if(dataRow.length!=  0)  {  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    if(dataRow.length!=  0)  {  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  }	  	compilable	  [FE]  AssertionFailedError  	42	4	add
456	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  if(dataRow.length!=  0)  {  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  if(dataRow.length!=  0)  {  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    if(dataRow.length!=  0)  {  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
457	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  (int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    (int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  ')'  expected	42	None	add
458	[BUG]  [BUGGY]  while(v.length  >=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  while(v.length  >=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	while(v.length  >=  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  while(v.length    >    0)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
459	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRows  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  dataRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRows	2	None	replace
460	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    v.length;    i++)    {    if(sum    >    dataRow.length)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
461	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  double  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  double  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    double  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  >  expected	68	None	add
462	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  >  expected	68	None	add
463	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  >  expected	18	None	add
464	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  Integer  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  Integer  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    Integer  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  >  expected	18	None	add
465	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  double  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  double  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    double  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  >  expected	18	None	add
466	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }  [CE]  cannot  find  symbol  total  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  total;  }	  	non-compiled	[CE]  cannot  find  symbol  total	18	None	add
467	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
468	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
469	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow[i][i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
470	[BUG]  [BUGGY]  out[row]  =  dataRow  +  rowDimension.length;  [CE]  cannot  find  symbol  rowDimension  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  rowDimension.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  rowDimension.length;	  out[row]    =    row    +    dataRow[row].length;    	non-compiled	[CE]  cannot  find  symbol  rowDimension	119	None	replace
471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	5	4	add
472	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	5	4	add
473	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	5	None	add
474	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  >  expected	5	None	add
475	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  ']'  expected	5	None	add
476	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[0].length;  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[0].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[0].length;	  out[row]    =    sum    +    dataRow[j].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
477	[BUG]  [BUGGY]  out[row]  =  dataRow[row]  *  v[i].length;  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  *  v[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row]  *  v[i].length;	  out[row]    =    sum    +    dataRow[row]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  i	111	None	replace
478	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  v[i];  }  [CE]  cannot  find  symbol  nSum  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    	non-compiled	[CE]  cannot  find  symbol  nSum	19	None	replace
479	[BUG]  [BUGGY]  out[row]  =  total  +  dataRow[i]  *  v[i].length;  [CE]  cannot  find  symbol  total  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  total  +  dataRow[i]  *  v[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  total  +  dataRow[i]  *  v[i].length;	  out[row]    =    sum    +    dataRow[i]    *    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  total	84	None	replace
480	[BUG]  [BUGGY]  out[row]  =  dataRow  +  row  +  sum.doubleValue();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  row  +  sum.doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  row  +  sum.doubleValue();	  out[row]    =    row    +    sum    +    dataRow[row].doubleValue();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	110	None	replace
481	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  ')'  expected	14	None	add
482	[BUG]  [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [CE]  double  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  3;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    3;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }	  	non-compiled	[CE]  double  cannot  be  dereferenced	27	None	add
483	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
484	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	compilable	  [FE]  AssertionFailedError  	57	4	replace
485	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    	compilable	  [FE]  AssertionFailedError  	57	4	replace
486	[BUG]  [BUGGY]  out[row]  =  row  +  sum  +  dataRow[row].length;  [CE]  double  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  sum  +  dataRow[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  row  +  sum  +  dataRow[row].length;	  out[row]    =    row    +    dataRow[row].length;    	non-compiled	[CE]  double  cannot  be  dereferenced	119	None	replace
487	[BUG]  [BUGGY]  out[row]  =  dataRow  +  rowDimension[row].length;  [CE]  cannot  find  symbol  rowDimension  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  rowDimension[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  rowDimension[row].length;	  out[row]    =    row    +    dataRow[row].length;    	non-compiled	[CE]  cannot  find  symbol  rowDimension	119	None	replace
488	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i]  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i]  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i]	  	non-compiled	[CE]  ';'  expected	5	None	add
489	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  dataRow[row]  +  1;	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	37	4	replace
490	[BUG]  [BUGGY]  out[row]  =  dataRow[row]  +  1;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row]  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row]  +  1;	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    	compilable	  [FE]  AssertionFailedError  	37	4	replace
491	[BUG]  [BUGGY]  out[row]  =  row  +  dataRow[i]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  dataRow[i]  *  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  row  +  dataRow[i]  *  v[i];	  out[row]    =    sum    +    dataRow[i]    *    d[i];    	non-compiled	[CE]  cannot  find  symbol  i	74	None	replace
492	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i]  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i]  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i]	  	non-compiled	[CE]  ';'  expected	62	None	add
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
494	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	93	4	add
495	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  int  nRows  =  dataRow.length;  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  int  nRows  =  dataRow.length;  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum    +    1;    }    int  nRows  =  dataRow.length;  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum  +  1;  }	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	93	None	add
496	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v	  	non-compiled	[CE]  ';'  expected	64	None	add
497	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	35	3	replace
498	[BUG]  [BUGGY]  out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	35	3	replace
499	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v[row  +  1];  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  v[row  +  1];  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	4	replace
500	[BUG]  [BUGGY]  out[row]  =  v[row  +  1];  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  v[row  +  1];  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  v[row  +  1];  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	4	replace
501	[BUG]  [BUGGY]  out[row]  =  row  +  sum.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  sum.doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  row  +  sum.doubleValue();	  out[row]    =    dataRow    +    sum.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	101	None	replace
502	[BUG]  [BUGGY]  sum  +=  dataRow[j]  *  dataRow[i];  [CE]  cannot  find  symbol  j  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[j]  *  dataRow[i];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[j]  *  dataRow[i];	  sum    +=    dataRow[i]    *    dataRow[i];    	non-compiled	[CE]  cannot  find  symbol  j	92	None	replace
503	[BUG]  [BUGGY]  out[i]  =  sum  +  dataRow[row].doubleValue();  [CE]  cannot  find  symbol  i  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  sum  +  dataRow[row].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  sum  +  dataRow[row].doubleValue();	  out[row]    =    dataRow    +    sum[row].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  i	45	None	replace
504	[BUG]  [BUGGY]  out[i]  =  dataRow[i].length;  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  dataRow[i].length;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  dataRow[i].length;	  out[i]    =    v.length;    	non-compiled	[CE]  cannot  find  symbol  i	61	None	replace
505	[BUG]  [BUGGY]  out[row]  =  row  +  sum  +  dataRow[i].doubleValue();  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  sum  +  dataRow[i].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  row  +  sum  +  dataRow[i].doubleValue();	  out[row]    =    dataRow    +    sum[i].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  i	107	None	replace
506	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }	  	non-compiled	[CE]  ')'  expected	18	None	add
507	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  sum;  }  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        out[i]        =        sum;        }        for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    sum;    }    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  (int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =	  	non-compiled	[CE]  ')'  expected	18	None	add
508	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[j]  *  v[i];  [CE]  cannot  find  symbol  j  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[j]  *  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[j]  *  v[i];	  out[row]    =    sum    +    dataRow[i]    *    v[j];    	non-compiled	[CE]  cannot  find  symbol  j	75	None	replace
509	[BUG]  [BUGGY]  out[row]  -=  dataRow  +  sum[row].length;  [CE]  array  required,  but  double  found  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  -=  dataRow  +  sum[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  -=  dataRow  +  sum[row].length;	  out[row]    =    dataRow    +    sum[row].length;    	non-compiled	[CE]  array  required,  but  double  found	7	None	replace
510	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i]  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i]  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i]	  	non-compiled	[CE]  ';'  expected	1	None	add
511	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]          for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	                for(int        i        =        0;        i        <        nRows;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v	  	non-compiled	[CE]  ';'  expected	1	None	add
512	[BUG]  [BUGGY]  out[row]  =  value  +  dataRow[row].length;  [CE]  cannot  find  symbol  value  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  value  +  dataRow[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  value  +  dataRow[row].length;	  out[row]    =    v    +    dataRow[row].length;    	non-compiled	[CE]  cannot  find  symbol  value	90	None	replace
513	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[row].length;  [CE]  double  cannot  be  dereferenced  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[row].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[row].length;	  out[row]    =    sum    +    dataRow[row]    *    v[r.length];    	non-compiled	[CE]  double  cannot  be  dereferenced	30	None	replace
514	[BUG]  [BUGGY]  out[row]  =  row  +  sum  +  dataRow[i].length;  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  sum  +  dataRow[i].length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  row  +  sum  +  dataRow[i].length;	  out[row]    =    dataRow    +    v[i].length;    	non-compiled	[CE]  cannot  find  symbol  i	47	None	replace
515	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  =  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    =    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }	  	non-compiled	[CE]  not  a  statement	96	None	add
516	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	39	3	replace
517	[BUG]  [BUGGY]  out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  row  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	39	3	replace
518	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	2	add
519	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	2	add
520	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  int  nRows  =  dataRow.length;  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  int  nRows  =  dataRow.length;  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    out[row]    =    sum    +    1;    }    int  nRows  =  dataRow.length;  out[row]  =  sum  +  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  sum  +  1;  }	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	36	None	add
521	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[j.length].doubleValue();  [CE]  cannot  find  symbol  j  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  dataRow[j.length].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[j.length].doubleValue();	  out[row]    =    sum    +    dataRow[i.length].doubleValue();    	non-compiled	[CE]  cannot  find  symbol  j	106	None	replace
522	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >=  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >=    dataRow.length)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
523	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  sum;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    (int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    	compilable	  [FE]  AssertionFailedError  	86	4	replace
524	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  sum;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  sum;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    (int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    	compilable	  [FE]  AssertionFailedError  	86	4	replace
525	[BUG]  [BUGGY]  out[row]  =  sum  /  dataRow[0].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  dataRow[0].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  /  dataRow[0].doubleValue();	  out[row]    =    sum    /    dataRow[row].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	46	None	replace
526	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[row].length  -  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  dataRow[row].length  -  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  dataRow[row].length  -  1;	  out[row]    =    sum    +    dataRow[row].length    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	8	None	replace
527	[BUG]  [BUGGY]  out[row]  =  row  +  dataRow[row].length  -  1;  [CE]  double  cannot  be  dereferenced  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  row  +  dataRow[row].length  -  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  row  +  dataRow[row].length  -  1;	  out[row]    =    sum    +    dataRow[row].length    -    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
528	[BUG]  [BUGGY]  out[row]  =  dataRow[row  +  1].doubleValue();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[row  +  1].doubleValue();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[row  +  1].doubleValue();  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i].doubleValue();    }    	non-compiled	[CE]  double  cannot  be  dereferenced	109	None	replace
529	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  out[	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
530	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
531	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  sum;  }  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    if(v.length!=    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
532	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
533	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
534	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
535	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nCols;    i++)    {    out[row]    =    sum    +    1;    }    out[row]  =  v.length  +  1;  for(int  i  =  0;  i  <  nCols;  i++)  {  out[row]  =  sum  +  1;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	2	add
536	[BUG]  [BUGGY]  sum  +=  dataRow[i]  *  v[i].length;  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[i]  *  v[i].length;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[i]  *  v[i].length;	  sum    +=    dataRow[i]    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  i	72	None	replace
537	[BUG]  [BUGGY]  sum  +=  dataRow[i]  *  v[j];  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  sum  +=  dataRow[i]  *  v[j];  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	sum  +=  dataRow[i]  *  v[j];	  sum    +=    dataRow[i]    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  i	72	None	replace
538	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    For(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    	compilable	  [FE]  AssertionFailedError  	17	3	replace
539	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v[i];  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  v[i];  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    For(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    	compilable	  [FE]  AssertionFailedError  	17	3	replace
540	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  int  nRows  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  int  nRows  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    dataRow[i];    }    int  nRows  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }	  	non-compiled	[CE]  >  expected	56	None	add
541	[BUG]  [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i].length  *  v[i];  }  [CE]  double  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  /  1;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i].length  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    /    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i].length  *  v[i];  }	  	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	add
542	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  v.length  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row]  =  v.length  +  1;  out[row]  =  sum  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	add
543	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  v.length  +  1;  out[row]  =  sum  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  v.length  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row]  =  v.length  +  1;  out[row]  =  sum  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	2	add
544	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  total  +  1;  out[row]  =  sum  +  1;  [CE]  cannot  find  symbol  total  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    out[row]  =  sum  +  1;  out[row]  =  total  +  1;  out[row]  =  sum  +  1;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        out[row]    =    sum    +    1;    out[row]  =  total  +  1;  out[row]  =  sum  +  1;	  	non-compiled	[CE]  cannot  find  symbol  total	32	None	add
545	[BUG]  [BUGGY]  out[i]  =  dataRow[i]  *  sum;  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[i]  =  dataRow[i]  *  sum;  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[i]  =  dataRow[i]  *  sum;	  out[i]    =    dataRow[i];    	non-compiled	[CE]  cannot  find  symbol  i	124	None	replace
546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  v.length;  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    	compilable	  [FE]  AssertionFailedError  	104	4	replace
547	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  v.length;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  v.length;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  out[i]  =  v.length;  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    out[i]    =    v.length;    }    	compilable	  [FE]  AssertionFailedError  	104	4	replace
548	[BUG]  [BUGGY]  out[row]  =  dataRow[i].doubleValue();  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i].doubleValue();  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i].doubleValue();	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    out[row]    =    sum    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  i	95	None	replace
549	[BUG]  [BUGGY]  out[row]  =  dataRow[i]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i]  *  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i]  *  v[i];	  out[row]    =    sum    +    1;    for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    out[row]    =    sum    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  i	95	None	replace
550	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
551	[BUG]  [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [CE]  double  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  sum  +  2;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]    =    sum    +    2;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i].doubleValue();  }	  	non-compiled	[CE]  double  cannot  be  dereferenced	23	None	add
552	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  if(sum  >=  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nCols;    i++)    {    if(sum    >=    dataRow[i][i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
553	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  TOO_SMALL;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  TOO_SMALL;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    total;    }    	compilable	  [FE]  AssertionFailedError  	87	4	replace
554	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  TOO_SMALL;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  TOO_SMALL;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  out[i]  =  TOO_SMALL;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    total;    }    	compilable	  [FE]  AssertionFailedError  	87	4	replace
555	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  TOO_SMALL;  }  [CE]  cannot  find  symbol  nSum  [FE]            AssertionFailedError      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  TOO_SMALL;  }  [BUGGY]      out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  out[i]  =  TOO_SMALL;  }	          for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    sum;    }    for(int    i    =    0;    i    <    nRows;    i++)    {    out[i]    =    total;    }    	non-compiled	[CE]  cannot  find  symbol  nSum	87	None	replace
556	[BUG]  [BUGGY]  out[row]  =  dataRow[i]  +  sum  /  v[i];  [CE]  cannot  find  symbol  i  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i]  +  sum  /  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i]  +  sum  /  v[i];	  out[row]    =    dataRow[i]    +    sum    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  i	83	None	replace
557	[BUG]  [BUGGY]  out[row]  =  dataRow[i]  +  sum  *  dataRow[i];  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i]  +  sum  *  dataRow[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i]  +  sum  *  dataRow[i];	  out[row]    =    dataRow[i]    +    sum    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  i	83	None	replace
558	[BUG]  [BUGGY]  out[row]  =  dataRow[i]  +  v.length  *  v[i];  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow[i]  +  v.length  *  v[i];  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow[i]  +  v.length  *  v[i];	  out[row]    =    dataRow[i]    +    sum    *    v[i];    	non-compiled	[CE]  cannot  find  symbol  i	83	None	replace
559	[BUG]  [BUGGY]  out[row]  =  dataRow  +  sum  +  v.length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow  +  sum  +  v.length;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow  +  sum  +  v.length;	  out[row]    =    dataRow    +    sum;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	91	None	replace
560	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow.length  +  sum;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  dataRow.length  +  sum;	  out[row]    =    dataRow    +    sum;    	compilable	  [FE]  AssertionFailedError  	91	4	replace
561	[BUG]  [BUGGY]  out[row]  =  dataRow.length  +  sum;  [FE]  AssertionFailedError  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]  =  dataRow.length  +  sum;  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  dataRow.length  +  sum;	  out[row]    =    dataRow    +    sum;    	compilable	  [FE]  AssertionFailedError  	91	4	replace
562	[BUG]  [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nRows  =  dataRow.length;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]      if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }      [BUGGY]  out[row]    =    sum    +    1;    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nRows  =  dataRow.length;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]        =        sum        +        1;        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  nRows  =  dataRow.length;  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	34	None	add
