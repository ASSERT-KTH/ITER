bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }		compilable	  [FE]  AssertionFailedError  	20	4	add
2	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }		compilable	  [FE]  AssertionFailedError  	20	4	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }		compilable	  [FE]  AssertionFailedError  	20	4	add
4	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }		compilable	  [FE]  AssertionFailedError  	20	4	add
5	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [CE]  cannot  find  symbol  d  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  d[i];  }		non-compiled	[CE]  cannot  find  symbol  d	20	None	add
6	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  total[i];  }  [CE]  cannot  find  symbol  total  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  total[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  total[i];  }		non-compiled	[CE]  cannot  find  symbol  total	20	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }		compilable	  [FE]  AssertionFailedError  	20	4	add
8	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [FE]  AssertionFailedError  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum;  }		compilable	  [FE]  AssertionFailedError  	20	4	add
9	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i].length;  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  dataRow[i].length;  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i].length;	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  1;  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	out[row]  =  sum  +  1;	out[row]  =  sum;  	compilable	  [FE]  AssertionFailedError  	19	4	replace
11	[BUG]  [BUGGY]  out[row]  =  sum  +  1;  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  1;  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  1;	out[row]  =  sum;  	compilable	  [FE]  AssertionFailedError  	19	4	replace
12	[BUG]  [BUGGY]  out[row]  =  sum  +  v[i].length;  [CE]  cannot  find  symbol  i  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  v[i].length;  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  v[i].length;	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
13	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow.length)  {  sum  +=  dataRow[i]  *  v[i];  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
14	[BUG]  [BUGGY]    out[i]  =  sum;  [CE]  cannot  find  symbol  i  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    out[i]  =  sum;  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    out[i]  =  sum;		non-compiled	[CE]  cannot  find  symbol  i	20	None	add
15	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum  >  dataRow[i][i])  {  sum  +=  dataRow[i]  *  v[i];  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
16	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i].doubleValue();  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  dataRow[i].doubleValue();  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i].doubleValue();	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
17	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  dataRow[i]  *  v[i];  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[i]  *  v[i];	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
18	[BUG]  [BUGGY]    if(sum  >  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    if(sum  >  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    if(sum  >  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
19	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  subMatrixData[i];  }  [CE]  cannot  find  symbol  subMatrixData  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  subMatrixData[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  subMatrixData[i];  }		non-compiled	[CE]  cannot  find  symbol  subMatrixData	20	None	add
20	[BUG]  [BUGGY]    if(sum  >  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]    if(sum  >  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	    if(sum  >  0)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  dataRow[i];  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
21	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  dataRow[row].doubleValue();  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row].doubleValue();	out[row]  =  sum;  	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
22	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[i];  [CE]  cannot  find  symbol  i  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  dataRow[row]  *  v[i];  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row]  *  v[i];	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
23	[BUG]  [BUGGY]  out[row]  =  sum  +  dataRow[row].length;  [CE]  double  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  out[row]  =  sum  +  dataRow[row].length;  [BUGGY]  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	out[row]  =  sum  +  dataRow[row].length;	out[row]  =  sum;  	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
