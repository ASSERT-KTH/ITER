bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
19	[BUG] [BUGGY] out[row] = sum; [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (v.length != nCols) { throw new IllegalArgumentException("vector has wrong length"); } final double[] out = new double[v.length]; for (int row = 0; row < nRows; row++) { final double[] dataRow = data[row]; double sum = 0; for (int i = 0; i < nCols; i++) { sum += dataRow[i] * v[i]; } [BUGGY] out[row] = sum; [BUGGY] } return out; } [CLASS] RealMatrixImpl [METHOD] operate [RETURN_TYPE] double[]  double[] v [VARIABLES] boolean double[] dataRow out v double TOO_SMALL d det maxColSum sum trace double[][] d data lu out outData subMatrix subMatrixData int[] permutation selectedColumns selectedRows long serialVersionUID int col column columnCount columnDimension endColumn endRow i j nCols nRows nSum ncols parity r row rowCount rowDimension startColumn startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	replace	
20	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (v.length != nCols) { throw new IllegalArgumentException("vector has wrong length"); } final double[] out = new double[v.length]; for (int row = 0; row < nRows; row++) { final double[] dataRow = data[row]; double sum = 0; for (int i = 0; i < nCols; i++) { sum += dataRow[i] * v[i]; } [BUGGY] [BUGGY] out[row] = sum; } return out; } [CLASS] RealMatrixImpl [METHOD] operate [RETURN_TYPE] double[]  double[] v [VARIABLES] boolean double[] dataRow out v double TOO_SMALL d det maxColSum sum trace double[][] d data lu out outData subMatrix subMatrixData int[] permutation selectedColumns selectedRows long serialVersionUID int col column columnCount columnDimension endColumn endRow i j nCols nRows nSum ncols parity r row rowCount rowDimension startColumn startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	786	786	2	add	
