bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  int  nCols  =  this.getRowDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  int  nCols  =  this.getRowDimension();	      int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	8	None	replace
2	[BUG]  [BUGGY]  double  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double  nCols  =  this.getRowDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double  nCols  =  this.getRowDimension();	      int    nCols    =    this.getRowDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	8	None	replace
3	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	        out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
4	[BUG]  [BUGGY]      out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  out[row]  =  this.getRowDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        out[row]    =    this.getRowDimension();    out[row]  =  this.getRowDimension();	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
5	[BUG]  [BUGGY]      out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        out[row]    =    this.getRowDimension();    for(int  row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }	  	non-compiled	[CE]  ';'  expected	9	None	add
6	[BUG]  [BUGGY]      out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        out[row]    =    this.getRowDimension();    for(int  row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();	  	non-compiled	[CE]  ';'  expected	9	None	add
7	[BUG]  [BUGGY]      out[row]  =  this.getRowDimension();  for(row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        out[row]    =    this.getRowDimension();    for(row]  =  this.getRowDimension();  row  <  nRows;  row++)  {  out[row]  =  this.getRowDimension();  }	  	non-compiled	[CE]  not  a  statement	9	None	add
8	[BUG]  [BUGGY]      out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        out[row]    =    this.getRowDimension();    for(int  row]  =  this.getRowDimension();  row  <  nCols;  row++)  {  out[row]  =  this.getRowDimension();  }	  	non-compiled	[CE]  ';'  expected	9	None	add
9	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nCols  =  this.getColumnDimension()  +  1;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nCols  =  this.getColumnDimension()  +  1;	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	7	None	replace
10	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row;  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nCols  =  this.getColumnDimension()  +  row;	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	7	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRow  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	19	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  data[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	19	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  cannot  find  symbol  nSum  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  nSum	19	None	replace
14	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row  +  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  this.data[row  +  1];	  final    double[]    dataRow    =    this.data[row];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
15	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row  +  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row  +  1];	  final    double[]    dataRow    =    this.data[row];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
16	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row]  &  0xff;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  &  0xff;	  final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	2	None	replace
17	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row]  -  1;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  -  1;	  final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	2	None	replace
18	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][0];  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row][0];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row][0];	  final    double[]    dataRow    =    data[row][0];    	non-compiled	[CE]  incompatible  types	13	None	replace
19	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row][0];  [CE]  array  required,  but  double  found  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  v[row][0];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row][0];	  final    double[]    dataRow    =    data[row][0];    	non-compiled	[CE]  array  required,  but  double  found	13	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >=  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  v[i])  {  out[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  v[i])  {  out[i]  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    v[i])    {    out[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
24	[BUG]  [BUGGY]  int  nSum  =  this.getSumDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  this.getSumDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSumDimension();	      int    nSum    =    this.getSum();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
25	[BUG]  [BUGGY]  int  nSum  =  this.getSum(v.length);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  this.getSum(v.length);  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSum(v.length);	      int    nSum    =    this.getSum();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
26	[BUG]  [BUGGY]  int  nSum  =  data.getSum();  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  data.getSum();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  data.getSum();	      int    nSum    =    this.getSum();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	20	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	20	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	20	None	replace
30	[BUG]  [BUGGY]  int  nSum  =  this.getColumnDimension();  [CE]  cannot  find  symbol  dataRow  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  this.getColumnDimension();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getColumnDimension();	      	non-compiled	[CE]  cannot  find  symbol  dataRow	6	None	replace
31	[BUG]  [BUGGY]  double[][]  dataRows  =  v.toArray(new  double[nRows]);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  dataRows  =  v.toArray(new  double[nRows]);  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRows  =  v.toArray(new  double[nRows]);	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
32	[BUG]  [BUGGY]  double[]  dataRow  =(double[])this.getDataRow(row);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[]  dataRow  =(double[])this.getDataRow(row);  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[]  dataRow  =(double[])this.getDataRow(row);	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
33	[BUG]  [BUGGY]  int  nSum  =  v.getSelectionDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  v.getSelectionDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  v.getSelectionDimension();	      int    nSum    =    this.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
34	[BUG]  [BUGGY]  int  nSum  =  getSelectionDimension();  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  getSelectionDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  getSelectionDimension();	      int    nSum    =    this.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
35	[BUG]  [BUGGY]  int  nSum  =  this.getSelectionDimension()  +  1;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  this.getSelectionDimension()  +  1;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSelectionDimension()  +  1;	      int    nSum    =    this.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
36	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[nCols][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[][]  out  =  new  double[nCols][row];  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[nCols][row];	      double[][]    out    =    new    double[nCols][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	17	None	replace
37	[BUG]  [BUGGY]  double[][]  out  =  new  double[nRows][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  out  =  new  double[nRows][row];  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[nRows][row];	      double[][]    out    =    new    double[nCols][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	17	None	replace
38	[BUG]  [BUGGY]  double[][]  out  =  new  double[row][nCols];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  out  =  new  double[row][nCols];  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[row][nCols];	      double[][]    out    =    new    double[nCols][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	17	None	replace
39	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[row];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	4	replace
40	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[row];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[row];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	4	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  +  1];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
42	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows  +  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  +  1];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
43	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  -  1];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	4	replace
44	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows  -  1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  -  1];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	4	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[nRows  *  nCols];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
46	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows  *  nCols];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[nRows  *  nCols];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
47	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  final  double[]  dataRow  =  new  double[nRows];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  final  double[]  dataRow  =  new  double[nRows];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows];    final  double[]  dataRow  =  new  double[nRows];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	4	None	add
48	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  final  double[]  dataRow  =  new  double[NRows];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  final  double[]  dataRow  =  new  double[NRows];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows];    final  double[]  dataRow  =  new  double[NRows];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	4	None	add
49	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  final  double[]  dataRow  =  new  double[nCols];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  final  double[]  dataRow  =  new  double[nCols];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows];    final  double[]  dataRow  =  new  double[nCols];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	4	None	add
50	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[][]  out  =  new  double[v.length][row];  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[][]  out  =  new  double[v.length][row];	      double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	replace
51	[BUG]  [BUGGY]  double[][]  out  =  new  double[row][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  out  =  new  double[row][v.length];  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[row][v.length];	      double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	replace
52	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  out  =  new  double[v.length][row  +  1];  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][row  +  1];	      double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	replace
53	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  *  row;  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  v[row]  *  row;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  *  row;	  final    double[]    dataRow    =    v[row];    	non-compiled	[CE]  incompatible  types	3	None	replace
54	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xff;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  v[row]  &  0xff;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  &  0xff;	  final    double[]    dataRow    =    v[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	3	None	replace
55	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row];  final  double[]  dataRow  =  this.data[row];  [CE]  variable  dataRow  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row];  final  double[]  dataRow  =  this.data[row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    this.data[row];    final  double[]  dataRow  =  this.data[row];	  	non-compiled	[CE]  variable  dataRow  is  already  defined  in  method  operate(double[])	1	None	add
56	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row];  Final  double[]  dataRow  =  this.data[row];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row];  Final  double[]  dataRow  =  this.data[row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    this.data[row];    Final  double[]  dataRow  =  this.data[row];	  	non-compiled	[CE]  not  a  statement	1	None	add
57	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row];  static  final  double[]  dataRow  =  this.data[row];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row];  static  final  double[]  dataRow  =  this.data[row];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    this.data[row];    static  final  double[]  dataRow  =  this.data[row];	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
58	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension().doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getRowDimension().doubleValue();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getRowDimension().doubleValue();	      out[row]    =    v.doubleValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
59	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v.doubleValue();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v.doubleValue();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  ==  0)?  this.getRowDimension()  :  v.doubleValue();	      out[row]    =    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
60	[BUG]  [BUGGY]  out[row]  =(v.doubleValue()  >=  0)?  this.getRowDimension()  :  v.doubleValue();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =(v.doubleValue()  >=  0)?  this.getRowDimension()  :  v.doubleValue();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =(v.doubleValue()  >=  0)?  this.getRowDimension()  :  v.doubleValue();	      out[row]    =    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  ==  v[i])  {  out  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]!=  v[i])  {  out  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >=  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >=  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >=  v[i])  {  out  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  v[i])  {  out  +=  v[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    v[i])    {    out    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
65	[BUG]  [BUGGY]  out[row]  =  this.getColumnDimension();  [CE]  cannot  find  symbol  dataRow  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getColumnDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getColumnDimension();	      out[row]    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataRow	10	None	replace
66	[BUG]  [BUGGY]  out[row]  =  this.getRowDimension()  +  1;  [CE]  cannot  find  symbol  dataRow  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getRowDimension()  +  1;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getRowDimension()  +  1;	      out[row]    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataRow	10	None	replace
67	[BUG]  [BUGGY]  out[row]  =  this.getUpperDimension();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getUpperDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getUpperDimension();	      out[row]    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	18	4	add
69	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	18	4	add
70	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	18	None	add
71	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    For(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	non-compiled	[CE]  '.class'  expected	18	None	add
72	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	18	None	add
73	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row][1];  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row][1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row][1];	  final    double[]    dataRow    =    data[row][1];    	non-compiled	[CE]  incompatible  types	14	None	replace
74	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row][1];  [CE]  array  required,  but  double  found  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  v[row][1];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row][1];	  final    double[]    dataRow    =    data[row][1];    	non-compiled	[CE]  array  required,  but  double  found	14	None	replace
75	[BUG]  [BUGGY]      out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(int  row]  =  this.getRowDimension();  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        out[row]    =    this.getRowDimension();    for(int  row]  =  this.getRowDimension();  row  <  0;  row++)  {  out[row]  =  this.getRowDimension();  }	  	non-compiled	[CE]  ';'  expected	9	None	add
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  out[i]  *  v[i];  }  [CE]  cannot  find  symbol  dataRow  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  out[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  out[i]  *  v[i];  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  dataRow	19	None	replace
77	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  *  dataRow.length;  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  v[row]  *  dataRow.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  *  dataRow.length;	  final    double[]    dataRow    =    v[row];    	non-compiled	[CE]  incompatible  types	3	None	replace
78	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row]  *  data.length;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  v[row]  *  data.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row]  *  data.length;	  final    double[]    dataRow    =    v[row];    	non-compiled	[CE]  incompatible  types	3	None	replace
79	[BUG]  [BUGGY]  int  nSum  =  data.getSelectionDimension();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  data.getSelectionDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  data.getSelectionDimension();	      int    nSum    =    this.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
80	[BUG]  [BUGGY]  int  nSum  =  this.getSelectionDimension()  +  row;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  this.getSelectionDimension()  +  row;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSelectionDimension()  +  row;	      int    nSum    =    this.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
81	[BUG]  [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(row);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  dataRow  =(double[][])this.getDataRow(row);  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  dataRow  =(double[][])this.getDataRow(row);	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
82	[BUG]  [BUGGY]  double[][]  out  =  new  double[nRows][v.length];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  out  =  new  double[nRows][v.length];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[nRows][v.length];	      	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	6	None	replace
83	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][0];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  out  =  new  double[v.length][0];  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][0];	      double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	final  double[]  dataRow  =  new  double[data.length];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
85	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[data.length];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  new  double[data.length];	  final    double[]    dataRow    =    new    double[nRows];    	compilable	  [FE]  AssertionFailedError  	5	4	replace
86	[BUG]  [BUGGY]  out[row]  =  this.getEntryDimension();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getEntryDimension();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntryDimension();	      out[row]    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
87	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  i  =  0;  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  i  =  0;  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  i  =  0;  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	non-compiled	[CE]  not  a  statement	18	None	add
88	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  *  v.length;  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  data[row][0]  *  v.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  *  v.length;	  final    double[]    dataRow    =    data[row][0];    	non-compiled	[CE]  incompatible  types	13	None	replace
89	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  2;  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  data[row][0]  /  2;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  /  2;	  final    double[]    dataRow    =    data[row][0];    	non-compiled	[CE]  incompatible  types	13	None	replace
90	[BUG]  [BUGGY]  out[row]  =  this.getDataImpl().doubleValue();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getDataImpl().doubleValue();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getDataImpl().doubleValue();	      out[row]    =    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
91	[BUG]  [BUGGY]  out[row]  =  this.getEntry(v.length).doubleValue();  [CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getEntry(v.length).doubleValue();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(v.length).doubleValue();	      out[row]    =    v.doubleValue();    	non-compiled	[CE]  method  getEntry  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	15	None	replace
92	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][1]  +  v.length;  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  data[row][1]  +  v.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][1]  +  v.length;	  final    double[]    dataRow    =    data[row][1];    	non-compiled	[CE]  incompatible  types	14	None	replace
93	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][column];  [CE]  cannot  find  symbol  column  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  data[row][column];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][column];	  final    double[]    dataRow    =    data[row][1];    	non-compiled	[CE]  cannot  find  symbol  column	14	None	replace
94	[BUG]  [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  Final  double[]  dataRow  =  new  double[nRows];  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  new  double[nRows];  Final  double[]  dataRow  =  new  double[nRows];  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final    double[]    dataRow    =    new    double[nRows];    Final  double[]  dataRow  =  new  double[nRows];	  	non-compiled	[CE]  not  a  statement	4	None	add
95	[BUG]  [BUGGY]  int  nSum  =  this.getSum(row);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =  this.getSum(row);  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =  this.getSum(row);	      int    nSum    =    this.getSum();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
96	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][1]  +  row;  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  data[row][1]  +  row;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][1]  +  row;	  final    double[]    dataRow    =    data[row][1];    	non-compiled	[CE]  incompatible  types	14	None	replace
97	[BUG]  [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    v[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  +=  v[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	18	None	add
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i].doubleValue();  }  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i].doubleValue();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i].doubleValue();  }	      for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    *    v[i];    }    	non-compiled	[CE]  not  a  statement	20	None	replace
99	[BUG]  [BUGGY]  int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  :  0;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()  <  nCols)?  this.getSum()  :  0;	      int    nSum    =    this.getSum();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
100	[BUG]  [BUGGY]  int  nSum  =(this.getSum()  >=  0)?  this.getSum()  :  0;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =(this.getSum()  >=  0)?  this.getSum()  :  0;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSum()  >=  0)?  this.getSum()  :  0;	      int    nSum    =    this.getSum();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
101	[BUG]  [BUGGY]  double[][]  data  =(double[][])this.getDataRef();  [CE]  cannot  find  symbol  dataRow  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  data  =(double[][])this.getDataRef();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])this.getDataRef();	      	non-compiled	[CE]  cannot  find  symbol  dataRow	6	None	replace
102	[BUG]  [BUGGY]  double[][]  data  =(double[][])this.getDataRef().clone();  [CE]  cannot  find  symbol  dataRow  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  data  =(double[][])this.getDataRef().clone();  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  data  =(double[][])this.getDataRef().clone();	      	non-compiled	[CE]  cannot  find  symbol  dataRow	6	None	replace
103	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.data[row]  *  v.length;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  this.data[row]  *  v.length;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  this.data[row]  *  v.length;	  final    double[]    dataRow    =    this.data[row];    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	2	None	replace
104	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  v.length).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getEntry(row,  v.length).doubleValue();  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row,  v.length).doubleValue();	      out[row]    =    v.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
105	[BUG]  [BUGGY]  out[row]  =  this.getEntry(row,  v.length);  [CE]  cannot  find  symbol  dataRow  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  out[row]  =  this.getEntry(row,  v.length);  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	out[row]  =  this.getEntry(row,  v.length);	      out[row]    =    v.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  dataRow	15	None	replace
106	[BUG]  [BUGGY]  final  double[]  dataRow  =  data[row][0]  -  1;  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  data[row][0]  -  1;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  data[row][0]  -  1;	  final    double[]    dataRow    =    data[row][0];    	non-compiled	[CE]  incompatible  types	13	None	replace
107	[BUG]  [BUGGY]  final  double[]  dataRow  =  v[row].data;  [CE]  double  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  final  double[]  dataRow  =  v[row].data;  [BUGGY]    double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	final  double[]  dataRow  =  v[row].data;	  final    double[]    dataRow    =    v[row];    	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	replace
108	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	        out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
109	[BUG]  [BUGGY]      out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[row]  =  this.getRowDimension();  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	add	        out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	9	4	add
111	[BUG]  [BUGGY]      out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]      out[row]  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	        out[row]    =    this.getRowDimension();    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  this.getRowDimension();  }	  	compilable	  [FE]  AssertionFailedError  	9	4	add
112	[BUG]  [BUGGY]  int  nSum  =(this.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  0;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =(this.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  0;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSelectionDimension()  ==  0)?  this.getSelectionDimension()  :  0;	      int    nSum    =    this.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
113	[BUG]  [BUGGY]  int  nSum  =(this.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =(this.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  0;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSelectionDimension()!=  0)?  this.getSelectionDimension()  :  0;	      int    nSum    =    this.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
114	[BUG]  [BUGGY]  int  nSum  =(this.getSelectionDimension()  >=  0)?  this.getSelectionDimension()  :  0;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  int  nSum  =(this.getSelectionDimension()  >=  0)?  this.getSelectionDimension()  :  0;  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	int  nSum  =(this.getSelectionDimension()  >=  0)?  this.getSelectionDimension()  :  0;	      int    nSum    =    this.getSelectionDimension();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
115	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][row  *  row];  [CE]  variable  out  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {    [BUGGY]  double[][]  out  =  new  double[v.length][row  *  row];  [BUGGY]    final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	781	781	2	replace	double[][]  out  =  new  double[v.length][row  *  row];	      double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(double[])	16	None	replace
