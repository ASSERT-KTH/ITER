bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +  1;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
2	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +  1;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getColumnDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
4	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getColumnDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
5	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
6	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
7	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  null)?  this.getRowDimension()  :  0;  [CE]  incomparable  types:  int  and  <null>  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  null)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()!=  null)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  incomparable  types:  int  and  <null>	1	None	replace
8	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  null)?  this.getRowDimension()  :  0;  [CE]  incomparable  types:  int  and  <null>  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  null)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()  ==  null)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  incomparable  types:  int  and  <null>	1	None	replace
9	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  getRowDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  getRowDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
10	[BUG]  [BUGGY]  final  int  nRows  =  getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  getRowDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  getRowDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
11	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *  v.length;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
12	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  v.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  v.length;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v.length  >  0)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(v.length  >  0)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
14	[BUG]  [BUGGY]  final  int  nRows  =(v.length  >  0)?  this.getRowDimension()  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v.length  >  0)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(v.length  >  0)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
15	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v);  [CE]  method  getRowDimension  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension(v);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension(v);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  method  getRowDimension  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	1	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
17	[BUG]  [BUGGY]  final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  0;  [FE]  AssertionFailedError  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
18	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  1;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
19	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  1;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v  ==  null)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(v  ==  null)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
21	[BUG]  [BUGGY]  final  int  nRows  =(v  ==  null)?  this.getRowDimension()  :  0;  [FE]  AssertionFailedError  [FE]                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v  ==  null)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(v  ==  null)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
22	[BUG]  [BUGGY]  static  final  int  nRows  =  this.getRowDimension();  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  static  final  int  nRows  =  this.getRowDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	static  final  int  nRows  =  this.getRowDimension();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  ==  0?  this.getRowDimension()  :  0);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  ==  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||(v.length  ==  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
25	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  0;  [FE]  AssertionFailedError  [FE]                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
26	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  >  0?  this.getRowDimension()  :  0);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  >  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||(v.length  >  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
27	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
28	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  0;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
29	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  2;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *  2;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
30	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  2;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  2;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
31	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  2;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +  2;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
32	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  2;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +  2;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  v.length)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(this.getRowDimension()!=  v.length)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
34	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  v.length)?  this.getRowDimension()  :  0;  [FE]  AssertionFailedError  [FE]                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  v.length)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()!=  v.length)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v.length  <  2)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(v.length  <  2)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
36	[BUG]  [BUGGY]  final  int  nRows  =(v.length  <  2)?  this.getRowDimension()  :  0;  [FE]  AssertionFailedError  [FE]                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v.length  <  2)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(v.length  <  2)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	4	replace
37	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||  v.length  ==  0?  this.getRowDimension()  :  0;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||  v.length  ==  0?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||  v.length  ==  0?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
38	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  null)?  this.getRowDimension()  :  v.length;  [CE]  incomparable  types:  int  and  <null>  [FE]                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  null)?  this.getRowDimension()  :  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()!=  null)?  this.getRowDimension()  :  v.length;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  incomparable  types:  int  and  <null>	1	None	replace
39	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  v.length;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
40	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  v.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  v.length;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
41	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *(v.length  -  1);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *(v.length  -  1);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
42	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *(v.length  -  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *(v.length  -  1);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *(v.length  -  1);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
43	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  null)?  this.getRowDimension()  :  v.length;  [CE]  incomparable  types:  int  and  <null>  [FE]                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  null)?  this.getRowDimension()  :  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()  ==  null)?  this.getRowDimension()  :  v.length;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  incomparable  types:  int  and  <null>	1	None	replace
44	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  this.getColumnDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *  this.getColumnDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
45	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  this.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  this.getColumnDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  this.getColumnDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
46	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length!=  0?  this.getRowDimension()  :  0);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length!=  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||(v.length!=  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  v.length)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(this.getRowDimension()  ==  v.length)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
48	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  v.length)?  this.getRowDimension()  :  0;  [FE]  AssertionFailedError  [FE]                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  v.length)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()  ==  v.length)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
49	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  >=  0?  this.getRowDimension()  :  0);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  >=  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||(v.length  >=  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
50	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimensionIndex();  [CE]  cannot  find  symbol  [FE]                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimensionIndex();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimensionIndex();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
51	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >  0)?  this.getRowDimension()  :  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >  0)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  >  0)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
52	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  >  0)?  this.getRowDimension()  :  0;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  >  0)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||(v.length  >  0)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
53	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length);  [CE]  method  getRowDimension  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;  [FE]                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension(v.length);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  method  getRowDimension  in  class  RealMatrixImpl  cannot  be  applied  to  given  types;	1	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getColumnDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  >  0?  this.getColumnDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
55	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getColumnDimension()  :  0;  [FE]  AssertionFailedError  [FE]                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getColumnDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  >  0?  this.getColumnDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
56	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  this.getRowDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  this.getRowDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
57	[BUG]  [BUGGY]  final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  this.getRowDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(v.length  <  1)?  this.getRowDimension()  :  this.getRowDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
58	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  ==  1?  this.getRowDimension()  :  0);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  ==  1?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||(v.length  ==  1?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
59	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getRowDimension()  :  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  v.length;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
61	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  v.length;  [FE]  AssertionFailedError  [FE]                                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()  ==  0)?  this.getRowDimension()  :  v.length;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  AssertionFailedError  	1	2	replace
62	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *  1;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
63	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  1;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
64	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  [0];  [CE]  array  required,  but  int  found  [FE]                                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  [0];  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  [0];	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  array  required,  but  int  found	1	None	replace
65	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  v.length;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
66	[BUG]  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  v.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  v.length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =(this.getRowDimension()!=  0)?  this.getRowDimension()  :  v.length;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
67	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  -1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  -1;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
68	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  -1;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  -1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  >  0?  this.getRowDimension()  :  -1;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
69	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  <  1?  this.getRowDimension()  :  0);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  <  1?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||(v.length  <  1?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
70	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  <  2)?  this.getRowDimension()  :  0;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  ||(v.length  <  2)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  ||(v.length  <  2)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	1	None	replace
71	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  nRows  [FE]                                                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	  	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol  nRows	1	None	replace
72	[BUG]  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  nCols  =  this.getColumnDimension();		non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	2	None	add
73	[BUG]  [BUGGY]    int  nRows  =  this.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(double[])  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    int  nRows  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    int  nRows  =  this.getRowDimension();		non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(double[])	2	None	add
74	[BUG]  [BUGGY]    int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    int  nCols  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    int  nCols  =  this.getColumnDimension();		non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	2	None	add
75	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
76	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
77	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
78	[BUG]  [BUGGY]    Double[]  v  =  this.getRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    Double[]  v  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    Double[]  v  =  this.getRowDimension();		non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	2	None	add
79	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
80	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
81	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
82	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
83	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  ==  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  ==  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  ==  nCols)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
84	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
85	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
86	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length!=  nCols)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
87	[BUG]  [BUGGY]    final  int  nRows  =  this.getRowDimension();  public  double[]  operate(double[]  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  nRows  =  this.getRowDimension();  public  double[]  operate(double[]  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  nRows  =  this.getRowDimension();  public  double[]  operate(double[]  v)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
88	[BUG]  [BUGGY]    System.arraycopy(v,  0,  out,  0,  v.length);  [CE]  cannot  find  symbol  out  [FE]                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    System.arraycopy(v,  0,  out,  0,  v.length);  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    System.arraycopy(v,  0,  out,  0,  v.length);		non-compiled	[CE]  cannot  find  symbol  out	2	None	add
89	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
90	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
91	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
92	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  nRows)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  nRows)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  nRows)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
93	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
94	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >=  nCols)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >=  nCols)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
95	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
96	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
97	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
98	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
99	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
100	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
101	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
102	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
103	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
104	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
105	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  out  =  new  double[v.length];  System.arraycopy(this.getRowDimension(),  0,  out,  0,  v.length);  }  [CE]  incompatible  types  [FE]                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  out  =  new  double[v.length];  System.arraycopy(this.getRowDimension(),  0,  out,  0,  v.length);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  out  =  new  double[v.length];  System.arraycopy(this.getRowDimension(),  0,  out,  0,  v.length);  }		non-compiled	[CE]  incompatible  types	2	None	add
106	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
107	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
108	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
109	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  double[]  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
110	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  for(int  j  =  0;  j  <  v.length;  j++)  {  out[j]  =  data[j].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  for(int  j  =  0;  j  <  v.length;  j++)  {  out[j]  =  data[j].doubleValue();  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  for(int  j  =  0;  j  <  v.length;  j++)  {  out[j]  =  data[j].doubleValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
111	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  [CE]  illegal  start  of  expression  [FE]                                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  nRows  =  this.getRowDimension();		non-compiled	[CE]  illegal  start  of  expression	2	None	add
112	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getRowDimension();  for(int  i  =  0;  i  <  v.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getRowDimension();  for(int  i  =  0;  i  <  v.length;  i++)  {  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getRowDimension();  for(int  i  =  0;  i  <  v.length;  i++)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
113	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
114	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  out  =  new  double[v.length];  System.arraycopy(this.getRowDimension(),  0,  out,  0,  v.length);  [CE]  illegal  start  of  expression  [FE]                                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  out  =  new  double[v.length];  System.arraycopy(this.getRowDimension(),  0,  out,  0,  v.length);  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  out  =  new  double[v.length];  System.arraycopy(this.getRowDimension(),  0,  out,  0,  v.length);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
115	[BUG]  [BUGGY]    final  int  nSum  =  this.getSum();  [CE]  cannot  find  symbol  [FE]                                                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  nSum  =  this.getSum();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  nSum  =  this.getSum();		non-compiled	[CE]  cannot  find  symbol	2	None	add
116	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  for(int  j  =  0;  j  <  v.length;  j++)  {  v[j]  =  data[j].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  for(int  j  =  0;  j  <  v.length;  j++)  {  v[j]  =  data[j].doubleValue();  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  for(int  j  =  0;  j  <  v.length;  j++)  {  v[j]  =  data[j].doubleValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
117	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getDataDimension();  for(int  i  =  0;  i  <  v.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]                                                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getDataDimension();  for(int  i  =  0;  i  <  v.length;  i++)  {  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getDataDimension();  for(int  i  =  0;  i  <  v.length;  i++)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
118	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getDataDimension();  for(int  j  =  0;  j  <  this.getDataDimension();  j++)  {  [CE]  illegal  start  of  expression  [FE]                                                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getDataDimension();  for(int  j  =  0;  j  <  this.getDataDimension();  j++)  {  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  double[][]  outData  =(double[][])this.getDataDimension();  for(int  j  =  0;  j  <  this.getDataDimension();  j++)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
119	[BUG]  [BUGGY]    Double[]  v  =(Double[])this.getRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                                                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    Double[]  v  =(Double[])this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    Double[]  v  =(Double[])this.getRowDimension();		non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	2	None	add
120	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row  [CE]  unclosed  string  literal  [FE]                                                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row		non-compiled	[CE]  unclosed  string  literal	2	None	add
121	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  4;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *  4;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
122	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  4;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  4;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
123	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  2)?  this.getRowDimension()  :  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  2)?  this.getRowDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  <  2)?  this.getRowDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
124	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  getRowCount();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  getRowCount();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  getRowCount();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
125	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  |  this.getRowDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  |  this.getRowDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
126	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  |  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  |  this.getRowDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  |  this.getRowDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
127	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +(v.length  <  1?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
128	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1?  this.getRowDimension()  :  0);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  <  1?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
129	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +(v.length  >  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
130	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >  0?  this.getRowDimension()  :  0);  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  >  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
131	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  getColumnDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *  getColumnDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
132	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  getColumnDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  getColumnDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
133	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  4;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +  4;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
134	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  4;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +  4;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
135	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  |  this.getColumnDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  |  this.getColumnDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
136	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  |  this.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  |  this.getColumnDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  |  this.getColumnDimension();	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
137	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *(v.length  }?  this.getRowDimension()  :  0);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *(v.length  }?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *(v.length  }?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  ')'  expected	1	None	replace
138	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimensionSize();  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimensionSize();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimensionSize();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
139	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension().length;  [CE]  int  cannot  be  dereferenced  [FE]                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension().length;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension().length;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	replace
140	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getColumnDimension()  :  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getColumnDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getColumnDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
141	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  {  0?  this.getRowDimension()  :  0);  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  {  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  {  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  ')'  expected	1	None	replace
142	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getRowDimension()  :  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getRowDimension()  :  1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  <  1)?  this.getRowDimension()  :  1;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
143	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0;  [CE]  incompatible  types  [FE]                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  >  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  >  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  incompatible  types	1	None	replace
144	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  ==  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +(v.length  ==  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
145	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  ==  0?  this.getRowDimension()  :  0);  [FE]  ArrayIndexOutOfBoundsException  [FE]                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  ==  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  ==  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
146	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >=  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +(v.length  >=  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
147	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >=  0?  this.getRowDimension()  :  0);  [FE]  ArrayIndexOutOfBoundsException  [FE]                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >=  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  >=  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
148	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  2)?  this.getColumnDimension()  :  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  2)?  this.getColumnDimension()  :  0;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  <  2)?  this.getColumnDimension()  :  0;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
149	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimensionImpl();  [CE]  cannot  find  symbol  [FE]                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimensionImpl();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimensionImpl();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
150	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimensionCount();  [CE]  cannot  find  symbol  [FE]                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimensionCount();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimensionCount();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
151	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  3;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *  3;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
152	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  3;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  3;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
153	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >>  0?  this.getRowDimension()  :  0);  [CE]  incompatible  types  [FE]                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >>  0?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  >>  0?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  incompatible  types	1	None	replace
154	[BUG]  [BUGGY]  final  int  nRows  =  this.getUpperDimension();  [CE]  cannot  find  symbol  [FE]                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getUpperDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getUpperDimension();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
155	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimensionOfSupported();  [CE]  cannot  find  symbol  [FE]                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimensionOfSupported();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimensionOfSupported();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
156	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >  0)?  this.getRowDimension()  :  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  >  0)?  this.getRowDimension()  :  1;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  >  0)?  this.getRowDimension()  :  1;	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
157	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  3;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +  3;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
158	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  3;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +  3;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
159	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  2?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  +(v.length  <  2?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
160	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  2?  this.getRowDimension()  :  0);  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +(v.length  <  2?  this.getRowDimension()  :  0);  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  +(v.length  <  2?  this.getRowDimension()  :  0);	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	2	replace
161	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  8;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	final  int  nRows  =  this.getRowDimension()  *  8;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
162	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  8;  [FE]  ArrayIndexOutOfBoundsException  [FE]                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  final  int  nRows  =  this.getRowDimension()  *  8;  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	final  int  nRows  =  this.getRowDimension()  *  8;	final  int  nRows  =  this.getRowDimension();  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	4	replace
163	[BUG]  [BUGGY]    final  int  v  =  this.getRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  v  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  v  =  this.getRowDimension();		non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	2	None	add
164	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vRows  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	    final  int  vRows  =  this.getRowDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
165	[BUG]  [BUGGY]    final  int  vRows  =  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vRows  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  vRows  =  this.getRowDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
166	[BUG]  [BUGGY]    if(v  ==  null)  {  for(int  i  =  0;  i  <  v.length;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][i]);  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  for(int  i  =  0;  i  <  v.length;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  for(int  i  =  0;  i  <  v.length;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
167	[BUG]  [BUGGY]    Double[]  v  =  this.getDoubleDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    Double[]  v  =  this.getDoubleDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    Double[]  v  =  this.getDoubleDimension();		non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	2	None	add
168	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  total  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  total  +=  dataRow[i]  *  v[i];  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  total  +=  dataRow[i]  *  v[i];  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
169	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vCount  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	    final  int  vCount  =  this.getColumnDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
170	[BUG]  [BUGGY]    final  int  vCount  =  this.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vCount  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  vCount  =  this.getColumnDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
171	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vCount  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	    final  int  vCount  =  this.getRowDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
172	[BUG]  [BUGGY]    final  int  vCount  =  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vCount  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  vCount  =  this.getRowDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
173	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
174	[BUG]  [BUGGY]    final  int  v  =  this.getColumnDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  v  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  v  =  this.getColumnDimension();		non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	2	None	add
175	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vCols  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	    final  int  vCols  =  this.getColumnDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
176	[BUG]  [BUGGY]    final  int  vCols  =  this.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vCols  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  vCols  =  this.getColumnDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
177	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  maxColSum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  maxColSum  +=  dataRow[i]  *  v[i];  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  maxColSum  +=  dataRow[i]  *  v[i];  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
178	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  super.operat(v[i]);  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  super.operat(v[i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  super.operat(v[i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
179	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
180	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  v[i]  *  v[i];  }		non-compiled	[CE]  not  a  statement	2	None	add
181	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vDimension  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	add	    final  int  vDimension  =  this.getColumnDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
182	[BUG]  [BUGGY]    final  int  vDimension  =  this.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  vDimension  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  vDimension  =  this.getColumnDimension();		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
183	[BUG]  [BUGGY]    Double  v  =  this.getDoubleDimension();  [CE]  variable  v  is  already  defined  in  method  operate(double[])  [FE]                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    Double  v  =  this.getDoubleDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    Double  v  =  this.getDoubleDimension();		non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(double[])	2	None	add
184	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
185	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
186	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
187	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][		non-compiled	[CE]  illegal  start  of  expression	2	None	add
188	[BUG]  [BUGGY]    final  int  v.length  =  this.getColumnDimension();  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  v.length  =  this.getColumnDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  v.length  =  this.getColumnDimension();		non-compiled	[CE]  ';'  expected	2	None	add
189	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
190	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  dataRows,  0,  v.length);  }  [CE]  illegal  start  of  expression  [FE]                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  dataRows,  0,  v.length);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  dataRows,  0,  v.length);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
191	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
192	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  super.operat(v[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  super.operat(v[i][i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  super.operat(v[i][i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
193	[BUG]  [BUGGY]    final  int  v.length  =  this.getRowDimension();  [CE]  ';'  expected  [FE]                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    final  int  v.length  =  this.getRowDimension();  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    final  int  v.length  =  this.getRowDimension();		non-compiled	[CE]  ';'  expected	2	None	add
194	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
195	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
196	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  nRows)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
197	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i][i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
198	[BUG]  [BUGGY]    if(v  ==  null)  {  for(int  i  =  0;  i  <  v.length;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }  [CE]  illegal  start  of  expression  [FE]                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  for(int  i  =  0;  i  <  v.length;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  for(int  i  =  0;  i  <  v.length;  i++)  {  System.arraycopy(v,  0,  out[i],  0,  v[i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
199	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
200	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
201	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i]  *  v[i]);  }  [CE]  illegal  start  of  expression  [FE]                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i]  *  v[i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i]  *  v[i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
202	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  total  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  total  +=  data[i]  *  v[i];  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  total  +=  data[i]  *  v[i];  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
203	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
204	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i].length);  }  [CE]  illegal  start  of  expression  [FE]                                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i].length);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  System.arraycopy(v,  0,  out[i][i],  0,  v[i].length);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
205	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
206	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  output(v[i]);  }  [CE]  illegal  start  of  expression  [FE]                                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  output(v[i]);  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  output(v[i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
207	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
208	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  *  v[i];  }		non-compiled	[CE]  not  a  statement	2	None	add
209	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
210	[BUG]  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
211	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
212	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
213	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows!=  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
214	[BUG]  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
215	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  nRows  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol  nRows	1	None	replace
216	[BUG]  [BUGGY]  if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(nRows!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(nRows!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(nRows!=  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
217	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
218	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i];  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i];  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i];  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
219	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
220	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  unclosed  string  literal	1	None	replace
221	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  *  v[i];  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  *  v[i];  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  not  a  statement	1	None	replace
222	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  =  v[i];  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  =  v[i];  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  =  v[i];  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
223	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
224	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
225	[BUG]  [BUGGY]  if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
226	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
227	[BUG]  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
228	[BUG]  [BUGGY]  if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v  ==  null)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
229	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(nRows  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
230	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i].doubleValue();  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i].doubleValue();  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
231	[BUG]  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  nRows  [FE]                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol  nRows	1	None	replace
232	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "Invalid  row  [CE]  unclosed  string  literal  [FE]                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "Invalid  row  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "Invalid  row	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  unclosed  string  literal	1	None	replace
233	[BUG]  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i];  }  [CE]  illegal  start  of  expression  [FE]                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i];  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  =  v[i];  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
234	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
235	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
236	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  System.arraycopy(v,  0,  vRows,  0,  vRows  [CE]  ')'  expected  [FE]                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  System.arraycopy(v,  0,  vRows,  0,  vRows  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  System.arraycopy(v,  0,  vRows,  0,  vRows	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  ')'  expected	1	None	replace
237	[BUG]  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
238	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  System.arraycopy(v,  0,  v[i]);  }  [CE]  illegal  start  of  expression  [FE]                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  System.arraycopy(v,  0,  v[i]);  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  System.arraycopy(v,  0,  v[i]);  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
239	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  *  v[i];  }  [CE]  not  a  statement  [FE]                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  *  v[i];  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  *  v[i];  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  not  a  statement	1	None	replace
240	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  =  v[i].doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  =  v[i].doubleValue();  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  i++)  {  v[i]  =  v[i].doubleValue();  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
241	[BUG]  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
242	[BUG]  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
243	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  System.arraycopy(v,  0,  v,  0,  this.getRowDimension());  }  [CE]  cannot  find  symbol  nRows  [FE]                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  System.arraycopy(v,  0,  v,  0,  this.getRowDimension());  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  System.arraycopy(v,  0,  v,  0,  this.getRowDimension());  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  cannot  find  symbol  nRows	1	None	replace
244	[BUG]  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length!=  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  unclosed  string  literal	1	None	replace
245	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
246	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  +=  this.getColumnDimension()  [CE]  ';'  expected  [FE]                                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  +=  this.getColumnDimension()  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  for(int  i  =  0;  i  <  v.length;  ++i)  {  v[i]  +=  this.getColumnDimension()	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  ';'  expected	1	None	replace
247	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  [CE]  illegal  start  of  expression  [FE]                                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
248	[BUG]  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows  [CE]  ';'  expected  [FE]                                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]  if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	if(v.length  ==  0)  {  final  int  nRows  =  this.getRowDimension();  }  else  {  final  int  nRows  =  this.getRowDimension();  for(int  i  =  0;  i  <  nRows	final  int  nRows  =  this.getRowDimension();  	non-compiled	[CE]  ';'  expected	1	None	replace
249	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
250	[BUG]  [BUGGY]    if(v.length  ==  0)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v.length  ==  0)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v.length  ==  0)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
251	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
252	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
253	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
254	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getColumnDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
255	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
256	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
257	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
258	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  ++i)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  ++i)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  ++i)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
259	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
260	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
261	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
262	[BUG]  [BUGGY]    if(v.length  >  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v.length  >  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v.length  >  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
263	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  ++i)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  ++i)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  ++i)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
264	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i]  >  this.getRowDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
265	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
266	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
267	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
268	[BUG]  [BUGGY]    if(v.length  >  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v.length  >  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v.length  >  0)  {  final  int  nRows  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
269	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
270	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "		non-compiled	[CE]  unclosed  string  literal	2	None	add
271	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
272	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  v.length;  i++)  {  if(v[i][i]  >  this.getColumnDimension())  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
273	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [CE]  unclosed  string  literal  [FE]                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length		non-compiled	[CE]  unclosed  string  literal	2	None	add
274	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
275	[BUG]  [BUGGY]    if(v.length  ==  0)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    if(v.length  ==  0)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    if(v.length  ==  0)  {  final  int  nCols  =  this.getColumnDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
276	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [CE]  unclosed  string  literal  [FE]                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getColumnDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length		non-compiled	[CE]  unclosed  string  literal	2	None	add
277	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "		non-compiled	[CE]  unclosed  string  literal	2	None	add
278	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [CE]  illegal  start  of  expression  [FE]                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
279	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [CE]  unclosed  string  literal  [FE]                                                                ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length		non-compiled	[CE]  unclosed  string  literal	2	None	add
280	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [CE]  unclosed  string  literal  [FE]                                                                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length		non-compiled	[CE]  unclosed  string  literal	2	None	add
281	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [CE]  unclosed  string  literal  [FE]                                                                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length		non-compiled	[CE]  unclosed  string  literal	2	None	add
282	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                                                                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length!=  0)  {  throw  new  IllegalArgumentException( "		non-compiled	[CE]  unclosed  string  literal	2	None	add
283	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row  [CE]  unclosed  string  literal  [FE]                                                                        ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row		non-compiled	[CE]  unclosed  string  literal	2	None	add
284	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row  [CE]  unclosed  string  literal  [FE]                                                                          ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0;  i  <  this.getRowDimension();  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  throw  new  IllegalArgumentException( "Invalid  row		non-compiled	[CE]  unclosed  string  literal	2	None	add
285	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  return  new  double[  [CE]  illegal  start  of  expression  [FE]                                                                            ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  return  new  double[  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  >  0)  {  return  new  double[		non-compiled	[CE]  illegal  start  of  expression	2	None	add
286	[BUG]  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                                                                              ArrayIndexOutOfBoundsException  [CONTEXT]  public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  [BUGGY]    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	774	774	2	replace	    for(int  i  =  0,  nCols  =  this.getColumnDimension();  i  <  nCols;  i++)  {  final  int  v  =  this.getRowDimension();  if(v.length  ==  0)  {  throw  new  IllegalArgumentException( "		non-compiled	[CE]  unclosed  string  literal	2	None	add
