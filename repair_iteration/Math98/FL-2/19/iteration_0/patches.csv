bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	add	    for(int  i  =  0;  i  <  nRows;  i++)  {  sum.add(data[row][i].multiply(v[i]));  }		compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	2	add
2	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum.add(data[row][i].multiply(v[i]));  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  sum.add(data[row][i].multiply(v[i]));  }		compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	2	add
3	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	add	    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.add(data[row][i].multiply(v[i]));  }		compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	add
4	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.add(data[row][i].multiply(v[i]));  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.add(data[row][i].multiply(v[i]));  }		compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	add
5	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum[i]  =  sum.add(data[row][i].multiply(v[i]));  }  [CE]  array  required,  but  BigDecimal  found  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  sum[i]  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  sum[i]  =  sum.add(data[row][i].multiply(v[i]));  }		non-compiled	[CE]  array  required,  but  BigDecimal  found	38	None	add
6	[BUG]  [BUGGY]    out[row][i]  =  sum.add(data[row][i].multiply(v[i]));  [CE]  cannot  find  symbol  i  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    out[row][i]  =  sum.add(data[row][i].multiply(v[i]));  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    out[row][i]  =  sum.add(data[row][i].multiply(v[i]));		non-compiled	[CE]  cannot  find  symbol  i	38	None	add
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.subtract(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	add	    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.subtract(data[row][i].multiply(v[i]));  }		compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	add
8	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.subtract(data[row][i].multiply(v[i]));  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.subtract(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  out[i]  =  sum.subtract(data[row][i].multiply(v[i]));  }		compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	add
9	[BUG]  [BUGGY]  out[row]  =  sum.add(data[row][i].multiply(v[i]));  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum.add(data[row][i].multiply(v[i]));  [BUGGY]  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	out[row]  =  sum.add(data[row][i].multiply(v[i]));	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	37	None	replace
10	[BUG]  [BUGGY]  out[row]  =  sum.copyOf(data[row][i].multiply(v[i]));  [CE]  cannot  find  symbol  i  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum.copyOf(data[row][i].multiply(v[i]));  [BUGGY]  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	out[row]  =  sum.copyOf(data[row][i].multiply(v[i]));	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	37	None	replace
11	[BUG]  [BUGGY]  out[row]  =  sum.multiply(v[i]);  [CE]  cannot  find  symbol  i  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum.multiply(v[i]);  [BUGGY]  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	out[row]  =  sum.multiply(v[i]);	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	37	None	replace
12	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  ZERO;  [BUGGY]  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	add	out[row]  =  ZERO;	out[row]  =  sum;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	4	replace
13	[BUG]  [BUGGY]  out[row]  =  ZERO;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  ZERO;  [BUGGY]  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	out[row]  =  ZERO;	out[row]  =  sum;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	4	replace
14	[BUG]  [BUGGY]  out[row]  =  v.toBigDecimal();  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  v.toBigDecimal();  [BUGGY]  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	out[row]  =  v.toBigDecimal();	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol	37	None	replace
15	[BUG]  [BUGGY]    out[i]  =  sum.add(data[row][i].multiply(v[i]));  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    out[i]  =  sum.add(data[row][i].multiply(v[i]));  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    out[i]  =  sum.add(data[row][i].multiply(v[i]));		non-compiled	[CE]  cannot  find  symbol  i	38	None	add
16	[BUG]  [BUGGY]    BigDecimal[][]  out  =  new  BigDecimal[sum.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    BigDecimal[][]  out  =  new  BigDecimal[sum.length][row];  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    BigDecimal[][]  out  =  new  BigDecimal[sum.length][row];		non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	38	None	add
17	[BUG]  [BUGGY]    BigDecimal[][]  out  =  new  BigDecimal[sum.length][data.length];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    BigDecimal[][]  out  =  new  BigDecimal[sum.length][data.length];  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    BigDecimal[][]  out  =  new  BigDecimal[sum.length][data.length];		non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	38	None	add
18	[BUG]  [BUGGY]    BigDecimal[][]  out  =  new  BigDecimal[data.length][row];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    BigDecimal[][]  out  =  new  BigDecimal[data.length][row];  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    BigDecimal[][]  out  =  new  BigDecimal[data.length][row];		non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	38	None	add
19	[BUG]  [BUGGY]    BigDecimal[][]  out  =  new  BigDecimal[nRows][sum.length];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    BigDecimal[][]  out  =  new  BigDecimal[nRows][sum.length];  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    BigDecimal[][]  out  =  new  BigDecimal[nRows][sum.length];		non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	38	None	add
20	[BUG]  [BUGGY]    if(sum!=  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum.add(data[row][i].multiply(v[i]));  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    if(sum!=  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    if(sum!=  null)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum.add(data[row][i].multiply(v[i]));  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
21	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum.equals(data[row][i]))  {  out[i]  =  data[i].multiply(v[i]);  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum.equals(data[row][i]))  {  out[i]  =  data[i].multiply(v[i]);  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum.equals(data[row][i]))  {  out[i]  =  data[i].multiply(v[i]);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
22	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  instanceof  BigDecimal[])  {  out[i]  =(BigDecimal[])v[i].multiply(v[i]  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  instanceof  BigDecimal[])  {  out[i]  =(BigDecimal[])v[i].multiply(v[i]  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  instanceof  BigDecimal[])  {  out[i]  =(BigDecimal[])v[i].multiply(v[i]		non-compiled	[CE]  ')'  expected	38	None	add
23	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum.equals(data[row][i]))  {  return  out;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum.equals(data[row][i]))  {  return  out;  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  if(sum.equals(data[row][i]))  {  return  out;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
24	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  instanceof  BigDecimal[])  {  out[i]  =(BigDecimal[])v[i];  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  instanceof  BigDecimal[])  {  out[i]  =(BigDecimal[])v[i];  }  [BUGGY]  out[row]  =  sum;  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  instanceof  BigDecimal[])  {  out[i]  =(BigDecimal[])v[i];  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
25	[BUG]  [BUGGY]  out[row]  =  sum.multiply(data[row][i].multiply(v[i]));  [CE]  cannot  find  symbol  i  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  throw  new  IllegalArgumentException( "vector  has  wrong  length ");  }  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  [BUGGY]  out[row]  =  sum.multiply(data[row][i].multiply(v[i]));  [BUGGY]  }  return  out;  }  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	997	997	2	replace	out[row]  =  sum.multiply(data[row][i].multiply(v[i]));	out[row]  =  sum;  	non-compiled	[CE]  cannot  find  symbol  i	37	None	replace
