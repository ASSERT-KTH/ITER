bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  BigDecimal[]  v  =  this.getColumnDimension();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  this.getColumnDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  this.getColumnDimension();	      BigDecimal[]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	3	None	replace
2	[BUG]  [BUGGY]  BigDecimal[]  v  =  this.getSelectedRowDimension();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  this.getSelectedRowDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  this.getSelectedRowDimension();	      BigDecimal[]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	3	None	replace
3	[BUG]  [BUGGY]  BigDecimal[]  v  =  this.getDataDimension();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  this.getDataDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  this.getDataDimension();	      BigDecimal[]    v    =    this.getRowDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	3	None	replace
4	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.getColumnDimension()  ];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.getColumnDimension()  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[this.getColumnDimension()  ];	      BigDecimal[]    out    =    new    BigDecimal[this.getRowDimension()    ];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	5	None	replace
5	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.getRowDimension()  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.getRowDimension()  +  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[this.getRowDimension()  +  1];	      BigDecimal[]    out    =    new    BigDecimal[this.getRowDimension()    ];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	5	None	replace
6	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getRowDimension(),  v.length  ];  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getRowDimension(),  v.length  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[this.getRowDimension(),  v.length  ];	      BigDecimal[][]    out    =    new    BigDecimal[this.getRowDimension()    ];    	non-compiled	[CE]  ']'  expected	14	None	replace
7	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length  ];  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[v.length  ];	      BigDecimal[][]    out    =    new    BigDecimal[this.getRowDimension()    ];    	non-compiled	[CE]  incompatible  types	14	None	replace
8	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension(),  v.length  ];  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension(),  v.length  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension(),  v.length  ];	      BigDecimal[][]    out    =    new    BigDecimal[this.getColumnDimension()    ];    	non-compiled	[CE]  ']'  expected	11	None	replace
9	[BUG]  [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getRowDimension().length];  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getRowDimension().length];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  new  BigDecimal[this.getRowDimension().length];	      BigDecimal[]    v    =    new    BigDecimal[this.getColumnDimension().length];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	13	None	replace
10	[BUG]  [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  +  1];  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  +  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  +  1];	      BigDecimal[]    v    =    new    BigDecimal[this.getColumnDimension().length];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	13	None	replace
11	[BUG]  [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  -  1];  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  -  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  -  1];	      BigDecimal[]    v    =    new    BigDecimal[this.getColumnDimension().length];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	13	None	replace
12	[BUG]  [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  *  2];  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  *  2];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  new  BigDecimal[this.getColumnDimension().length  *  2];	      BigDecimal[]    v    =    new    BigDecimal[this.getColumnDimension().length];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	13	None	replace
13	[BUG]  [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getEntryDimension()  ];  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getEntryDimension()  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  new  BigDecimal[this.getEntryDimension()  ];	      BigDecimal[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	17	None	replace
14	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  final  int  nRows  =  this.getColumnDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getColumnDimension();  final  int  nRows  =  this.getColumnDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getColumnDimension();    final  int  nRows  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])	8	None	add
15	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  Final  int  nRows  =  this.getColumnDimension();  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getColumnDimension();  Final  int  nRows  =  this.getColumnDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getColumnDimension();    Final  int  nRows  =  this.getColumnDimension();	  	non-compiled	[CE]  not  a  statement	8	None	add
16	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  int  nRows  =  this.getColumnDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getColumnDimension();  int  nRows  =  this.getColumnDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getColumnDimension();    int  nRows  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])	8	None	add
17	[BUG]  [BUGGY]  int  nCols  =  this.getRowDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  int  nCols  =  this.getRowDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	int  nCols  =  this.getRowDimension();	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	16	None	replace
18	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  1;  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  int  nCols  =  this.getColumnDimension()  +  1;  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	int  nCols  =  this.getColumnDimension()  +  1;	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	16	None	replace
19	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nCols  =  this.getColumnDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  nCols  =  this.getColumnDimension();	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	16	None	replace
20	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	add	int  nRows  =  this.getRowDimension()  +  1;	      int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
21	[BUG]  [BUGGY]  int  nRows  =  this.getRowDimension()  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	int  nRows  =  this.getRowDimension()  +  1;	      int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	4	replace
22	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  int  nRows  =  this.getColumnDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	add	int  nRows  =  this.getColumnDimension();	      int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
23	[BUG]  [BUGGY]  int  nRows  =  this.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  int  nRows  =  this.getColumnDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	int  nRows  =  this.getColumnDimension();	      int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
24	[BUG]  [BUGGY]  final  int  rowDimension  =  this.getRowDimension();  [CE]  cannot  find  symbol  nRows  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  rowDimension  =  this.getRowDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  rowDimension  =  this.getRowDimension();	      final    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  nRows	2	None	replace
25	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length  -  1];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length  -  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[v.length  -  1];	      BigDecimal[]    out    =    new    BigDecimal[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	1	None	replace
26	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length  +  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[v.length  +  1];	      BigDecimal[]    out    =    new    BigDecimal[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	1	None	replace
27	[BUG]  [BUGGY]  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  BigDecimal[]  out  =  new  BigDecimal[v.length];	      BigDecimal[]    out    =    new    BigDecimal[v.length];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	1	None	replace
28	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.size()  ];  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.size()  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[this.size()  ];	      BigDecimal[]    out    =    new    BigDecimal[size()    ];    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
29	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[size()  -  1];  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[size()  -  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[size()  -  1];	      BigDecimal[]    out    =    new    BigDecimal[size()    ];    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
30	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[size()  +  1];  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[size()  +  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[size()  +  1];	      BigDecimal[]    out    =    new    BigDecimal[size()    ];    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
31	[BUG]  [BUGGY]  BigDecimal[]  v  =  this.getDataInput();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  this.getDataInput();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  this.getDataInput();	      BigDecimal[]    v    =    this.getDataRef();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	18	None	replace
32	[BUG]  [BUGGY]  BigDecimal[]  v  =  this.getDataInt();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  this.getDataInt();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  this.getDataInt();	      BigDecimal[]    v    =    this.getDataRef();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	18	None	replace
33	[BUG]  [BUGGY]  nRows  =  this.getRowDimension();  [CE]  cannot  find  symbol  nRows  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  nRows  =  this.getRowDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	nRows  =  this.getRowDimension();	  final    int    nRows    =    this.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  nRows	9	None	replace
34	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][this.getRowDimension()  ];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][this.getRowDimension()  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[v.length][this.getRowDimension()  ];	      BigDecimal[][]    out    =    new    BigDecimal[v.length][this.getColumnDimension()    ];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	12	None	replace
35	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][this.getColumnDimension()  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[v.length][this.getColumnDimension()  +  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[v.length][this.getColumnDimension()  +  1];	      BigDecimal[][]    out    =    new    BigDecimal[v.length][this.getColumnDimension()    ];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	12	None	replace
36	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length][this.getRowDimension()  ];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[v.length][this.getRowDimension()  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[v.length][this.getRowDimension()  ];	      BigDecimal[][]    out    =    new    BigDecimal[v.length][this.getColumnDimension()    ];    	non-compiled	[CE]  incompatible  types	12	None	replace
37	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  final  int  nRows  =  this.getRowDimension()  +  1;  [CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  final  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getRowDimension()    +    1;    final  int  nRows  =  this.getRowDimension()  +  1;	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])	6	None	add
38	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  int  nRows  =  this.getRowDimension()  +  1;  [CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getRowDimension()    +    1;    int  nRows  =  this.getRowDimension()  +  1;	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])	6	None	add
39	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  Final  int  nRows  =  this.getRowDimension()  +  1;  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  Final  int  nRows  =  this.getRowDimension()  +  1;  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getRowDimension()    +    1;    Final  int  nRows  =  this.getRowDimension()  +  1;	  	non-compiled	[CE]  not  a  statement	6	None	add
40	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  BigDecimal[]  v  =  this.getRowDimension()  +  1;  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  BigDecimal[]  v  =  this.getRowDimension()  +  1;  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getRowDimension()    +    1;    BigDecimal[]  v  =  this.getRowDimension()  +  1;	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	6	None	add
41	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length,  v.length);  [CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length,  v.length);  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  nRows  =  this.getRowDimension(v.length,  v.length);	  final    int    nRows    =    this.getRowDimension(v.length);    	non-compiled	[CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;	10	None	replace
42	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v,  v.length);  [CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension(v,  v.length);  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  nRows  =  this.getRowDimension(v,  v.length);	  final    int    nRows    =    this.getRowDimension(v.length);    	non-compiled	[CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;	10	None	replace
43	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length  +  1);  [CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length  +  1);  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  nRows  =  this.getRowDimension(v.length  +  1);	  final    int    nRows    =    this.getRowDimension(v.length);    	non-compiled	[CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;	10	None	replace
44	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v);  [CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension(v);  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  nRows  =  this.getRowDimension(v);	  final    int    nRows    =    this.getRowDimension(v.length);    	non-compiled	[CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;	10	None	replace
45	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.getEntryDimension()  ];  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.getEntryDimension()  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[this.getEntryDimension()  ];	      BigDecimal[]    out    =    new    BigDecimal[this.getRowDimension()    ];    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
46	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension()  +  1];  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension()  +  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension()  +  1];	      BigDecimal[][]    out    =    new    BigDecimal[this.getColumnDimension()    ];    	non-compiled	[CE]  incompatible  types	11	None	replace
47	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  BigDecimal[][]  out  =  this.getRowDimension()  +  1;  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension()  +  1;  BigDecimal[][]  out  =  this.getRowDimension()  +  1;  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getRowDimension()    +    1;    BigDecimal[][]  out  =  this.getRowDimension()  +  1;	  	non-compiled	[CE]  incompatible  types	6	None	add
48	[BUG]  [BUGGY]  BigDecimal[]  v  =  this.getData();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  this.getData();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  this.getData();	      BigDecimal[]    v    =    this.getDataRef();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	18	None	replace
49	[BUG]  [BUGGY]  BigDecimal[]  v  =  this.getDataImpl();  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  this.getDataImpl();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  this.getDataImpl();	      BigDecimal[]    v    =    this.getDataRef();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	18	None	replace
50	[BUG]  [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getEntryDimension().length];  [CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  v  =  new  BigDecimal[this.getEntryDimension().length];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  v  =  new  BigDecimal[this.getEntryDimension().length];	      BigDecimal[]    v    =    this.getEntryDimension();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  operate(BigDecimal[])	17	None	replace
51	[BUG]  [BUGGY]  static  final  int  nRows  =  this.getRowDimension();  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  static  final  int  nRows  =  this.getRowDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	static  final  int  nRows  =  this.getRowDimension();	  final    int    nRows    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  getRowDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	add	final  int  nRows  =  getRowDimension();	  final    int    nRows    =    this.getColumnDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
53	[BUG]  [BUGGY]  final  int  nRows  =  getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  getRowDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  nRows  =  getRowDimension();	  final    int    nRows    =    this.getColumnDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	replace
54	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  final  int  nRows  =  this.getEntryDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getColumnDimension();  final  int  nRows  =  this.getEntryDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getColumnDimension();    final  int  nRows  =  this.getEntryDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])	8	None	add
55	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  final  int  nRows  =  this.getReferenceDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getColumnDimension();  final  int  nRows  =  this.getReferenceDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getColumnDimension();    final  int  nRows  =  this.getReferenceDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])	8	None	add
56	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length,  data.length);  [CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length,  data.length);  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  nRows  =  this.getRowDimension(v.length,  data.length);	  final    int    nRows    =    this.getRowDimension(v.length);    	non-compiled	[CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;	10	None	replace
57	[BUG]  [BUGGY]  final  int  vRows  =  this.getRowDimension();  [CE]  cannot  find  symbol  nRows  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  vRows  =  this.getRowDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  vRows  =  this.getRowDimension();	      final    int    nRows    =    this.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  nRows	2	None	replace
58	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getRowDimension()  +  1];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getRowDimension()  +  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[this.getRowDimension()  +  1];	      BigDecimal[][]    out    =    new    BigDecimal[this.getRowDimension()    ];    	non-compiled	[CE]  incompatible  types	14	None	replace
59	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getEntryDimension()  ];  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getEntryDimension()  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[this.getEntryDimension()  ];	      BigDecimal[][]    out    =    new    BigDecimal[this.getRowDimension()    ];    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
60	[BUG]  [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.getColumnDimension()  +  1];  [CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[]  out  =  new  BigDecimal[this.getColumnDimension()  +  1];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[]  out  =  new  BigDecimal[this.getColumnDimension()  +  1];	      BigDecimal[]    out    =    new    BigDecimal[this.getRowDimension()    ];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  operate(BigDecimal[])	5	None	replace
61	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length  +  1,  v.length);  [CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getRowDimension(v.length  +  1,  v.length);  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final  int  nRows  =  this.getRowDimension(v.length  +  1,  v.length);	  final    int    nRows    =    this.getRowDimension(v.length);    	non-compiled	[CE]  method  getRowDimension  in  class  BigMatrixImpl  cannot  be  applied  to  given  types;	10	None	replace
62	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  final  int  nRows  =  this.getSecondDimension();  [CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  final  int  nRows  =  this.getColumnDimension();  final  int  nRows  =  this.getSecondDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	final    int    nRows    =    this.getColumnDimension();    final  int  nRows  =  this.getSecondDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  operate(BigDecimal[])	8	None	add
63	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  Integer  nRows  =  this.getRowDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	add	Integer  nRows  =  this.getRowDimension();	      int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
64	[BUG]  [BUGGY]  Integer  nRows  =  this.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  Integer  nRows  =  this.getRowDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	Integer  nRows  =  this.getRowDimension();	      int    nRows    =    this.getRowDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
65	[BUG]  [BUGGY]  if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getRowDimension();  }  [CE]  cannot  find  symbol  nRows  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getRowDimension();  }  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getRowDimension();  }	  final    int    nRows    =    this.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  nRows	9	None	replace
66	[BUG]  [BUGGY]  if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getColumnDimension();  }  [CE]  cannot  find  symbol  nRows  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getColumnDimension();  }  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getColumnDimension();  }	  final    int    nRows    =    this.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  nRows	9	None	replace
67	[BUG]  [BUGGY]  if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getRowDimension();  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getRowDimension();  [BUGGY]    final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	if(v.length!=  this.getRowDimension())  {  final  int  nRows  =  this.getRowDimension();	  final    int    nRows    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension().length  ];  [CE]  int  cannot  be  dereferenced  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension().length  ];  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	BigDecimal[][]  out  =  new  BigDecimal[this.getColumnDimension().length  ];	      BigDecimal[][]    out    =    new    BigDecimal[this.getColumnDimension()    ];    	non-compiled	[CE]  int  cannot  be  dereferenced	11	None	replace
69	[BUG]  [BUGGY]  Integer  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  BigDecimal[]  operate(BigDecimal[]  v)  throws  IllegalArgumentException  {  if  (v.length  !=  this.getColumnDimension())  {  throw  new  IllegalArgumentException(   "vector  has  wrong  length   ");  }    [BUGGY]  Integer  nCols  =  this.getColumnDimension();  [BUGGY]    final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  final  BigDecimal[]  out  =  new  BigDecimal[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  BigDecimal  sum  =  ZERO;  for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  =  sum.add(data[row][i].multiply(v[i]));  }  out[row]  =  sum;  }  return  out;  [CLASS]  BigMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  BigDecimal[]  BigDecimal[]  v  [VARIABLES]  boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  	projects/Math98/src/java/org/apache/commons/math/linear/BigMatrixImpl.java	0.4082482904638631	989	989	2	replace	Integer  nCols  =  this.getColumnDimension();	      int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(BigDecimal[])	16	None	replace
