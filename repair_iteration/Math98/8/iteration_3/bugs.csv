bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  nCols  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nCols  =  this.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nCols  =  this.getRowDimension();	  final    int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension()  +  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nCols  =  this.getColumnDimension()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nCols  =  this.getColumnDimension()  +  1;	  final    int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  final  int  nCols  =  dataRow.length;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nCols  =  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nCols  =  dataRow.length;	  final    int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  For(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    For(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  '.class'  expected	65	None	add
7	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
8	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
9	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i	  	non-compiled	[CE]  ']'  expected	41	None	add
10	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
11	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v	  	non-compiled	[CE]  ';'  expected	41	None	add
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRows.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length][row];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[][]  out  =  new  double[v.length][row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[][]  out  =  new  double[v.length][row];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
14	[BUG]  [BUGGY]  double[][]  out  =  new  double[data.length][row];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[data.length][row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[data.length][row];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
15	[BUG]  [BUGGY]  double[][]  out  =  new  double[nRows][row];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[nRows][row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[nRows][row];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
16	[BUG]  [BUGGY]  total  +=  dataRow[row]  *  v[i];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  total  +=  dataRow[row]  *  v[i];  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	total  +=  dataRow[row]  *  v[i];	  total    +=    dataRow[i]    *    v[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  total  +=  dataRow[i]  *  v[i].length;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  total  +=  dataRow[i]  *  v[i].length;  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	total  +=  dataRow[i]  *  v[i].length;	  total    +=    dataRow[i]    *    v[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  total  -=  dataRow[i]  *  v[i];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  total  -=  dataRow[i]  *  v[i];  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	total  -=  dataRow[i]  *  v[i];	  total    +=    dataRow[i]    *    v[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  /  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  dataRow.length  /  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  dataRow.length  /  1;	  int    nCols    =    dataRow.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
20	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  -  1  +  row;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  dataRow.length  -  1  +  row;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  dataRow.length  -  1  +  row;	  int    nCols    =    dataRow.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
21	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRow(row);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  this.getDataRow(row);  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  this.getDataRow(row);	  final    double[]    dataRow    =    dataRow.getDataRow(row);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.dataRow.getDataRow(row);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  this.dataRow.getDataRow(row);  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  this.dataRow.getDataRow(row);	  final    double[]    dataRow    =    dataRow.getDataRow(row);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.getDataRow(row);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  v.getDataRow(row);  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  v.getDataRow(row);	  final    double[]    dataRow    =    dataRow.getDataRow(row);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  final  double[]  dataRow  =  dataRow.getDataRow(row,  v.length);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  dataRow.getDataRow(row,  v.length);  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  dataRow.getDataRow(row,  v.length);	  final    double[]    dataRow    =    dataRow.getDataRow(row);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    data.length;    i++)    {    for(int  i  =  0;  i  <  data.length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  For(int  i  =  0;  i  <  data.length;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  For(int  i  =  0;  i  <  data.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    data.length;    i++)    {    For(int  i  =  0;  i  <  data.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	53	None	add
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  for(int  i  =  0;  i  <  dataset.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  for(int  i  =  0;  i  <  dataset.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    data.length;    i++)    {    for(int  i  =  0;  i  <  dataset.length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  for(int  i  =  0;  i  >=  data.length;  i++)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  for(int  i  =  0;  i  >=  data.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    data.length;    i++)    {    for(int  i  =  0;  i  >=  data.length;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  int  i  =  0;  i  <  data.length;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  int  i  =  0;  i  <  data.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    data.length;    i++)    {    int  i  =  0;  i  <  data.length;  i++)  {	  	non-compiled	[CE]  >  expected	53	None	add
30	[BUG]  [BUGGY]  final  int  nRows  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nRows  =  this.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nRows  =  this.getRowDimension();	  final    int    nRows    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
31	[BUG]  [BUGGY]  final  int  nRows  =  this.getDataRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nRows  =  this.getDataRowDimension()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nRows  =  this.getDataRowDimension()  +  1;	  final    int    nRows    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
32	[BUG]  [BUGGY]  final  int  nRows  =  dataRow.length;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nRows  =  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nRows  =  dataRow.length;	  final    int    nRows    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
33	[BUG]  [BUGGY]  final  double[]  dataRows  =  v.getDataRowDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRows  =  v.getDataRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRows  =  v.getDataRowDimension();	  final    double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
34	[BUG]  [BUGGY]  final  int[]  dataRows  =  this.getDataRowDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int[]  dataRows  =  this.getDataRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int[]  dataRows  =  this.getDataRowDimension();	  final    double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
35	[BUG]  [BUGGY]  final  double[]  dataRows  =  this.getDataRowDimension(v);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRows  =  this.getDataRowDimension(v);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRows  =  this.getDataRowDimension(v);	  final    double[]    dataRows    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  dataRow.length;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  dataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  dataRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    (int    i    =    0;    i    <    dataRow.length;    i++)    {    	non-compiled	[CE]  >  expected	83	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double  i  =  0;  i  <  dataRow.length;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double  i  =  0;  i  <  dataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  double  i  =  0;  i  <  dataRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    (int    i    =    0;    i    <    dataRow.length;    i++)    {    	non-compiled	[CE]  >  expected	83	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  (int  i  =  0;  i  <  dataRow.length;  i++)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  (int  i  =  0;  i  <  dataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  (int  i  =  0;  i  <  dataRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    (int    i    =    0;    i    <    dataRow.length;    i++)    {    	non-compiled	[CE]  ')'  expected	83	None	replace
39	[BUG]  [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  i  =  0;  i  <  nRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  >  expected	76	None	replace
40	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][0];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[][]  out  =  new  double[dataRow.length][0];	  final    double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
41	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][row  +  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][row  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[][]  out  =  new  double[dataRow.length][row  +  1];	  final    double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
42	[BUG]  [BUGGY]  total  +=  dataRow.length  -  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  total  +=  dataRow.length  -  1;  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	total  +=  dataRow.length  -  1;	  total    +=    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  total  -=  dataRow.length;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  total  -=  dataRow.length;  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	total  -=  dataRow.length;	  total    +=    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  total  +=  dataRow.length  *  v.length;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  total  +=  dataRow.length  *  v.length;  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	total  +=  dataRow.length  *  v.length;	  total    +=    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  int  i  =  0;  i  <  v.length;  i++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  int  i  =  0;  i  <  v.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  int  i  =  0;  i  <  v.length;  i++)  {	  for(int    i    =    0;    i    <    v.length;    i++)    {    int    i    =    0;    i    <    v.length;    i++)    {    	non-compiled	[CE]  >  expected	30	None	replace
46	[BUG]  [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  this.getRowDimension()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  this.getRowDimension()  +  1;	  int    nCols    =    this.getColumnDimension()    +    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  double  nCols  =  this.getRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double  nCols  =  this.getRowDimension()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double  nCols  =  this.getRowDimension()  +  1;	  double    nCols    =    this.getColumnDimension()    +    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	62	4	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	62	4	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	62	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  v[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  v[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  v[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	62	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	66	4	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	66	4	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	66	4	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	66	4	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	66	None	replace
57	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  +  2;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  dataRow.length  +  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  dataRow.length  +  2;	  int    nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  *  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  dataRow.length  *  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  dataRow.length  *  1;	  int    nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
59	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
60	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
61	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
62	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
63	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i	  	non-compiled	[CE]  ']'  expected	43	None	add
64	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	59	None	replace
65	[BUG]  [BUGGY]  double  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	59	None	replace
66	[BUG]  [BUGGY]  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	59	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  For(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  For(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    For(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  for(int  i  =  0;  i  <  datasetRow.length  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  for(int  i  =  0;  i  <  datasetRow.length  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    for(int  i  =  0;  i  <  datasetRow.length  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  for(int  i  =  0;  i  >=  dataRow.length  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  for(int  i  =  0;  i  >=  dataRow.length  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    for(int  i  =  0;  i  >=  dataRow.length  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  for(int  i  =  0;  i  <  DataRow.length  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  for(int  i  =  0;  i  <  DataRow.length  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    for(int  i  =  0;  i  <  DataRow.length  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
72	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  For(int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	For(int  i  =  0;  i  <  nRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    For(int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  '.class'  expected	11	None	replace
73	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nCols;  i++)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  For(int  i  =  0;  i  <  nCols;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	For(int  i  =  0;  i  <  nCols;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    For(int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  '.class'  expected	11	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRows.length;  i++)  {  v[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
77	[BUG]  [BUGGY]  Double  nCols  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  Double  nCols  =  this.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	Double  nCols  =  this.getRowDimension();	  Double    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
78	[BUG]  [BUGGY]  Double  nCols  =  dataRow.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  Double  nCols  =  dataRow.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	Double  nCols  =  dataRow.getColumnDimension();	  Double    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
79	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[v.length][1];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[][]  out  =  new  double[v.length][1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[][]  out  =  new  double[v.length][1];	  final    double[][]    out    =    new    double[dataRow.length][1];    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
80	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][2];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][2];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[][]  out  =  new  double[dataRow.length][2];	  final    double[][]    out    =    new    double[dataRow.length][1];    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
81	[BUG]  [BUGGY]  dataRow.length  =  v.length;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  dataRow.length  =  v.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	dataRow.length  =  v.length;	  dataRow.length    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
82	[BUG]  [BUGGY]  dataRow.length  =  row;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  dataRow.length  =  row;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	dataRow.length  =  row;	  dataRow.length    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
83	[BUG]  [BUGGY]  dataRow.length  -=  dataRow.length;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  dataRow.length  -=  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	dataRow.length  -=  dataRow.length;	  dataRow.length    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
84	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  dataRow.length;  i++)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  For(int  i  =  0;  i  <  dataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	For(int  i  =  0;  i  <  dataRow.length;  i++)  {	  for(int    i    =    0;    i    <    v.length;    i++)    {    For(int    i    =    0;    i    <    v.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	28	None	replace
85	[BUG]  [BUGGY]  final  double[]  v  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  v  =  this.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  v  =  this.getRowDimension();	  final    double[]    v    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
86	[BUG]  [BUGGY]  final  double[]  v  =  dataRow.getDataRowDimension();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  v  =  dataRow.getDataRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  v  =  dataRow.getDataRowDimension();	  final    double[]    v    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
87	[BUG]  [BUGGY]  final  double[]  v  =  this.getDataRowDimension(row);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  v  =  this.getDataRowDimension(row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  v  =  this.getDataRowDimension(row);	  final    double[]    v    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
88	[BUG]  [BUGGY]  nCols  =  v.length  -  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  v.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  v.length  -  1;	  nCols    =    v.length;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
89	[BUG]  [BUGGY]  nCols  =  v.length  +  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  v.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  v.length  +  1;	  nCols    =    v.length;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
90	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  2;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nRows  +  2;  i++)  {	  for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows  +  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  2;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows  +  2;  i++)  {	  for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	replace
92	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nCols  +  1;  i++)  {	  for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols  +  1;  i++)  {	  for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	replace
94	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  3;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nRows  +  3;  i++)  {	  for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows  +  3;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  3;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows  +  3;  i++)  {	  for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	32	4	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  FOR(int  i  =  0;  i  <  v.length;  i++)  {  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  FOR(int  i  =  0;  i  <  v.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  FOR(int  i  =  0;  i  <  v.length;  i++)  {	  for(int    i    =    0;    i    <    v.length;    i++)    {    FOR(int    i    =    0;    i    <    v.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	73	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  sum  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    dataRows.length;    i++)    {    sum    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
98	[BUG]  [BUGGY]  int  nSum  =  dataRow.length  -  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nSum  =  dataRow.length  -  1;  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nSum  =  dataRow.length  -  1;	  int    nSum    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
99	[BUG]  [BUGGY]  double  nSum  =  dataRow.length;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double  nSum  =  dataRow.length;  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double  nSum  =  dataRow.length;	  int    nSum    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
100	[BUG]  [BUGGY]  int  nSum  =  dataRow.length  +  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nSum  =  dataRow.length  +  1;  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nSum  =  dataRow.length  +  1;	  int    nSum    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i]  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i]  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i]	  	non-compiled	[CE]  ';'  expected	63	None	add
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  [CE]  cannot  find  symbol  dataRows  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRows.length;  i++)  {	  for(int    i    =    0;    i    <    nRows.length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  dataRows	33	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i].length  *  v[i];  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i].length  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i].length  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
106	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][0];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[v.length][0];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[v.length][0];	  double[][]    out    =    new    double[v.length][1];    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
107	[BUG]  [BUGGY]  double[][]  out  =  new  double[data.length][1];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[data.length][1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[data.length][1];	  double[][]    out    =    new    double[v.length][1];    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
109	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.getDataRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  v.getDataRowDimension()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  v.getDataRowDimension()  +  1;	  final    double[]    dataRow    =    v.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	64	4	replace
111	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	64	4	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]!=  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]!=  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	64	4	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]!=  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]!=  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]!=  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	64	4	replace
114	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
116	[BUG]  [BUGGY]  double  nCols  =  dataRow.length  -  1;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double  nCols  =  dataRow.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double  nCols  =  dataRow.length  -  1;	  double    nCols    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
117	[BUG]  [BUGGY]  double  nCols  =  dataRow.length  +  1;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double  nCols  =  dataRow.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double  nCols  =  dataRow.length  +  1;	  double    nCols    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
118	[BUG]  [BUGGY]  double  nCols  =  dataRow.length  -  2;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double  nCols  =  dataRow.length  -  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double  nCols  =  dataRow.length  -  2;	  double    nCols    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
119	[BUG]  [BUGGY]  nCols  =  data[row].length;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  data[row].length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  data[row].length;	  nCols    =    data.length;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
120	[BUG]  [BUGGY]  nCols  =  data[row];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  data[row];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  data[row];	  nCols    =    data.length;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  v  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length;  i++)  {  v  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRow.length;  i++)  {  v  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    data.length;    i++)    {    v    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    for(int  i  =  0;  i  <  nRows  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  For(int  i  =  0;  i  <  nRows  +  1;  i++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  For(int  i  =  0;  i  <  nRows  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    For(int  i  =  0;  i  <  nRows  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	31	None	add
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  for(int  i  =  0;  i  >=  nRows  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  for(int  i  =  0;  i  >=  nRows  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    for(int  i  =  0;  i  >=  nRows  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  int  i  =  0;  i  <  nRows  +  1;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  int  i  =  0;  i  <  nRows  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    int  i  =  0;  i  <  nRows  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	31	None	add
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  TOO_SMALL)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  TOO_SMALL)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    maxColSum)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	60	4	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  TOO_SMALL)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  TOO_SMALL)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  TOO_SMALL)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    maxColSum)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	60	4	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  maxColSum  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    maxColSum)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  maxColSum	60	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  MATRIX)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  MATRIX  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  MATRIX)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  MATRIX)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    maxColSum)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  MATRIX	60	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length  -  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  data.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    data.length;    i++)    {    	compilable	  [FE]  AssertionFailedError  	54	4	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length  -  1;  i++)  {  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length  -  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  data.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    data.length;    i++)    {    	compilable	  [FE]  AssertionFailedError  	54	4	replace
132	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v.length);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(v.length);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(v.length);	  final    double[]    dataRow    =    this.getDataRowDimension(v);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
133	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(dataRow);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(dataRow);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(dataRow);	  final    double[]    dataRow    =    this.getDataRowDimension(v);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
134	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(row);	  final    double[]    dataRow    =    this.getDataRowDimension(v);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
135	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  2;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  dataRow.length  +  2;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  2;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRow.length  +  2;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
137	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  3;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  dataRow.length  +  3;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  3;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  3;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRow.length  +  3;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
139	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  For(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	For(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  For(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  '.class'  expected	4	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  datasetRow.length;  i++)  {  [CE]  cannot  find  symbol  datasetRow  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  datasetRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  datasetRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    for(int    i    =    0;    i    <    datasetRow.length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  datasetRow	18	None	replace
141	[BUG]  [BUGGY]  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  if(v.length    ==    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	90	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    data.length;    i++)    {    sum    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
143	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  /  2;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  dataRow.length  /  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  dataRow.length  /  2;	  int    nCols    =    dataRow.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
144	[BUG]  [BUGGY]  int  nCols  =  dataRow.length  -  4;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  dataRow.length  -  4;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  dataRow.length  -  4;	  int    nCols    =    dataRow.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
145	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][columnDimension];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][columnDimension];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[][]  out  =  new  double[dataRow.length][columnDimension];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
146	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  +  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[dataRow.length][columnDimension  +  1];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
147	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][columnDimension];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[v.length][columnDimension];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[v.length][columnDimension];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }	  if(v.length    ==    nCols)    {    for(int    i    =    0;    i    <    nRows;    ++i)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
149	[BUG]  [BUGGY]  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  i  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	if(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }	  if(v.length    ==    nCols)    {    for(int    i    =    0;    i    <    nRows;    ++i)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	91	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRows.length;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRows.length;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }	  if(v.length    ==    nCols)    {    for(int    i    =    0;    i    <    nRows;    ++i)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
151	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][2];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[v.length][2];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[v.length][2];	  double[][]    out    =    new    double[dataRow.length][2];    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
152	[BUG]  [BUGGY]  int  i  =  0;  i  <  dataRow.length;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  i  =  0;  i  <  dataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  i  =  0;  i  <  dataRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    int    i    =    0;    i    <    dataRow.length;    i++)    {    	non-compiled	[CE]  >  expected	82	None	replace
153	[BUG]  [BUGGY]  nCols  =  dataRow.length  +  2;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  dataRow.length  +  2;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  dataRow.length  +  2;	  nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
154	[BUG]  [BUGGY]  nCols  =  dataRow.length  +  sum;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  dataRow.length  +  sum;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  dataRow.length  +  sum;	  nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
155	[BUG]  [BUGGY]  final  double[]  vRow  =  this.getRowDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  vRow  =  this.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  vRow  =  this.getRowDimension();	  final    double[]    vRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
156	[BUG]  [BUGGY]  final  double[]  vRow  =  dataRow.getDataRowDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  vRow  =  dataRow.getDataRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  vRow  =  dataRow.getDataRowDimension();	  final    double[]    vRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  v.length;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  v.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  v.length;  i++)  {	  for(int    i    =    0;    i    <    v.length;    i++)    {    (int    i    =    0;    i    <    v.length;    i++)    {    	non-compiled	[CE]  >  expected	74	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double  v  =  0;  i  <  v.length;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  double  v  =  0;  i  <  v.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  double  v  =  0;  i  <  v.length;  i++)  {	  for(int    i    =    0;    i    <    v.length;    i++)    {    (int    i    =    0;    i    <    v.length;    i++)    {    	non-compiled	[CE]  >  expected	74	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  (int  i  =  0;  i  <  v.length;  i++)  {  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  (int  i  =  0;  i  <  v.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  (int  i  =  0;  i  <  v.length;  i++)  {	  for(int    i    =    0;    i    <    v.length;    i++)    {    (int    i    =    0;    i    <    v.length;    i++)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
160	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  *  dataRow.length;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  this.getColumnDimension()  *  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  this.getColumnDimension()  *  dataRow.length;	  int    nCols    =    this.getColumnDimension()    +    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
161	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  dataRow.length  -  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  dataRow.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  this.getColumnDimension()  +  dataRow.length  -  1;	  int    nCols    =    this.getColumnDimension()    +    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
162	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  this.getColumnDimension()  +  row;	  int    nCols    =    this.getColumnDimension()    +    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
165	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
166	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  for(int  i  =  0;  i  <  row;  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  for(int  i  =  0;  i  <  row;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    for(int  i  =  0;  i  <  row;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
167	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  For(int  i  =  0;  i  <  row;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  For(int  i  =  0;  i  <  row;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    For(int  i  =  0;  i  <  row;  i++)  {	  	non-compiled	[CE]  '.class'  expected	94	None	add
168	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  for(int  i  =  0;  i  >=  row;  i++)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  for(int  i  =  0;  i  >=  row;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    for(int  i  =  0;  i  >=  row;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
169	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  for(int  i  =  0;  i  <  row);  i++)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  for(int  i  =  0;  i  <  row);  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    for(int  i  =  0;  i  <  row);  i++)  {	  	non-compiled	[CE]  ';'  expected	94	None	add
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  DataRow.length;  i++)  {  [CE]  cannot  find  symbol  DataRow  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  DataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  DataRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    for(int    i    =    0;    i    <    DataRow.length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  DataRow	20	None	replace
171	[BUG]  [BUGGY]  int  nCols  =  data.length  -  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  data.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  data.length  -  1;	  int    nCols    =    data.length;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
172	[BUG]  [BUGGY]  int  nCols  =  data.length  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  data.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  data.length  +  1;	  int    nCols    =    data.length;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  final  int  i  =  0;  i  <  nRows;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  final  int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  final  int  i  =  0;  i  <  nRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    (int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  >  expected	77	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  final  double  i  =  0;  i  <  nRows;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  final  double  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  final  double  i  =  0;  i  <  nRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    (int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  >  expected	77	None	replace
175	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][v.length];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][v.length];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[][]  out  =  new  double[dataRow.length][v.length];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
176	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][dataRow.length];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[v.length][dataRow.length];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[v.length][dataRow.length];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
177	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][v.length  -  1];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[dataRow.length][v.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[dataRow.length][v.length  -  1];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
178	[BUG]  [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  v);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  this.getDataRowDimension(row,  v);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  this.getDataRowDimension(row,  v);	  final    double[]    dataRow    =    this.getDataRowDimension(v);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
179	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  data[i]  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v[i]    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  int  i  =  0;  i  <  nRows;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  int  i  =  0;  i  <  nRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  >  expected	76	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  int  i  =  0;  i  <  nRows;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  int  i  =  0;  i  <  nRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  >  expected	76	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
184	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  (int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  (int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    (int  i  =  0;  i  <  dataRow.length  +  1;  i++)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
185	[BUG]  [BUGGY]  final  double[]  vRow  =  this.getDataRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  vRow  =  this.getDataRowDimension()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  vRow  =  this.getDataRowDimension()  +  1;	  final    double[]    vRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
186	[BUG]  [BUGGY]  final  double[]  vRow  =  this.getDataRowDimension(v);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  vRow  =  this.getDataRowDimension(v);  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  vRow  =  this.getDataRowDimension(v);	  final    double[]    vRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
187	[BUG]  [BUGGY]  final  double[]  v  =  this.getDataDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  v  =  this.getDataDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  v  =  this.getDataDimension();	  final    double[]    v    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  [CE]  cannot  find  symbol  dataRows  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    for(int    i    =    0;    i    <    nRows);    i++)    {    	non-compiled	[CE]  cannot  find  symbol  dataRows	12	None	replace
189	[BUG]  [BUGGY]  final  int  nRows  =  this.getDataRowDimension()  +  row;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nRows  =  this.getDataRowDimension()  +  row;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nRows  =  this.getDataRowDimension()  +  row;	  final    int    nRows    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  int  i  =  0;  i  <  dataRow.length;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  int  i  =  0;  i  <  dataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  int  i  =  0;  i  <  dataRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    int    i    =    0;    i    <    dataRow.length;    i++)    {    	non-compiled	[CE]  >  expected	82	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row.length;  i++)  {  int  i  =  0;  i  <  dataRow.length;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row.length;  i++)  {  int  i  =  0;  i  <  dataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  row.length;  i++)  {  int  i  =  0;  i  <  dataRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    int    i    =    0;    i    <    dataRow.length;    i++)    {    	non-compiled	[CE]  >  expected	82	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row.length;  i++)  {  (int  i  =  0;  i  <  dataRow.length;  i++)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row.length;  i++)  {  (int  i  =  0;  i  <  dataRow.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  row.length;  i++)  {  (int  i  =  0;  i  <  dataRow.length;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    (int    i    =    0;    i    <    dataRow.length;    i++)    {    	non-compiled	[CE]  ')'  expected	83	None	replace
193	[BUG]  [BUGGY]  int  i  =  0;  i  <  dataRows.length;  i++)  {  v  +=  data[i]  *  v[i];  }  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  i  =  0;  i  <  dataRows.length;  i++)  {  v  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  i  =  0;  i  <  dataRows.length;  i++)  {  v  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    dataRows.length;    i++)    {    v    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	78	None	replace
194	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][3];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[dataRow.length][3];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[dataRow.length][3];	  double[][]    out    =    new    double[dataRow.length][2];    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	43	4	add
196	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	43	4	add
197	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	43	None	add
198	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	43	None	add
199	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i	  	non-compiled	[CE]  ']'  expected	43	None	add
200	[BUG]  [BUGGY]  while(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  while(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	while(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  if(v.length    ==    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	90	None	replace
201	[BUG]  [BUGGY]  final  double[]  dataRow  =  v.dataRows.getDataRowDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =  v.dataRows.getDataRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =  v.dataRows.getDataRowDimension();	  final    double[]    dataRow    =    v.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  maxColSum  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  maxColSum)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    maxColSum)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  maxColSum	60	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  v  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRows;  i++)  {  v  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRows;  i++)  {  v  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
204	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][dataRow.length];  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[dataRow.length][dataRow.length];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[dataRow.length][dataRow.length];	  double[][]    out    =    new    double[dataRow.length][v.length];    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
205	[BUG]  [BUGGY]  nCols  =  data.length  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  data.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  data.length  +  1;	  nCols    =    data.length;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
206	[BUG]  [BUGGY]  int  nSum  =  dataRow.length  -  2;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nSum  =  dataRow.length  -  2;  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nSum  =  dataRow.length  -  2;	  int    nSum    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	41	4	add
208	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	compilable	  [FE]  AssertionFailedError  	41	4	add
209	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	41	None	add
210	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [CE]  variable  nCols  is  already  defined  in  method  operate(double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  int  nCols  =  this.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int  nCols  =  this.getColumnDimension();	  	non-compiled	[CE]  variable  nCols  is  already  defined  in  method  operate(double[])	41	None	add
211	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	62	None	replace
212	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	62	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  int  i  =  0;  i  <  row;  i++)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  int  i  =  0;  i  <  row;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    int  i  =  0;  i  <  row;  i++)  {	  	non-compiled	[CE]  >  expected	94	None	add
214	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  (int  i  =  0;  i  <  row;  i++)  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  (int  i  =  0;  i  <  row;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    row;    i++)    {    (int  i  =  0;  i  <  row;  i++)  {	  	non-compiled	[CE]  ')'  expected	94	None	add
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  (int  i  =  0;  i  <  data.length;  i++)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  (int  i  =  0;  i  <  data.length;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    data.length;    i++)    {    (int  i  =  0;  i  <  data.length;  i++)  {	  	non-compiled	[CE]  ')'  expected	53	None	add
216	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  *  dataRow.length];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  *  dataRow.length];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[dataRow.length][columnDimension  *  dataRow.length];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
217	[BUG]  [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  -  1];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[dataRow.length][columnDimension  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[dataRow.length][columnDimension  -  1];	  double[][]    out    =    new    double[dataRow.length][columnDimension];    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
218	[BUG]  [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][column];  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[][]  out  =  new  double[dataRow.length][column];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[][]  out  =  new  double[dataRow.length][column];	  final    double[][]    out    =    new    double[dataRow.length][row];    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
219	[BUG]  [BUGGY]  dataRow.length  =  dataRow.length  -  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  dataRow.length  =  dataRow.length  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	dataRow.length  =  dataRow.length  -  1;	  dataRow.length    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
220	[BUG]  [BUGGY]  dataRow.length  =  dataRow.length  +  1;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  dataRow.length  =  dataRow.length  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	dataRow.length  =  dataRow.length  +  1;	  dataRow.length    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	65	None	add
222	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(r[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  if(r[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  if(r[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  -  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  dataRow.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	2	4	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  -  1;  i++)  {  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  dataRow.length  -  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  dataRow.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	2	4	replace
225	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension()  *  dataRow.length;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nCols  =  this.getColumnDimension()  *  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nCols  =  this.getColumnDimension()  *  dataRow.length;	  final    int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  if(dataRow[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	63	None	add
227	[BUG]  [BUGGY]  Double  nCols  =  this.getColumnDimension()  +  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  Double  nCols  =  this.getColumnDimension()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	Double  nCols  =  this.getColumnDimension()  +  1;	  Double    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
228	[BUG]  [BUGGY]  while(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  while(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	while(v.length!=  nCols)  {  for(int  i  =  0;  i  <  nRows;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }	  if(v.length    ==    nCols)    {    for(int    i    =    0;    i    <    nRows;    ++i)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	91	None	replace
229	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    int  i  =  0;  i  <  nRows;  i++)  {  if(v[i]  >  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  	non-compiled	[CE]  >  expected	61	None	add
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  (int  i  =  0;  i  <  nRows;  i++)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  (int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  (int  i  =  0;  i  <  nRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    (int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  ')'  expected	77	None	replace
231	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  nRows;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  nRows;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  final  int  i  =  0;  i  <  nRows;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    (int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  >  expected	77	None	replace
232	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	66	None	replace
233	[BUG]  [BUGGY]  nCols  =  dataRow.length  *  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  dataRow.length  *  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  dataRow.length  *  1;	  nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  (int  i  =  0;  i  <  nRows  +  1;  i++)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  (int  i  =  0;  i  <  nRows  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    (int  i  =  0;  i  <  nRows  +  1;  i++)  {	  	non-compiled	[CE]  ')'  expected	31	None	add
235	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCOLs;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCOLs;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCOLs;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int    i    =    0;    i    <    nCOLs;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
236	[BUG]  [BUGGY]  final  int  nCols  =  this.getColumnDimension()  *  row;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nCols  =  this.getColumnDimension()  *  row;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nCols  =  this.getColumnDimension()  *  row;	  final    int    nCols    =    this.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
237	[BUG]  [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	                for(int        i        =        0;        i        <        nCols;        i++)        {        sum        +=        dataRow[i]        *        v[i];        }        for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    for(int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  for(int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
238	[BUG]  [BUGGY]  final  int  nRows  =  this.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  int  nRows  =  this.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  int  nRows  =  this.getColumnDimension();	  final    int    nRows    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
239	[BUG]  [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row,  dataRow.length;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  nCols  =  this.getColumnDimension()  +  row,  dataRow.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  nCols  =  this.getColumnDimension()  +  row,  dataRow.length;	  int    nCols    =    this.getColumnDimension()    +    dataRow.length;    	non-compiled	[CE]  ';'  expected	75	None	replace
240	[BUG]  [BUGGY]  final  double[]  v  =  this.getEntryDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  v  =  this.getEntryDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  v  =  this.getEntryDimension();	  final    double[]    v    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
241	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  Integer  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	Integer  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    Integer    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	72	None	replace
242	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  Integer  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	Integer  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    Integer    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	72	None	replace
243	[BUG]  [BUGGY]  int  i  =  0;  i  <  nCols;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  int  i  =  0;  i  <  nCols;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	int  i  =  0;  i  <  nCols;  i++)  {	  for(int    i    =    0;    i    <    nRows;    i++)    {    int    i    =    0;    i    <    nRows;    i++)    {    	non-compiled	[CE]  >  expected	76	None	replace
244	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  v  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  v  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    v    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
245	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  v  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  v  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  v  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    dataRow.length;    i++)    {    v    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v.length)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nRows;  i++)  {  if(data[i]  >  v.length)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    maxColSum)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	60	None	replace
247	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(data[i]  *  v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	64	None	replace
248	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
249	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  ==  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	2	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >=  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >=  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	64	4	replace
251	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >=  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >=  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(dataRow[i]  *  v[i]  >=  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(dataRow[i]    *    v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	64	4	replace
252	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][data.length];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[v.length][data.length];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[v.length][data.length];	  double[][]    out    =    new    double[v.length][row];    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
253	[BUG]  [BUGGY]  double  nCols  =  data.length;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double  nCols  =  data.length;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double  nCols  =  data.length;	  double    nCols    =    dataRow.length;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
254	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  row;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  row;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  row;  ++i)  {  sum  +=  dataRow[i]  *  v[i];  }	  if(v.length    ==    nCols)    {    for(int    i    =    0;    i    <    nRows;    ++i)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	91	None	replace
255	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row.length  +  1;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row.length  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  row.length  +  1;  i++)  {	  for(int    i    =    0;    i    <    dataRow.length    +    1;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
256	[BUG]  [BUGGY]  total  +=  dataRow[0]  *  v[i];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  total  +=  dataRow[0]  *  v[i];  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	total  +=  dataRow[0]  *  v[i];	  total    +=    dataRow[i]    *    v[i];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
257	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  sum  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    data.length;    i++)    {    sum    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	          for(int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    int    i    =    0;    i    <    nCols;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  data.length;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	66	4	replace
260	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(v[i]  >  0)  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    0)    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	66	4	replace
261	[BUG]  [BUGGY]  nCols  =  row  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  nCols  =  row  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	nCols  =  row  +  1;	  nCols    =    dataRow.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
262	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  v  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  v.length;  i++)  {  v  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  v.length;  i++)  {  v  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    dataRows.length;    i++)    {    v    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
263	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  cannot  find  symbol  i  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	if(v.length  ==  nCols)  {  for(int  i  =  0;  i  <  row;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  if(v.length    ==    nCols)    {    for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  cannot  find  symbol  i	90	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	add	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	62	4	replace
265	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nCols;  i++)  {  if(v[i]  >=  dataRow[i])  {  sum  +=  dataRow[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    if(v[i]    >    dataRow[i])    {    sum    +=    dataRow[i]    *    v[i];    }    	compilable	  [FE]  AssertionFailedError  	62	4	replace
266	[BUG]  [BUGGY]  if(v.length  ==  nCols)  {  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  if(v.length  ==  nCols)  {  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	if(v.length  ==  nCols)  {  int  i  =  0;  i  <  nRows;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }	  int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    dataRow[i]    *    v[i];    }    	non-compiled	[CE]  >  expected	59	None	replace
267	[BUG]  [BUGGY]  double[][]  out  =  new  double[v.length][4];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  double[][]  out  =  new  double[v.length][4];  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	double[][]  out  =  new  double[v.length][4];	  double[][]    out    =    new    double[v.length][1];    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
268	[BUG]  [BUGGY]  final  double[]  dataRow  =(v.length  <  nRows)?  this.getDataRowDimension()  :  v.getDataRowDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =(v.length  <  nRows)?  this.getDataRowDimension()  :  v.getDataRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =(v.length  <  nRows)?  this.getDataRowDimension()  :  v.getDataRowDimension();	  final    double[]    dataRow    =    v.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
269	[BUG]  [BUGGY]  final  double[]  dataRow  =(v.length  <  nCols)?  this.getDataRowDimension()  :  v.getDataRowDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  dataRow  =(v.length  <  nCols)?  this.getDataRowDimension()  :  v.getDataRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  dataRow  =(v.length  <  nCols)?  this.getDataRowDimension()  :  v.getDataRowDimension();	  final    double[]    dataRow    =    v.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
270	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  FOR(int  i  =  0;  i  <  nRows  +  1;  i++)  {  [CE]  '.class'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nRows  +  1;  i++)  {  FOR(int  i  =  0;  i  <  nRows  +  1;  i++)  {  [BUGGY]      sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int    i    =    0;    i    <    nRows    +    1;    i++)    {    FOR(int  i  =  0;  i  <  nRows  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	31	None	add
271	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  data[i]  *  v[i];  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  data[i]  *  v[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	for(int  i  =  0;  i  <  nSum;  i++)  {  sum  +=  data[i]  *  v[i];  }	  for(int    i    =    0;    i    <    nRows;    i++)    {    sum    +=    data[i]    *    v[i];    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
272	[BUG]  [BUGGY]  final  double[]  vRows  =  this.getDataRowDimension();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  vRows  =  this.getDataRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  vRows  =  this.getDataRowDimension();	  final    double[]    vRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
273	[BUG]  [BUGGY]  final  double[]  vRow  =  this.getRealDimension();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  double[]  operate(double[]  v)  throws  IllegalArgumentException  {  final  int  nRows  =  this.getRowDimension();  final  int  nCols  =  this.getColumnDimension();  if  (v.length  !=  nCols)  {  throw  new  IllegalArgumentException(     "vector  has  wrong  length     ");  }  final  double[]  out  =  new  double[v.length];  for  (int  row  =  0;  row  <  nRows;  row++)  {  final  double[]  dataRow  =  data[row];  double  sum  =  0;      [BUGGY]  final  double[]  vRow  =  this.getRealDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nCols;  i++)  {  sum  +=  dataRow[i]  *  v[i];  }  out[row]  =  sum;  }  return  out;  }  [CLASS]  RealMatrixImpl  [METHOD]  operate  [RETURN_TYPE]  double[]  double[]  v  [VARIABLES]  boolean  double[]  dataRow  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  	projects/Math98/src/java/org/apache/commons/math/linear/RealMatrixImpl.java	0.4082482904638631	783	783	2	replace	final  double[]  vRow  =  this.getRealDimension();	  final    double[]    vRow    =    this.getDataRowDimension();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
