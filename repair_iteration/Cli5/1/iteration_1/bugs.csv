bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {	if  (str.startsWith( "-- "))  {  	compilable	  [FE]  NullPointerException  	1	2	replace
2	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [FE]  NullPointerException  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {	if  (str.startsWith( "-- "))  {  	compilable	  [FE]  NullPointerException  	1	2	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( "- "))  {	if  (str.startsWith( "-- "))  {  	compilable	  [FE]  ComparisonFailure  	1	2	replace
4	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "- "))  {	if  (str.startsWith( "-- "))  {  	compilable	  [FE]  ComparisonFailure  	1	2	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	if  (str.startsWith( "-- "))  {  	compilable	  [FE]  ComparisonFailure  	1	2	replace
6	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [FE]  ComparisonFailure  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	if  (str.startsWith( "-- "))  {  	compilable	  [FE]  ComparisonFailure  	1	2	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	  	if  (str.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  [BUGGY]  if  (str.startsWith( "-- "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());		non-compiled	[CE]  illegal  start  of  expression	2	None	add
9	[BUG]  [BUGGY]    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]  if  (str.startsWith( "-- "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
10	[BUG]  [BUGGY]    String  str  =(String)this.stripLeadingHyphens.get(str);  [CE]  variable  str  is  already  defined  in  method  stripLeadingHyphens(String)  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    String  str  =(String)this.stripLeadingHyphens.get(str);  [BUGGY]  if  (str.startsWith( "-- "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	    String  str  =(String)this.stripLeadingHyphens.get(str);		non-compiled	[CE]  variable  str  is  already  defined  in  method  stripLeadingHyphens(String)	2	None	add
11	[BUG]  [BUGGY]    String  str  =  getStripLeadingHyphens();  [CE]  variable  str  is  already  defined  in  method  stripLeadingHyphens(String)  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    String  str  =  getStripLeadingHyphens();  [BUGGY]  if  (str.startsWith( "-- "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	    String  str  =  getStripLeadingHyphens();		non-compiled	[CE]  variable  str  is  already  defined  in  method  stripLeadingHyphens(String)	2	None	add
12	[BUG]  [BUGGY]    while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  [CE]  illegal  start  of  expression  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  [BUGGY]  if  (str.startsWith( "-- "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	    while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());		non-compiled	[CE]  illegal  start  of  expression	2	None	add
13	[BUG]  [BUGGY]    String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());  [CE]  variable  str  is  already  defined  in  method  stripLeadingHyphens(String)  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());  [BUGGY]  if  (str.startsWith( "-- "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	    String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length());		non-compiled	[CE]  variable  str  is  already  defined  in  method  stripLeadingHyphens(String)	2	None	add
14	[BUG]  [BUGGY]    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]  if  (str.startsWith( "-- "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length()  -  2);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
15	[BUG]  [BUGGY]    }  else  if(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    }  else  if(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]  if  (str.startsWith( "-- "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	    }  else  if(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(str.endsWith( ".java "))  {  [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.endsWith( ".java "))  {	if  (str.startsWith( "-- "))  {  	compilable	  [FE]  ComparisonFailure  	1	2	replace
17	[BUG]  [BUGGY]  if(str.endsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(str.endsWith( ".java "))  {  [BUGGY]  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith( ".java "))  {	if  (str.startsWith( "-- "))  {  	compilable	  [FE]  ComparisonFailure  	1	2	replace
